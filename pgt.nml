# 1 "pgt.pnml"
disable_item(FEAT_TRAINS);
# 1 "src/CODE/header.pnml" 1
grf{
	grfid: "PGTS" ;
	name: string(STR_GRF_NAME) ;
	desc: string(STR_GRF_DESC) ;
	version: 2 ;
	min_compatible_version: 1 ;
}


train_width_32_px  = 1 ;
traininfo_y_offset = 2 ;
// Tractive Effort Coefficient = Actual Tractive effort / Weight / 10

//Modifying base costs
# 1 "pgt.pnml" 2
# 1 "src/CODE/alignments.pnml" 1
//template_x_y where x is length and y is no. views

template template_purchase_short(x,y){
	[ x, y, 55, 12, -39, -8]
}

template base_32bpp(){
	[0,0,1,1,0,0,"gfx/TEMPLATES/blank.png"] //North
	[0,0,1,1,0,0,"gfx/TEMPLATES/blank.png"] //North East
	[0,0,1,1,0,0,"gfx/TEMPLATES/blank.png"] //East
	[0,0,1,1,0,0,"gfx/TEMPLATES/blank.png"] //South East
	[0,0,1,1,0,0,"gfx/TEMPLATES/blank.png"] //South
	[0,0,1,1,0,0,"gfx/TEMPLATES/blank.png"] //South West
	[0,0,1,1,0,0,"gfx/TEMPLATES/blank.png"] //West
	[0,0,1,1,0,0,"gfx/TEMPLATES/blank.png"] //North West
}

spriteset(gfx_blank){base_32bpp()}

template template_32(x,y){
    [ x+88 , y, 8 , 24,  -3, -14] 
    [ x+97 , y, 22, 20, -16, -11]
    [ x+120, y, 32, 16, -14, -12]
    [ x+153, y, 22, 20,  -4, -11]
    [ x    , y, 8 , 24,  -3, -14]
    [ x+9  , y, 22, 20, -16, -11]
    [ x+32 , y, 32, 16, -14, -12]
    [ x+65 , y, 22, 20,  -4, -11]
}

template template_32_r(x,y){
    [ x    , y, 8 , 24,  -3, -14]
    [ x+9  , y, 22, 20, -16, -11]
    [ x+32 , y, 32, 16, -14, -12]
    [ x+65 , y, 22, 20,  -4, -11]
    [ x+88 , y, 8 , 24,  -3, -14] 
    [ x+97 , y, 22, 20, -16, -11]
    [ x+120, y, 32, 16, -14, -12]
    [ x+153, y, 22, 20,  -4, -11]
}

template template_24(x,y){
    [ x+88 , y, 8 , 24,  -3, -14] 
    [ x+97 , y, 22, 20, -16, -11]
    [ x+120, y, 32, 16, -14, -12]
    [ x+153, y, 22, 20,  -4, -11]
    [ x    , y, 8 , 24,  -3, -14]
    [ x+9  , y, 22, 20, -16, -11]
    [ x+32 , y, 32, 16, -14, -12]
    [ x+65 , y, 22, 20,  -4, -11]
}

template template_24_r(x,y){
    [ x    , y, 8 , 24,  -3, -14]
    [ x+9  , y, 22, 20, -16, -11]
    [ x+32 , y, 32, 16, -14, -12]
    [ x+65 , y, 22, 20,  -4, -11]
    [ x+88 , y, 8 , 24,  -3, -14] 
    [ x+97 , y, 22, 20, -16, -11]
    [ x+120, y, 32, 16, -14, -12]
    [ x+153, y, 22, 20,  -4, -11]
}

template template_purchase(x,y){
	[ x, y, 63, 12, -14, -8]
}
# 1 "pgt.pnml" 2
# 1 "src/CODE/cargo_table.pnml" 1
cargotable {
//Default cargos
   PASS, MAIL, COAL, FOOD, GOLD, GOOD, GRAI, IORE, LVST, OIL_, PAPR, STEL, VALU, WHEA, WOOD,

//Tropical cargos
   CORE, DIAM, FRUT, MAIZ, RUBR, WATR, 

//ECS
   AORE, BDMT, BRCK, CERA, CERE, CMNT, DYES, FERT, FICR, FISH, GLAS, LIME, OLSD, PETR, PLAS, POTA, RFPR, SAND, SULP, TOUR, VEHI, WDPR, WOOL, 
   
//FIRS
   BEAN, BEER, BOOM, CLAY, CASS, COKE, ENSP, EOIL, FMSP, FRVG, GRVL, IRON, METL, MNO2, MILK, MNSP, NICK, NITR, NUTS, PHOS, PIPE, PORE, QLME, RCYC, SASH, SCMT, SGBT, SGCN, SLAG, VBOD, VPTS, JAVA, COPR, SUGR, ZINC,
   
   SCRP, //Old scrap metal
   
//Nuclear stuff
	URAN, NWST,
	
//OTIS

	OTI1, OTI2
}
# 1 "pgt.pnml" 2
# 1 "src/CODE/railtype_table.pnml" 1
railtypetable {
    RAIL, 
	ELRL,
	SAA3: ["3RDR", ELRL],
	SAAZ: ["3RDC", ELRL],
	SAA4: ["3RDR", SAA3, ELRL],
	NAAN: [NAAN, NRGL, NRWG]
}
# 1 "pgt.pnml" 2
# 1 "src/CODE/visual_effects.pnml" 1
switch (FEAT_TRAINS, SELF, vfx_ohle, [STORE_TEMP(create_effect(EFFECT_SPRITE_ELECTRIC, 0, 0, 10), 0x100)]) {
    return 1;
}

switch (FEAT_TRAINS, SELF, vfx_3rd, [STORE_TEMP(create_effect(EFFECT_SPRITE_ELECTRIC, 0, 0, -7), 0x100)]) {
    return 1;
}

switch (FEAT_TRAINS, SELF, vfx_diesel_default, [STORE_TEMP(create_effect(EFFECT_SPRITE_DIESEL, 0, 0, 10), 0x100)]) {
    return 1;
}

switch(FEAT_TRAINS, SELF, vfx_dual_voltage, current_railtype){
	SAA3: vfx_3rd;
	vfx_ohle;
}

switch(FEAT_TRAINS, SELF, vfx_3rd_only, current_railtype){
	SAA3: vfx_3rd;
	return 0;
}

switch(FEAT_TRAINS, SELF, vfx_ohle_only, current_railtype){
	ELRL: vfx_ohle;
	SAAZ: vfx_ohle;
	return 0;
}

switch(FEAT_TRAINS, SELF, vfx_steam, [STORE_TEMP(create_effect(EFFECT_SPRITE_STEAM, 0, 0, 10), 0x100)]) {
    return 1;
}
# 1 "pgt.pnml" 2

# 1 "src/WAGON/MU_Coach.pnml" 1
spriteset(spriteset_pgt_mu_coach_placeholder,  "gfx/EMU - Suburban/1974_SDD_SilverSider.png") {template_32(7, 89)}

spriteset(spriteset_pgt_mu_coach_purchase, "gfx/MUCar.png") {template_purchase(1, 1)}

switch(FEAT_TRAINS, PARENT, sw_pgt_mu_coach_coupling_restrictions, vehicle_type_id) {
    return string(STR_NO_COUPLE);
}

item (FEAT_TRAINS, item_pgt_mu_coach) {
	property {
		name: 							string(STR_NAME_WAGON_MU);
		climates_available: 			ALL_CLIMATES;
		introduction_date:				date(1900, 1, 1);
		model_life:						VEHICLE_NEVER_EXPIRES;
		retire_early:					1;
		vehicle_life:					50;
		reliability_decay:				7;
		refittable_cargo_classes:		CC_PASSENGERS;
		cargo_allow_refit:				[PASS, TOUR, MAIL];
		loading_speed:					29;
		cost_factor:					58;
		running_cost_factor:			34;
		sprite_id:						SPRITE_ID_NEW_TRAIN;
		speed:							100 mph;
		misc_flags:						bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_TILT);
		refit_cost:						0;
		track_type:						RAIL;
		ai_special_flag:				AI_FLAG_CARGO;
		power:							0 hp;
		running_cost_base:				RUNNING_COST_NONE;
		dual_headed:					0;
		default_cargo_type:				PASS;
		cargo_capacity:					35;
		weight:							40 ton;
		tractive_effort_coefficient:	0.07;
		air_drag_coefficient:			0.08;
		length:							8;
		bitmask_vehicle_info:			0;
		cargo_age_period:				185;
	}
	graphics {
	can_attach_wagon:					sw_pgt_mu_coach_coupling_restrictions;
	default: 							spriteset_pgt_mu_coach_placeholder;
	purchase:							spriteset_pgt_mu_coach_purchase;
}
}
# 1 "pgt.pnml" 2

# 1 "src/WAGON/Suburban Coaches/1870_ssd_coach.pnml" 1
spriteset(spriteset_1870_ssd_coach,   "gfx/Passenger Stock/Suburban Coaches/1870_ssd_coach.png") {template_24(7, 39)}
spriteset(spriteset_1870_ssd_coach_g,   "gfx/Passenger Stock/Suburban Coaches/1870_ssd_coach.png") {template_24(7, 82)}

switch(FEAT_TRAINS, SELF, sw_1870_ssd_coach_guardcheck, position_in_consist_from_end){
	0 : spriteset_1870_ssd_coach_g;
	return spriteset_1870_ssd_coach;
}

item (FEAT_TRAINS, item_1870_ssd_coach) {
	property {
		climates_available: 			ALL_CLIMATES;
		retire_early:					1;
		vehicle_life:					40;
		reliability_decay:				7;
		refittable_cargo_classes:		CC_PASSENGERS;
		cargo_allow_refit:				[PASS, TOUR];
		sprite_id:						SPRITE_ID_NEW_TRAIN;
		misc_flags:						bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_TILT);
		refit_cost:						0;
		track_type:						RAIL;
		ai_special_flag:				AI_FLAG_CARGO;
		power:							0 hp;
		running_cost_base:				RUNNING_COST_NONE;
		dual_headed:					0;
		default_cargo_type:				PASS;
		air_drag_coefficient:			0.08;
		bitmask_vehicle_info:			0;
		
		model_life:						40;
		
		length:							6;
		cost_factor:                    1;
		running_cost_factor:            1;
        loading_speed:                	5; 
		
		name: 							string(str_name_1870_ssd_coach);
		introduction_date:				date(1870, 1, 1);
		
        speed:                        	60 km/h;
		weight:							15 ton;
		cargo_capacity:					30;
	}
	graphics {
	default: 							sw_1870_ssd_coach_guardcheck;
	purchase:							spriteset_1870_ssd_coach;
}
}
# 1 "pgt.pnml" 2
# 1 "src/WAGON/Suburban Coaches/1890_ssd_coach.pnml" 1
spriteset(spriteset_1890_ssd_coach,   "gfx/Passenger Stock/Suburban Coaches/1890_ssd_coach.png") {template_32(7, 39)}
spriteset(spriteset_1890_ssd_coach_g,   "gfx/Passenger Stock/Suburban Coaches/1890_ssd_coach.png") {template_32(7, 82)}

switch(FEAT_TRAINS, SELF, sw_1890_ssd_coach_guardcheck, position_in_consist_from_end){
	0 : spriteset_1890_ssd_coach_g;
	return spriteset_1890_ssd_coach;
}

item (FEAT_TRAINS, item_1890_ssd_coach) {
	property {
		climates_available: 			ALL_CLIMATES;
		retire_early:					1;
		vehicle_life:					40;
		reliability_decay:				7;
		refittable_cargo_classes:		CC_PASSENGERS;
		cargo_allow_refit:				[PASS, TOUR];
		sprite_id:						SPRITE_ID_NEW_TRAIN;
		misc_flags:						bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_TILT);
		refit_cost:						0;
		track_type:						RAIL;
		ai_special_flag:				AI_FLAG_CARGO;
		power:							0 hp;
		running_cost_base:				RUNNING_COST_NONE;
		dual_headed:					0;
		default_cargo_type:				PASS;
		air_drag_coefficient:			0.08;
		bitmask_vehicle_info:			0;
		
		model_life:						40;
		
		length:							8;
		cost_factor:                    1;
		running_cost_factor:            1;
        loading_speed:                	5; 
		
		name: 							string(str_name_1890_ssd_coach);
		introduction_date:				date(1890, 1, 1);
		
        speed:                        	60 km/h;
		weight:							20 ton;
		cargo_capacity:					80;
	}
	graphics {
	default: 							sw_1890_ssd_coach_guardcheck;
	purchase:							spriteset_1890_ssd_coach;
}
}
# 1 "pgt.pnml" 2
# 1 "src/WAGON/Suburban Coaches/1910_ssd_coach.pnml" 1
spriteset(spriteset_1910_ssd_coach,   "gfx/Passenger Stock/Suburban Coaches/1910_ssd_coach.png") {template_32(7, 39)}
spriteset(spriteset_1910_ssd_coach_g,   "gfx/Passenger Stock/Suburban Coaches/1910_ssd_coach.png") {template_32(7, 82)}

switch(FEAT_TRAINS, SELF, sw_1910_ssd_coach_guardcheck, position_in_consist_from_end){
	0 : spriteset_1910_ssd_coach_g;
	return spriteset_1910_ssd_coach;
}

item (FEAT_TRAINS, item_1910_ssd_coach) {
	property {
		climates_available: 			ALL_CLIMATES;
		retire_early:					1;
		vehicle_life:					40;
		reliability_decay:				7;
		refittable_cargo_classes:		CC_PASSENGERS;
		cargo_allow_refit:				[PASS, TOUR];
		sprite_id:						SPRITE_ID_NEW_TRAIN;
		misc_flags:						bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_TILT);
		refit_cost:						0;
		track_type:						RAIL;
		ai_special_flag:				AI_FLAG_CARGO;
		power:							0 hp;
		running_cost_base:				RUNNING_COST_NONE;
		dual_headed:					0;
		default_cargo_type:				PASS;
		air_drag_coefficient:			0.08;
		bitmask_vehicle_info:			0;
		
		model_life:						40;
		
		length:							8;
		cost_factor:                    1;
		running_cost_factor:            1;
        loading_speed:                	5; 
		
		name: 							string(str_name_1910_ssd_coach);
		introduction_date:				date(1910, 1, 1);
		
        speed:                        	80 km/h;
		weight:							20 ton;
		cargo_capacity:					90;
	}
	graphics {
	default: 							sw_1910_ssd_coach_guardcheck;
	purchase:							spriteset_1910_ssd_coach;
}
}
# 1 "pgt.pnml" 2
# 1 "src/WAGON/Suburban Coaches/1930_ssd_coach.pnml" 1
spriteset(spriteset_1930_ssd_coach,   "gfx/Passenger Stock/Suburban Coaches/1930_ssd_coach.png") {template_32(7, 39)}
spriteset(spriteset_1930_ssd_coach_g,   "gfx/Passenger Stock/Suburban Coaches/1930_ssd_coach.png") {template_32(7, 82)}

switch(FEAT_TRAINS, SELF, sw_1930_ssd_coach_guardcheck, position_in_consist_from_end){
	0 : spriteset_1930_ssd_coach_g;
	return spriteset_1930_ssd_coach;
}

item (FEAT_TRAINS, item_1930_ssd_coach) {
	property {
		climates_available: 			ALL_CLIMATES;
		retire_early:					1;
		vehicle_life:					40;
		reliability_decay:				7;
		refittable_cargo_classes:		CC_PASSENGERS;
		cargo_allow_refit:				[PASS, TOUR];
		sprite_id:						SPRITE_ID_NEW_TRAIN;
		misc_flags:						bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_TILT);
		refit_cost:						0;
		track_type:						RAIL;
		ai_special_flag:				AI_FLAG_CARGO;
		power:							0 hp;
		running_cost_base:				RUNNING_COST_NONE;
		dual_headed:					0;
		default_cargo_type:				PASS;
		air_drag_coefficient:			0.08;
		bitmask_vehicle_info:			0;
		
		model_life:						40;
		
		length:							8;
		cost_factor:                    1;
		running_cost_factor:            1;
        loading_speed:                	5; 
		
		name: 							string(str_name_1930_ssd_coach);
		introduction_date:				date(1930, 1, 1);
		
        speed:                        	80 km/h;
		weight:							30 ton;
		cargo_capacity:					100;
	}
	graphics {
	default: 							sw_1930_ssd_coach_guardcheck;
	purchase:							spriteset_1930_ssd_coach;
}
}
# 1 "pgt.pnml" 2
# 1 "src/WAGON/Suburban Coaches/1950_ssd_coach.pnml" 1
spriteset(spriteset_1950_ssd_coach,   "gfx/Passenger Stock/Suburban Coaches/1950_ssd_coach.png") {template_32(7, 39)}
spriteset(spriteset_1950_ssd_coach_g,   "gfx/Passenger Stock/Suburban Coaches/1950_ssd_coach.png") {template_32(7, 82)}

switch(FEAT_TRAINS, SELF, sw_1950_ssd_coach_guardcheck, position_in_consist_from_end){
	0 : spriteset_1950_ssd_coach_g;
	return spriteset_1950_ssd_coach;
}

item (FEAT_TRAINS, item_1950_ssd_coach) {
	property {
		climates_available: 			ALL_CLIMATES;
		retire_early:					1;
		vehicle_life:					40;
		reliability_decay:				7;
		refittable_cargo_classes:		CC_PASSENGERS;
		cargo_allow_refit:				[PASS, TOUR];
		sprite_id:						SPRITE_ID_NEW_TRAIN;
		misc_flags:						bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_TILT);
		refit_cost:						0;
		track_type:						RAIL;
		ai_special_flag:				AI_FLAG_CARGO;
		power:							0 hp;
		running_cost_base:				RUNNING_COST_NONE;
		dual_headed:					0;
		default_cargo_type:				PASS;
		air_drag_coefficient:			0.08;
		bitmask_vehicle_info:			0;
		
		model_life:						40;
		
		length:							8;
		cost_factor:                    1;
		running_cost_factor:            1;
        loading_speed:                	5; 
		
		name: 							string(str_name_1950_ssd_coach);
		introduction_date:				date(1950, 1, 1);
		
        speed:                        	100 km/h;
		weight:							30 ton;
		cargo_capacity:					110;
	}
	graphics {
	default: 							sw_1950_ssd_coach_guardcheck;
	purchase:							spriteset_1950_ssd_coach;
}
}
# 1 "pgt.pnml" 2
# 1 "src/WAGON/Suburban Coaches/1970_ssd_coach.pnml" 1
spriteset(spriteset_1970_ssd_coach,   "gfx/Passenger Stock/Suburban Coaches/1970_ssd_coach.png") {template_32(7, 39)}
spriteset(spriteset_1970_ssd_coach_g,   "gfx/Passenger Stock/Suburban Coaches/1970_ssd_coach.png") {template_32(7, 82)}

switch(FEAT_TRAINS, SELF, sw_1970_ssd_coach_guardcheck, position_in_consist_from_end){
	0 : spriteset_1970_ssd_coach_g;
	return spriteset_1970_ssd_coach;
}

item (FEAT_TRAINS, item_1970_ssd_coach) {
	property {
		climates_available: 			ALL_CLIMATES;
		retire_early:					1;
		vehicle_life:					40;
		reliability_decay:				7;
		refittable_cargo_classes:		CC_PASSENGERS;
		cargo_allow_refit:				[PASS, TOUR];
		sprite_id:						SPRITE_ID_NEW_TRAIN;
		misc_flags:						bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_TILT);
		refit_cost:						0;
		track_type:						RAIL;
		ai_special_flag:				AI_FLAG_CARGO;
		power:							0 hp;
		running_cost_base:				RUNNING_COST_NONE;
		dual_headed:					0;
		default_cargo_type:				PASS;
		air_drag_coefficient:			0.08;
		bitmask_vehicle_info:			0;
		
		model_life:						40;
		
		length:							8;
		cost_factor:                    1;
		running_cost_factor:            1;
        loading_speed:                	5; 
		
		name: 							string(str_name_1970_ssd_coach);
		introduction_date:				date(1970, 1, 1);
		
        speed:                        	100 km/h;
		weight:							30 ton;
		cargo_capacity:					115;
	}
	graphics {
	default: 							sw_1970_ssd_coach_guardcheck;
	purchase:							spriteset_1970_ssd_coach;
}
}
# 1 "pgt.pnml" 2
# 1 "src/WAGON/Suburban Coaches/1990_ssd_coach.pnml" 1
spriteset(spriteset_1990_ssd_coach,   "gfx/Passenger Stock/Suburban Coaches/1990_ssd_coach.png") {template_32(7, 39)}
spriteset(spriteset_1990_ssd_coach_g,   "gfx/Passenger Stock/Suburban Coaches/1990_ssd_coach.png") {template_32(7, 82)}

switch(FEAT_TRAINS, SELF, sw_1990_ssd_coach_guardcheck, position_in_consist_from_end){
	0 : spriteset_1990_ssd_coach_g;
	return spriteset_1990_ssd_coach;
}

item (FEAT_TRAINS, item_1990_ssd_coach) {
	property {
		climates_available: 			ALL_CLIMATES;
		retire_early:					1;
		vehicle_life:					40;
		reliability_decay:				7;
		refittable_cargo_classes:		CC_PASSENGERS;
		cargo_allow_refit:				[PASS, TOUR];
		sprite_id:						SPRITE_ID_NEW_TRAIN;
		misc_flags:						bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_TILT);
		refit_cost:						0;
		track_type:						RAIL;
		ai_special_flag:				AI_FLAG_CARGO;
		power:							0 hp;
		running_cost_base:				RUNNING_COST_NONE;
		dual_headed:					0;
		default_cargo_type:				PASS;
		air_drag_coefficient:			0.08;
		bitmask_vehicle_info:			0;
		
		model_life:						40;
		
		length:							8;
		cost_factor:                    1;
		running_cost_factor:            1;
        loading_speed:                	5; 
		
		name: 							string(str_name_1990_ssd_coach);
		introduction_date:				date(1990, 1, 1);
		
        speed:                        	115 km/h;
		weight:							30 ton;
		cargo_capacity:					120;
	}
	graphics {
	default: 							sw_1990_ssd_coach_guardcheck;
	purchase:							spriteset_1990_ssd_coach;
}
}
# 1 "pgt.pnml" 2
# 1 "src/WAGON/Suburban Coaches/2010_ssd_coach.pnml" 1
spriteset(spriteset_2010_ssd_coach,   "gfx/Passenger Stock/Suburban Coaches/2010_ssd_coach.png") {template_32(7, 39)}
spriteset(spriteset_2010_ssd_coach_g,   "gfx/Passenger Stock/Suburban Coaches/2010_ssd_coach.png") {template_32(7, 82)}

switch(FEAT_TRAINS, SELF, sw_2010_ssd_coach_guardcheck, position_in_consist_from_end){
	0 : spriteset_2010_ssd_coach_g;
	return spriteset_2010_ssd_coach;
}

item (FEAT_TRAINS, item_2010_ssd_coach) {
	property {
		climates_available: 			ALL_CLIMATES;
		retire_early:					1;
		vehicle_life:					40;
		reliability_decay:				7;
		refittable_cargo_classes:		CC_PASSENGERS;
		cargo_allow_refit:				[PASS, TOUR];
		sprite_id:						SPRITE_ID_NEW_TRAIN;
		misc_flags:						bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_TILT);
		refit_cost:						0;
		track_type:						RAIL;
		ai_special_flag:				AI_FLAG_CARGO;
		power:							0 hp;
		running_cost_base:				RUNNING_COST_NONE;
		dual_headed:					0;
		default_cargo_type:				PASS;
		air_drag_coefficient:			0.08;
		bitmask_vehicle_info:			0;
		
		model_life:						40;
		
		length:							8;
		cost_factor:                    1;
		running_cost_factor:            1;
        loading_speed:                	5; 
		
		name: 							string(str_name_2010_ssd_coach);
		introduction_date:				date(2010, 1, 1);
		
        speed:                        	130 km/h;
		weight:							30 ton;
		cargo_capacity:					120;
	}
	graphics {
	default: 							sw_2010_ssd_coach_guardcheck;
	purchase:							spriteset_2010_ssd_coach;
}
}
# 1 "pgt.pnml" 2

# 1 "src/WAGON/Freight Stock/Box Vans/1950_box_van.pnml" 1
spriteset(spriteset_1950_box_van_a,   "gfx/Freight Stock/Box Vans/1950_Box_Van_A_Default.png") {template_24(7, 39)}
spriteset(spriteset_1950_box_van_b,   "gfx/Freight Stock/Box Vans/1950_Box_Van_B_Default.png") {template_24(7, 39)}

random_switch(FEAT_TRAINS, SELF, sw_1950_box_van_randsprite){
	1: spriteset_1950_box_van_a;
	2: spriteset_1950_box_van_b;
}
item (FEAT_TRAINS, item_1950_box_van) {
	property {
		climates_available: 			ALL_CLIMATES;
		retire_early:					1;
		vehicle_life:					40;
		reliability_decay:				7;
		sprite_id:						SPRITE_ID_NEW_TRAIN;
		misc_flags:						bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_AUTOREFIT);
		refit_cost:						0;
		track_type:						RAIL;
		ai_special_flag:				AI_FLAG_CARGO;
		power:							0 hp;
		running_cost_base:				RUNNING_COST_NONE;
		dual_headed:					0;
		air_drag_coefficient:			0.08;
		bitmask_vehicle_info:			0;
		
		refittable_cargo_classes:		bitmask(CC_MAIL, CC_ARMOURED, CC_PIECE_GOODS, CC_EXPRESS) ;
		non_refittable_cargo_classes:	bitmask(CC_LIQUID) ;
		default_cargo_type:				MAIL;
		
		model_life:						40;
		
		length:							6;
		cost_factor:                    1;
		running_cost_factor:            1;
        loading_speed:                	5; 
		
		name: 							string(str_name_1950_box_van);
		introduction_date:				date(1950, 1, 1);
		
        speed:                        	100 km/h;
		weight:							20 ton;
		cargo_capacity:					30;
	}
	graphics {
	default: 							sw_1950_box_van_randsprite;
	purchase:							spriteset_1950_box_van_a;
}
}
# 1 "pgt.pnml" 2
# 1 "src/WAGON/Freight Stock/Box Vans/1970_box_van.pnml" 1
spriteset(spriteset_1970_box_van_a,   "gfx/Freight Stock/Box Vans/1970_box_van_A_Default.png") {template_32(7, 39)}
spriteset(spriteset_1970_box_van_b,   "gfx/Freight Stock/Box Vans/1970_box_van_B_Default.png") {template_32(7, 39)}

random_switch(FEAT_TRAINS, SELF, sw_1970_box_van_randsprite){
	1: spriteset_1970_box_van_a;
	2: spriteset_1970_box_van_b;
}
item (FEAT_TRAINS, item_1970_box_van) {
	property {
		climates_available: 			ALL_CLIMATES;
		retire_early:					1;
		vehicle_life:					40;
		reliability_decay:				7;
		sprite_id:						SPRITE_ID_NEW_TRAIN;
		misc_flags:						bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_AUTOREFIT);
		refit_cost:						0;
		track_type:						RAIL;
		ai_special_flag:				AI_FLAG_CARGO;
		power:							0 hp;
		running_cost_base:				RUNNING_COST_NONE;
		dual_headed:					0;
		air_drag_coefficient:			0.08;
		bitmask_vehicle_info:			0;
		
		refittable_cargo_classes:		bitmask(CC_MAIL, CC_ARMOURED, CC_PIECE_GOODS, CC_EXPRESS) ;
		non_refittable_cargo_classes:	bitmask(CC_LIQUID) ;
		default_cargo_type:				MAIL;
		
		model_life:						40;
		
		length:							8;
		cost_factor:                    1;
		running_cost_factor:            1;
        loading_speed:                	5; 
		
		name: 							string(str_name_1970_box_van);
		introduction_date:				date(1970, 1, 1);
		
        speed:                        	100 km/h;
		weight:							20 ton;
		cargo_capacity:					70;
	}
	graphics {
	default: 							sw_1970_box_van_randsprite;
	purchase:							spriteset_1970_box_van_a;
}
}
# 1 "pgt.pnml" 2
# 1 "src/WAGON/Freight Stock/Box Vans/1990_box_van.pnml" 1
spriteset(spriteset_1990_box_van_a,   "gfx/Freight Stock/Box Vans/1990_box_van_A_Default.png") {template_32(7, 39)}
spriteset(spriteset_1990_box_van_b,   "gfx/Freight Stock/Box Vans/1990_box_van_B_Default.png") {template_32(7, 39)}
spriteset(spriteset_1990_box_van_c,   "gfx/Freight Stock/Box Vans/1990_box_van_C_Default.png") {template_32(7, 39)}
spriteset(spriteset_1990_box_van_d,   "gfx/Freight Stock/Box Vans/1990_box_van_D_Default.png") {template_32(7, 39)}

random_switch(FEAT_TRAINS, SELF, sw_1990_box_van_randsprite){
	1: spriteset_1990_box_van_a;
	2: spriteset_1990_box_van_b;
	3: spriteset_1990_box_van_c;
	4: spriteset_1990_box_van_d;
}
item (FEAT_TRAINS, item_1990_box_van) {
	property {
		climates_available: 			ALL_CLIMATES;
		retire_early:					1;
		vehicle_life:					40;
		reliability_decay:				7;
		sprite_id:						SPRITE_ID_NEW_TRAIN;
		misc_flags:						bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_AUTOREFIT);
		refit_cost:						0;
		track_type:						RAIL;
		ai_special_flag:				AI_FLAG_CARGO;
		power:							0 hp;
		running_cost_base:				RUNNING_COST_NONE;
		dual_headed:					0;
		air_drag_coefficient:			0.08;
		bitmask_vehicle_info:			0;
		
		refittable_cargo_classes:		bitmask(CC_MAIL, CC_ARMOURED, CC_PIECE_GOODS, CC_EXPRESS) ;
		non_refittable_cargo_classes:	bitmask(CC_LIQUID) ;
		default_cargo_type:				MAIL;
		
		model_life:						40;
		
		length:							8;
		cost_factor:                    255;
		running_cost_factor:            255;
        loading_speed:                	5; 
		
		name: 							string(str_name_1990_box_van);
		introduction_date:				date(1990, 1, 1);
		
        speed:                        	115 km/h;
		weight:							20 ton;
		cargo_capacity:					80;
	}
	graphics {
	default: 							sw_1990_box_van_randsprite;
	purchase:							spriteset_1990_box_van_a;
}
}
# 1 "pgt.pnml" 2

# 1 "src/WAGON/Freight Stock/Refrigerated Vans/1950_refrigerated_van.pnml" 1
spriteset(spriteset_1950_refrigerated_van_a,   "gfx/Freight Stock/Refrigerated Vans/1950_refrigerated_van_A_Default.png") {template_24(7, 39)}
spriteset(spriteset_1950_refrigerated_van_b,   "gfx/Freight Stock/Refrigerated Vans/1950_refrigerated_van_B_Default.png") {template_24(7, 39)}
spriteset(spriteset_1950_refrigerated_van_c,   "gfx/Freight Stock/Refrigerated Vans/1950_refrigerated_van_C_Default.png") {template_24(7, 39)}

random_switch(FEAT_TRAINS, SELF, sw_1950_refrigerated_van_randsprite){
	1: spriteset_1950_refrigerated_van_a;
	2: spriteset_1950_refrigerated_van_b;
	3: spriteset_1950_refrigerated_van_c;
}
item (FEAT_TRAINS, item_1950_refrigerated_van) {
	property {
		climates_available: 			ALL_CLIMATES;
		retire_early:					1;
		vehicle_life:					40;
		reliability_decay:				7;
		sprite_id:						SPRITE_ID_NEW_TRAIN;
		misc_flags:						bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_AUTOREFIT);
		refit_cost:						0;
		track_type:						ELRL;
		ai_special_flag:				AI_FLAG_CARGO;
		power:							0 hp;
		running_cost_base:				RUNNING_COST_NONE;
		dual_headed:					0;
		air_drag_coefficient:			0.08;
		bitmask_vehicle_info:			0;
		
		refittable_cargo_classes:		bitmask(CC_REFRIGERATED) ;
		non_refittable_cargo_classes:	bitmask(CC_LIQUID) ;
		default_cargo_type:				FOOD;
		
		model_life:						40;
		
		length:							6;
		cost_factor:                    1;
		running_cost_factor:            1;
        loading_speed:                	5; 
		
		name: 							string(str_name_1950_refrigerated_van);
		introduction_date:				date(1950, 1, 1);
		
        speed:                        	100 km/h;
		weight:							20 ton;
		cargo_capacity:					30;
	}
	graphics {
	default: 							sw_1950_refrigerated_van_randsprite;
	purchase:							spriteset_1950_refrigerated_van_a;
}
}
# 1 "pgt.pnml" 2
# 1 "src/WAGON/Freight Stock/Refrigerated Vans/1970_refrigerated_van.pnml" 1
spriteset(spriteset_1970_refrigerated_van_a,   "gfx/Freight Stock/Refrigerated Vans/1970_refrigerated_van_A_Default.png") {template_32(7, 39)}
spriteset(spriteset_1970_refrigerated_van_b,   "gfx/Freight Stock/Refrigerated Vans/1970_refrigerated_van_B_Default.png") {template_32(7, 39)}
spriteset(spriteset_1970_refrigerated_van_c,   "gfx/Freight Stock/Refrigerated Vans/1970_refrigerated_van_C_Default.png") {template_32(7, 39)}

random_switch(FEAT_TRAINS, SELF, sw_1970_refrigerated_van_randsprite){
	1: spriteset_1970_refrigerated_van_a;
	2: spriteset_1970_refrigerated_van_b;
}
item (FEAT_TRAINS, item_1970_refrigerated_van) {
	property {
		climates_available: 			ALL_CLIMATES;
		retire_early:					1;
		vehicle_life:					40;
		reliability_decay:				7;
		sprite_id:						SPRITE_ID_NEW_TRAIN;
		misc_flags:						bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_AUTOREFIT);
		refit_cost:						0;
		track_type:						RAIL;
		ai_special_flag:				AI_FLAG_CARGO;
		power:							0 hp;
		running_cost_base:				RUNNING_COST_NONE;
		dual_headed:					0;
		air_drag_coefficient:			0.08;
		bitmask_vehicle_info:			0;
		
		refittable_cargo_classes:		bitmask(CC_REFRIGERATED) ;
		non_refittable_cargo_classes:	bitmask(CC_LIQUID) ;
		default_cargo_type:				FOOD;
		
		model_life:						40;
		
		length:							8;
		cost_factor:                    1;
		running_cost_factor:            1;
        loading_speed:                	5; 
		
		name: 							string(str_name_1970_refrigerated_van);
		introduction_date:				date(1970, 1, 1);
		
        speed:                        	100 km/h;
		weight:							20 ton;
		cargo_capacity:					70;
	}
	graphics {
	default: 							sw_1970_refrigerated_van_randsprite;
	purchase:							spriteset_1970_refrigerated_van_a;
}
}
# 1 "pgt.pnml" 2
# 1 "src/WAGON/Freight Stock/Refrigerated Vans/1990_refrigerated_van.pnml" 1
spriteset(spriteset_1990_refrigerated_van_a,   "gfx/Freight Stock/Refrigerated Vans/1990_refrigerated_van_A_Default.png") {template_32(7, 39)}
spriteset(spriteset_1990_refrigerated_van_b,   "gfx/Freight Stock/Refrigerated Vans/1990_refrigerated_van_B_Default.png") {template_32(7, 39)}
spriteset(spriteset_1990_refrigerated_van_c,   "gfx/Freight Stock/Refrigerated Vans/1990_refrigerated_van_C_Default.png") {template_32(7, 39)}

random_switch(FEAT_TRAINS, SELF, sw_1990_refrigerated_van_randsprite){
	1: spriteset_1990_refrigerated_van_a;
	2: spriteset_1990_refrigerated_van_b;
	3: spriteset_1990_refrigerated_van_c;
}
item (FEAT_TRAINS, item_1990_refrigerated_van) {
	property {
		climates_available: 			ALL_CLIMATES;
		retire_early:					1;
		vehicle_life:					40;
		reliability_decay:				7;
		sprite_id:						SPRITE_ID_NEW_TRAIN;
		misc_flags:						bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_AUTOREFIT);
		refit_cost:						0;
		track_type:						RAIL;
		ai_special_flag:				AI_FLAG_CARGO;
		power:							0 hp;
		running_cost_base:				RUNNING_COST_NONE;
		dual_headed:					0;
		air_drag_coefficient:			0.08;
		bitmask_vehicle_info:			0;
		
		refittable_cargo_classes:		bitmask(CC_REFRIGERATED) ;
		non_refittable_cargo_classes:	bitmask(CC_LIQUID) ;
		default_cargo_type:				FOOD;
		
		model_life:						40;
		
		length:							8;
		cost_factor:                    1;
		running_cost_factor:            1;
        loading_speed:                	5; 
		
		name: 							string(str_name_1990_refrigerated_van);
		introduction_date:				date(1990, 1, 1);
		
        speed:                        	115 km/h;
		weight:							20 ton;
		cargo_capacity:					80;
	}
	graphics {
	default: 							sw_1990_refrigerated_van_randsprite;
	purchase:							spriteset_1990_refrigerated_van_a;
}
}
# 1 "pgt.pnml" 2

# 1 "src/WAGON/Freight Stock/Coal Hoppers/1950_coal_hopper.pnml" 1
spriteset(spriteset_1950_coal_hopper,   "gfx/Freight Stock/Coal Hoppers/1950_coal_hopper_coal_refit.png") {template_24(7, 39)}
spriteset(spriteset_1950_coal_hopper_h,   "gfx/Freight Stock/Coal Hoppers/1950_coal_hopper_coal_refit.png") {template_24(7, 82)}
spriteset(spriteset_1950_coal_hopper_f,   "gfx/Freight Stock/Coal Hoppers/1950_coal_hopper_coal_refit.png") {template_24(7, 125)}

switch(FEAT_TRAINS, SELF, sw_1950_coal_hopper_fullcheck, cargo_count * (100 / cargo_capacity)){
	1..50	: spriteset_1950_coal_hopper_h ;
	51..100	: spriteset_1950_coal_hopper_f ;
}

switch(FEAT_TRAINS, SELF, sw_1950_coal_hopper_spritestack, [STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100), getbits(extra_callback_info1, 8, 8)]){
	0 : spriteset_1950_coal_hopper ;
	1 : sw_1950_coal_hopper_fullcheck ;
}

item (FEAT_TRAINS, item_1950_coal_hopper) {
	property {
		climates_available: 			ALL_CLIMATES;
		retire_early:					1;
		vehicle_life:					40;
		reliability_decay:				7;
		sprite_id:						SPRITE_ID_NEW_TRAIN;
		misc_flags:						bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_AUTOREFIT);
		refit_cost:						0;
		track_type:						RAIL;
		ai_special_flag:				AI_FLAG_CARGO;
		power:							0 hp;
		running_cost_base:				RUNNING_COST_NONE;
		dual_headed:					0;
		air_drag_coefficient:			0.08;
		bitmask_vehicle_info:			0;
		
		default_cargo_type:				COAL;
		
		model_life:						40;
		
		length:							6;
		cost_factor:                    1;
		running_cost_factor:            1;
        loading_speed:                	5; 
		
		name: 							string(str_name_1950_coal_hopper);
		introduction_date:				date(1950, 1, 1);
		
        speed:                        	100 km/h;
		weight:							20 ton;
		cargo_capacity:					30;
	}
	graphics {
	default: 							sw_1950_coal_hopper_spritestack;
	purchase:							spriteset_1950_coal_hopper;
}
}
# 1 "pgt.pnml" 2
# 1 "src/WAGON/Freight Stock/Coal Hoppers/1970_coal_hopper.pnml" 1
spriteset(spriteset_1970_coal_hopper,   "gfx/Freight Stock/Coal Hoppers/1970_coal_hopper_coal_refit.png") {template_32(7, 39)}
spriteset(spriteset_1970_coal_hopper_h,   "gfx/Freight Stock/Coal Hoppers/1970_coal_hopper_coal_refit.png") {template_32(7, 82)}
spriteset(spriteset_1970_coal_hopper_f,   "gfx/Freight Stock/Coal Hoppers/1970_coal_hopper_coal_refit.png") {template_32(7, 125)}

switch(FEAT_TRAINS, SELF, sw_1970_coal_hopper_fullcheck, cargo_count * (100 / cargo_capacity)){
	1..50	: spriteset_1970_coal_hopper_h ;
	51..100	: spriteset_1970_coal_hopper_f ;
}

switch(FEAT_TRAINS, SELF, sw_1970_coal_hopper_spritestack, [STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100), getbits(extra_callback_info1, 8, 8)]){
	0 : spriteset_1970_coal_hopper ;
	1 : sw_1970_coal_hopper_fullcheck ;
}

item (FEAT_TRAINS, item_1970_coal_hopper) {
	property {
		climates_available: 			ALL_CLIMATES;
		retire_early:					1;
		vehicle_life:					40;
		reliability_decay:				7;
		sprite_id:						SPRITE_ID_NEW_TRAIN;
		misc_flags:						bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_AUTOREFIT);
		refit_cost:						0;
		track_type:						RAIL;
		ai_special_flag:				AI_FLAG_CARGO;
		power:							0 hp;
		running_cost_base:				RUNNING_COST_NONE;
		dual_headed:					0;
		air_drag_coefficient:			0.08;
		bitmask_vehicle_info:			0;
		
		default_cargo_type:				COAL;
		
		model_life:						40;
		
		length:							8;
		cost_factor:                    1;
		running_cost_factor:            1;
        loading_speed:                	5; 
		
		name: 							string(str_name_1970_coal_hopper);
		introduction_date:				date(1970, 1, 1);
		
        speed:                        	100 km/h;
		weight:							20 ton;
		cargo_capacity:					70;
	}
	graphics {
	default: 							sw_1970_coal_hopper_spritestack;
	purchase:							spriteset_1970_coal_hopper;
}
}
# 1 "pgt.pnml" 2
# 1 "src/WAGON/Freight Stock/Coal Hoppers/1990_coal_hopper.pnml" 1
spriteset(spriteset_1990_coal_hopper,   "gfx/Freight Stock/Coal Hoppers/1990_coal_hopper_coal_refit.png") {template_32(7, 39)}
spriteset(spriteset_1990_coal_hopper_h,   "gfx/Freight Stock/Coal Hoppers/1990_coal_hopper_coal_refit.png") {template_32(7, 82)}
spriteset(spriteset_1990_coal_hopper_f,   "gfx/Freight Stock/Coal Hoppers/1990_coal_hopper_coal_refit.png") {template_32(7, 125)}

switch(FEAT_TRAINS, SELF, sw_1990_coal_hopper_fullcheck, cargo_count * (100 / cargo_capacity)){
	1..50	: spriteset_1990_coal_hopper_h ;
	51..100	: spriteset_1990_coal_hopper_f ;
}

switch(FEAT_TRAINS, SELF, sw_1990_coal_hopper_spritestack, [STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100), getbits(extra_callback_info1, 8, 8)]){
	0 : spriteset_1990_coal_hopper ;
	1 : sw_1990_coal_hopper_fullcheck ;
}

item (FEAT_TRAINS, item_1990_coal_hopper) {
	property {
		climates_available: 			ALL_CLIMATES;
		retire_early:					1;
		vehicle_life:					40;
		reliability_decay:				7;
		sprite_id:						SPRITE_ID_NEW_TRAIN;
		misc_flags:						bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_AUTOREFIT);
		refit_cost:						0;
		track_type:						RAIL;
		ai_special_flag:				AI_FLAG_CARGO;
		power:							0 hp;
		running_cost_base:				RUNNING_COST_NONE;
		dual_headed:					0;
		air_drag_coefficient:			0.08;
		bitmask_vehicle_info:			0;
		
		default_cargo_type:				COAL;
		
		model_life:						40;
		
		length:							8;
		cost_factor:                    1;
		running_cost_factor:            1;
        loading_speed:                	5; 
		
		name: 							string(str_name_1990_coal_hopper);
		introduction_date:				date(1990, 1, 1);
		
        speed:                        	115 km/h;
		weight:							20 ton;
		cargo_capacity:					80;
	}
	graphics {
	default: 							sw_1990_coal_hopper_spritestack;
	purchase:							spriteset_1990_coal_hopper;
}
}
# 1 "pgt.pnml" 2
# 1 "src/WAGON/Freight Stock/Coal Hoppers/2010_coal_hopper.pnml" 1
spriteset(spriteset_2010_coal_hopper,   "gfx/Freight Stock/Coal Hoppers/2010_coal_hopper_coal_refit.png") {template_32(7, 39)}
spriteset(spriteset_2010_coal_hopper_h,   "gfx/Freight Stock/Coal Hoppers/2010_coal_hopper_coal_refit.png") {template_32(7, 82)}
spriteset(spriteset_2010_coal_hopper_f,   "gfx/Freight Stock/Coal Hoppers/2010_coal_hopper_coal_refit.png") {template_32(7, 125)}

switch(FEAT_TRAINS, SELF, sw_2010_coal_hopper_fullcheck, cargo_count * (100 / cargo_capacity)){
	1..50	: spriteset_2010_coal_hopper_h ;
	51..100	: spriteset_2010_coal_hopper_f ;
}

switch(FEAT_TRAINS, SELF, sw_2010_coal_hopper_spritestack, [STORE_TEMP((getbits(extra_callback_info1, 8, 8) < 2 ? CB_FLAG_MORE_SPRITES : 0) | PALETTE_USE_DEFAULT, 0x100), getbits(extra_callback_info1, 8, 8)]){
	0 : spriteset_2010_coal_hopper ;
	1 : sw_2010_coal_hopper_fullcheck ;
}

item (FEAT_TRAINS, item_2010_coal_hopper) {
	property {
		climates_available: 			ALL_CLIMATES;
		retire_early:					1;
		vehicle_life:					40;
		reliability_decay:				7;
		sprite_id:						SPRITE_ID_NEW_TRAIN;
		misc_flags:						bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_AUTOREFIT);
		refit_cost:						0;
		track_type:						RAIL;
		ai_special_flag:				AI_FLAG_CARGO;
		power:							0 hp;
		running_cost_base:				RUNNING_COST_NONE;
		dual_headed:					0;
		air_drag_coefficient:			0.08;
		bitmask_vehicle_info:			0;
		
		default_cargo_type:				COAL;
		
		model_life:						40;
		
		length:							8;
		cost_factor:                    1;
		running_cost_factor:            1;
        loading_speed:                	5; 
		
		name: 							string(str_name_2010_coal_hopper);
		introduction_date:				date(2010, 1, 1);
		
        speed:                        	130 km/h;
		weight:							20 ton;
		cargo_capacity:					100;
	}
	graphics {
	default: 							sw_2010_coal_hopper_spritestack;
	purchase:							spriteset_2010_coal_hopper;
}
}
# 1 "pgt.pnml" 2

# 1 "src/EMU - Intercity/1935_icsd_kooragang.pnml" 1
spriteset(spriteset_1935_icsd_kooragang_fp,   "gfx/EMU - Intercity/1935_ICSD_Kooragang.png") {template_32(7, 39)}
spriteset(spriteset_1935_icsd_kooragang_rp,   "gfx/EMU - Intercity/1935_ICSD_Kooragang.png") {template_32(7, 64)}
spriteset(spriteset_1935_icsd_kooragang_f,    "gfx/EMU - Intercity/1935_ICSD_Kooragang.png") {template_32(185, 39)}
spriteset(spriteset_1935_icsd_kooragang_r,    "gfx/EMU - Intercity/1935_ICSD_Kooragang.png") {template_32(185, 64)}
spriteset(spriteset_1935_icsd_kooragang_c,    "gfx/EMU - Intercity/1935_ICSD_Kooragang.png") {template_32(7, 89)}
spriteset(spriteset_1935_icsd_kooragang_cp,   "gfx/EMU - Intercity/1935_ICSD_Kooragang.png") {template_32(185, 89)}
spriteset(spriteset_1935_icsd_kooragang_c_r,  "gfx/EMU - Intercity/1935_ICSD_Kooragang.png") {template_32_r(7, 89)}
spriteset(spriteset_1935_icsd_kooragang_cp_r, "gfx/EMU - Intercity/1935_ICSD_Kooragang.png") {template_32_r(185, 89)}

// C O D E

//Backward

switch(FEAT_TRAINS, SELF, sw_1935_icsd_kooragang_pantocheck_at_2_r, position_in_vehid_chain % 3){
	2 : spriteset_1935_icsd_kooragang_cp_r;
	return spriteset_1935_icsd_kooragang_c_r;
}
switch(FEAT_TRAINS, SELF, sw_1935_icsd_kooragang_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_1935_icsd_kooragang_cp;
	return spriteset_1935_icsd_kooragang_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1935_icsd_kooragang_pantocheck_at_1_r, position_in_vehid_chain % 2){
	1 : spriteset_1935_icsd_kooragang_cp_r;
	return spriteset_1935_icsd_kooragang_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1935_icsd_kooragang_pantocheck_at_0_r, position_in_vehid_chain % 2){
	1 : spriteset_1935_icsd_kooragang_c_r;
	return spriteset_1935_icsd_kooragang_cp;
}

switch(FEAT_TRAINS, SELF, sw_1935_icsd_kooragang_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_1935_icsd_kooragang_cp;
	return spriteset_1935_icsd_kooragang_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1935_icsd_kooragang_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1935_icsd_kooragang_pantocheck_at_1_r;
	return sw_1935_icsd_kooragang_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_1935_icsd_kooragang_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : spriteset_1935_icsd_kooragang_c_r;
	return sw_1935_icsd_kooragang_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_1935_icsd_kooragang_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1935_icsd_kooragang_pantocheck_at_2_r;
	return sw_1935_icsd_kooragang_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_1935_icsd_kooragang_lencheck_r, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_1935_icsd_kooragang_c_r;
	3 : sw_1935_icsd_kooragang_pantocheck_at_1_r;
	4 : sw_1935_icsd_kooragang_sidecheck_4_r;
	5 : sw_1935_icsd_kooragang_pantocheck_at_2_r;
	6 .. 7 : sw_1935_icsd_kooragang_sidecheck_6_r;
	return sw_1935_icsd_kooragang_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_1935_icsd_kooragang_pantocheck_at_2, position_in_vehid_chain % 3){
	2 : spriteset_1935_icsd_kooragang_cp_r;
	return spriteset_1935_icsd_kooragang_c;
}
switch(FEAT_TRAINS, SELF, sw_1935_icsd_kooragang_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_1935_icsd_kooragang_cp;
	return spriteset_1935_icsd_kooragang_c;
}

switch(FEAT_TRAINS, SELF, sw_1935_icsd_kooragang_pantocheck_at_1, position_in_vehid_chain % 2){
	1 : spriteset_1935_icsd_kooragang_cp_r;
	return spriteset_1935_icsd_kooragang_c;
}
switch(FEAT_TRAINS, SELF, sw_1935_icsd_kooragang_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_1935_icsd_kooragang_cp;
	return spriteset_1935_icsd_kooragang_c;
}

switch(FEAT_TRAINS, SELF, sw_1935_icsd_kooragang_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1935_icsd_kooragang_pantocheck_at_1;
	return sw_1935_icsd_kooragang_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_1935_icsd_kooragang_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1935_icsd_kooragang_pantocheck_at_1;
	return spriteset_1935_icsd_kooragang_c;
}

switch(FEAT_TRAINS, SELF, sw_1935_icsd_kooragang_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1935_icsd_kooragang_pantocheck_at_2;
	return sw_1935_icsd_kooragang_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_1935_icsd_kooragang_lencheck, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_1935_icsd_kooragang_c;
	3 : sw_1935_icsd_kooragang_pantocheck_at_1;
	4 : sw_1935_icsd_kooragang_sidecheck_4;
	5 : sw_1935_icsd_kooragang_pantocheck_at_2;
	6 .. 7 : sw_1935_icsd_kooragang_sidecheck_6;
	return sw_1935_icsd_kooragang_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_1935_icsd_kooragang_panto_direction_r_pos, position_in_vehid_chain_from_end){
	0: spriteset_1935_icsd_kooragang_fp; //Panto
	return spriteset_1935_icsd_kooragang_f; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_1935_icsd_kooragang_panto_direction_r, vehicle_is_flipped){
	0 : sw_1935_icsd_kooragang_panto_direction_r_pos;		//Front panto
	return spriteset_1935_icsd_kooragang_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_1935_icsd_kooragang_panto_flipcheck_r, vehicle_is_flipped){
	0 : sw_1935_icsd_kooragang_panto_direction_r;		//Not flipped, give Panto
	return spriteset_1935_icsd_kooragang_rp;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_1935_icsd_kooragang_frontcheck_r, position_in_vehid_chain){
	0: sw_1935_icsd_kooragang_panto_direction_r; //We need a pantograph, guaranteed
	return sw_1935_icsd_kooragang_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_1935_icsd_kooragang_panto_direction, vehicle_is_flipped){
	0 : spriteset_1935_icsd_kooragang_fp;		//Front panto
	return spriteset_1935_icsd_kooragang_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_1935_icsd_kooragang_panto_flipcheck, vehicle_is_flipped){
	0 : sw_1935_icsd_kooragang_panto_direction;		//Not flipped, give Panto
	return spriteset_1935_icsd_kooragang_r;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_1935_icsd_kooragang_frontcheck, position_in_vehid_chain){
	0: sw_1935_icsd_kooragang_panto_direction; //We need a pantograph, guaranteed
	return sw_1935_icsd_kooragang_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_1935_icsd_kooragang_directioncheck, vehicle_is_reversed){
	0: sw_1935_icsd_kooragang_frontcheck; //We are going forwards
	return sw_1935_icsd_kooragang_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_1935_icsd_kooragang_revcheck, vehicle_is_reversed){
	0 : sw_1935_icsd_kooragang_lencheck;
	return sw_1935_icsd_kooragang_lencheck_r;
}

switch(FEAT_TRAINS, SELF, sw_1935_icsd_kooragang_attach, vehicle_type_id){
	item_1935_icsd_kooragang	: return CB_RESULT_ATTACH_ALLOW  ;
	item_pgt_mu_coach	: return CB_RESULT_ATTACH_ALLOW  ;
	return string(STR_NO_COUPLE_MU_SAME) ;
}

/* Define the actual train */
item(FEAT_TRAINS, item_1935_icsd_kooragang) {
    /* Define properties first, make sure to set all of them */
    property {
        reliability_decay:            20;
		refittable_cargo_classes:	  CC_PASSENGERS ;
		cargo_allow_refit:			  [PASS, TOUR] ;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
		misc_flags: bitmask(TRAIN_FLAG_MU, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_2CC);
        track_type:                   ELRL;
        ai_special_flag:              AI_FLAG_PASSENGER;
        running_cost_base:            RUNNING_COST_ELECTRIC;
		length:						  8;
		dual_headed:				  1;
		
        refit_cost:                   0;
        // callback flags are not set manually
        ai_engine_rank:               0;
        engine_class:                 ENGINE_CLASS_ELECTRIC;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
		effect_spawn_model_and_powered : EFFECT_SPAWN_MODEL_ELECTRIC ;
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
        name:                         string(str_name_1935_icsd_kooragang);
        climates_available:           ALL_CLIMATES; 
        introduction_date:            date(1935, 1, 1);
        model_life:                   40; //How long should this train be buyable
        vehicle_life:                 40; //How long should this train last before renewal
        tractive_effort_coefficient:  0.056;
        weight:                       30 ton;
        power:                        500 hp;
		cargo_capacity:				  60 ;
        speed:                        115 km/h;
		
		cost_factor:                    1;
		running_cost_factor:            1;
        loading_speed:                	5; 
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics {
        default				:	sw_1935_icsd_kooragang_directioncheck;
		can_attach_wagon	:	sw_1935_icsd_kooragang_attach ;
		create_effect		:	vfx_ohle ;
		additional_text		: 	string(STR_DESC_INTERCITY);
    }
	livery_override (item_pgt_mu_coach){
		default                     : sw_1935_icsd_kooragang_revcheck ;
		cargo_capacity              : 60 ;
		weight                      : 30 ;
		power                       : 500 ;
		length						: 8;
	}
}
# 1 "pgt.pnml" 2
# 1 "src/EMU - Intercity/1958_icsd_anderson.pnml" 1
spriteset(spriteset_1958_icsd_anderson_fp,   "gfx/EMU - Intercity/1958_icsd_anderson.png") {template_32(7, 39)}
spriteset(spriteset_1958_icsd_anderson_rp,   "gfx/EMU - Intercity/1958_icsd_anderson.png") {template_32(7, 64)}
spriteset(spriteset_1958_icsd_anderson_f,    "gfx/EMU - Intercity/1958_icsd_anderson.png") {template_32(185, 39)}
spriteset(spriteset_1958_icsd_anderson_r,    "gfx/EMU - Intercity/1958_icsd_anderson.png") {template_32(185, 64)}
spriteset(spriteset_1958_icsd_anderson_c,    "gfx/EMU - Intercity/1958_icsd_anderson.png") {template_32(7, 89)}
spriteset(spriteset_1958_icsd_anderson_cp,   "gfx/EMU - Intercity/1958_icsd_anderson.png") {template_32(185, 89)}
spriteset(spriteset_1958_icsd_anderson_c_r,  "gfx/EMU - Intercity/1958_icsd_anderson.png") {template_32_r(7, 89)}
spriteset(spriteset_1958_icsd_anderson_cp_r, "gfx/EMU - Intercity/1958_icsd_anderson.png") {template_32_r(185, 89)}

// C O D E

//Backward

switch(FEAT_TRAINS, SELF, sw_1958_icsd_anderson_pantocheck_at_2_r, position_in_vehid_chain % 3){
	2 : spriteset_1958_icsd_anderson_cp_r;
	return spriteset_1958_icsd_anderson_c_r;
}
switch(FEAT_TRAINS, SELF, sw_1958_icsd_anderson_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_1958_icsd_anderson_cp;
	return spriteset_1958_icsd_anderson_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1958_icsd_anderson_pantocheck_at_1_r, position_in_vehid_chain % 2){
	1 : spriteset_1958_icsd_anderson_cp_r;
	return spriteset_1958_icsd_anderson_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1958_icsd_anderson_pantocheck_at_0_r, position_in_vehid_chain % 2){
	1 : spriteset_1958_icsd_anderson_c_r;
	return spriteset_1958_icsd_anderson_cp;
}

switch(FEAT_TRAINS, SELF, sw_1958_icsd_anderson_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_1958_icsd_anderson_cp;
	return spriteset_1958_icsd_anderson_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1958_icsd_anderson_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1958_icsd_anderson_pantocheck_at_1_r;
	return sw_1958_icsd_anderson_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_1958_icsd_anderson_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : spriteset_1958_icsd_anderson_c_r;
	return sw_1958_icsd_anderson_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_1958_icsd_anderson_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1958_icsd_anderson_pantocheck_at_2_r;
	return sw_1958_icsd_anderson_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_1958_icsd_anderson_lencheck_r, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_1958_icsd_anderson_c_r;
	3 : sw_1958_icsd_anderson_pantocheck_at_1_r;
	4 : sw_1958_icsd_anderson_sidecheck_4_r;
	5 : sw_1958_icsd_anderson_pantocheck_at_2_r;
	6 .. 7 : sw_1958_icsd_anderson_sidecheck_6_r;
	return sw_1958_icsd_anderson_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_1958_icsd_anderson_pantocheck_at_2, position_in_vehid_chain % 3){
	2 : spriteset_1958_icsd_anderson_cp_r;
	return spriteset_1958_icsd_anderson_c;
}
switch(FEAT_TRAINS, SELF, sw_1958_icsd_anderson_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_1958_icsd_anderson_cp;
	return spriteset_1958_icsd_anderson_c;
}

switch(FEAT_TRAINS, SELF, sw_1958_icsd_anderson_pantocheck_at_1, position_in_vehid_chain % 2){
	1 : spriteset_1958_icsd_anderson_cp_r;
	return spriteset_1958_icsd_anderson_c;
}
switch(FEAT_TRAINS, SELF, sw_1958_icsd_anderson_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_1958_icsd_anderson_cp;
	return spriteset_1958_icsd_anderson_c;
}

switch(FEAT_TRAINS, SELF, sw_1958_icsd_anderson_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1958_icsd_anderson_pantocheck_at_1;
	return sw_1958_icsd_anderson_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_1958_icsd_anderson_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1958_icsd_anderson_pantocheck_at_1;
	return spriteset_1958_icsd_anderson_c;
}

switch(FEAT_TRAINS, SELF, sw_1958_icsd_anderson_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1958_icsd_anderson_pantocheck_at_2;
	return sw_1958_icsd_anderson_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_1958_icsd_anderson_lencheck, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_1958_icsd_anderson_c;
	3 : sw_1958_icsd_anderson_pantocheck_at_1;
	4 : sw_1958_icsd_anderson_sidecheck_4;
	5 : sw_1958_icsd_anderson_pantocheck_at_2;
	6 .. 7 : sw_1958_icsd_anderson_sidecheck_6;
	return sw_1958_icsd_anderson_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_1958_icsd_anderson_panto_direction_r_pos, position_in_vehid_chain_from_end){
	0: spriteset_1958_icsd_anderson_fp; //Panto
	return spriteset_1958_icsd_anderson_f; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_1958_icsd_anderson_panto_direction_r, vehicle_is_flipped){
	0 : sw_1958_icsd_anderson_panto_direction_r_pos;		//Front panto
	return spriteset_1958_icsd_anderson_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_1958_icsd_anderson_panto_flipcheck_r, vehicle_is_flipped){
	0 : sw_1958_icsd_anderson_panto_direction_r;		//Not flipped, give Panto
	return spriteset_1958_icsd_anderson_rp;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_1958_icsd_anderson_frontcheck_r, position_in_vehid_chain){
	0: sw_1958_icsd_anderson_panto_direction_r; //We need a pantograph, guaranteed
	return sw_1958_icsd_anderson_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_1958_icsd_anderson_panto_direction, vehicle_is_flipped){
	0 : spriteset_1958_icsd_anderson_fp;		//Front panto
	return spriteset_1958_icsd_anderson_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_1958_icsd_anderson_panto_flipcheck, vehicle_is_flipped){
	0 : sw_1958_icsd_anderson_panto_direction;		//Not flipped, give Panto
	return spriteset_1958_icsd_anderson_r;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_1958_icsd_anderson_frontcheck, position_in_vehid_chain){
	0: sw_1958_icsd_anderson_panto_direction; //We need a pantograph, guaranteed
	return sw_1958_icsd_anderson_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_1958_icsd_anderson_directioncheck, vehicle_is_reversed){
	0: sw_1958_icsd_anderson_frontcheck; //We are going forwards
	return sw_1958_icsd_anderson_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_1958_icsd_anderson_revcheck, vehicle_is_reversed){
	0 : sw_1958_icsd_anderson_lencheck;
	return sw_1958_icsd_anderson_lencheck_r;
}

switch(FEAT_TRAINS, SELF, sw_1958_icsd_anderson_attach, vehicle_type_id){
	item_1958_icsd_anderson	: return CB_RESULT_ATTACH_ALLOW  ;
	item_pgt_mu_coach	: return CB_RESULT_ATTACH_ALLOW  ;
	return string(STR_NO_COUPLE_MU_SAME) ;
}

/* Define the actual train */
item(FEAT_TRAINS, item_1958_icsd_anderson) {
    /* Define properties first, make sure to set all of them */
    property {
        reliability_decay:            20;
		refittable_cargo_classes:	  CC_PASSENGERS ;
		cargo_allow_refit:			  [PASS, TOUR] ;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
		misc_flags: bitmask(TRAIN_FLAG_MU, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_2CC);
        track_type:                   ELRL;
        ai_special_flag:              AI_FLAG_PASSENGER;
        running_cost_base:            RUNNING_COST_ELECTRIC;
		length:						  8;
		dual_headed:				  1;
        refit_cost:                   0;
        // callback flags are not set manually
        ai_engine_rank:               0;
        engine_class:                 ENGINE_CLASS_ELECTRIC;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
		effect_spawn_model_and_powered : EFFECT_SPAWN_MODEL_ELECTRIC ;
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
        name:                         string(str_name_1958_icsd_anderson);
        climates_available:           ALL_CLIMATES; 
        introduction_date:            date(1958, 1, 1);
        model_life:                   40; //How long should this train be buyable
        vehicle_life:                 40; //How long should this train last before renewal
        tractive_effort_coefficient:  0.062;
        weight:                       40 ton;
        power:                        720 hp;
		cargo_capacity:				  60 ;
        speed:                        130 km/h;
		cost_factor:                    1;
		running_cost_factor:            1;
        loading_speed:                	5; 
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics {
        default				:	sw_1958_icsd_anderson_directioncheck;
		can_attach_wagon	:	sw_1958_icsd_anderson_attach ;
		create_effect		:	vfx_ohle ;
		additional_text		: 	string(STR_DESC_INTERCITY);
    }
	livery_override (item_pgt_mu_coach){
		default                     : sw_1958_icsd_anderson_revcheck ;
		cargo_capacity              : 60 ;
		weight                      : 40 ;
		power                       : 720 ;
		length						: 8;
	}
}
# 1 "pgt.pnml" 2
# 1 "src/EMU - Intercity/1970_icdd_goose.pnml" 1
spriteset(spriteset_1970_icdd_goose_fp,   "gfx/EMU - Intercity/1970_icdd_goose.png") {template_32(7, 39)}
spriteset(spriteset_1970_icdd_goose_rp,   "gfx/EMU - Intercity/1970_icdd_goose.png") {template_32(7, 64)}
spriteset(spriteset_1970_icdd_goose_f,    "gfx/EMU - Intercity/1970_icdd_goose.png") {template_32(185, 39)}
spriteset(spriteset_1970_icdd_goose_r,    "gfx/EMU - Intercity/1970_icdd_goose.png") {template_32(185, 64)}
spriteset(spriteset_1970_icdd_goose_c,    "gfx/EMU - Intercity/1970_icdd_goose.png") {template_32(7, 89)}
spriteset(spriteset_1970_icdd_goose_cp,   "gfx/EMU - Intercity/1970_icdd_goose.png") {template_32(185, 89)}
spriteset(spriteset_1970_icdd_goose_c_r,  "gfx/EMU - Intercity/1970_icdd_goose.png") {template_32_r(7, 89)}
spriteset(spriteset_1970_icdd_goose_cp_r, "gfx/EMU - Intercity/1970_icdd_goose.png") {template_32_r(185, 89)}

// C O D E

//Backward

switch(FEAT_TRAINS, SELF, sw_1970_icdd_goose_pantocheck_at_2_r, position_in_vehid_chain % 3){
	2 : spriteset_1970_icdd_goose_cp_r;
	return spriteset_1970_icdd_goose_c_r;
}
switch(FEAT_TRAINS, SELF, sw_1970_icdd_goose_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_1970_icdd_goose_cp;
	return spriteset_1970_icdd_goose_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1970_icdd_goose_pantocheck_at_1_r, position_in_vehid_chain % 2){
	1 : spriteset_1970_icdd_goose_cp_r;
	return spriteset_1970_icdd_goose_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1970_icdd_goose_pantocheck_at_0_r, position_in_vehid_chain % 2){
	1 : spriteset_1970_icdd_goose_c_r;
	return spriteset_1970_icdd_goose_cp;
}

switch(FEAT_TRAINS, SELF, sw_1970_icdd_goose_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_1970_icdd_goose_cp;
	return spriteset_1970_icdd_goose_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1970_icdd_goose_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1970_icdd_goose_pantocheck_at_1_r;
	return sw_1970_icdd_goose_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_1970_icdd_goose_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : spriteset_1970_icdd_goose_c_r;
	return sw_1970_icdd_goose_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_1970_icdd_goose_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1970_icdd_goose_pantocheck_at_2_r;
	return sw_1970_icdd_goose_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_1970_icdd_goose_lencheck_r, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_1970_icdd_goose_c_r;
	3 : sw_1970_icdd_goose_pantocheck_at_1_r;
	4 : sw_1970_icdd_goose_sidecheck_4_r;
	5 : sw_1970_icdd_goose_pantocheck_at_2_r;
	6 .. 7 : sw_1970_icdd_goose_sidecheck_6_r;
	return sw_1970_icdd_goose_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_1970_icdd_goose_pantocheck_at_2, position_in_vehid_chain % 3){
	2 : spriteset_1970_icdd_goose_cp_r;
	return spriteset_1970_icdd_goose_c;
}
switch(FEAT_TRAINS, SELF, sw_1970_icdd_goose_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_1970_icdd_goose_cp;
	return spriteset_1970_icdd_goose_c;
}

switch(FEAT_TRAINS, SELF, sw_1970_icdd_goose_pantocheck_at_1, position_in_vehid_chain % 2){
	1 : spriteset_1970_icdd_goose_cp_r;
	return spriteset_1970_icdd_goose_c;
}
switch(FEAT_TRAINS, SELF, sw_1970_icdd_goose_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_1970_icdd_goose_cp;
	return spriteset_1970_icdd_goose_c;
}

switch(FEAT_TRAINS, SELF, sw_1970_icdd_goose_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1970_icdd_goose_pantocheck_at_1;
	return sw_1970_icdd_goose_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_1970_icdd_goose_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1970_icdd_goose_pantocheck_at_1;
	return spriteset_1970_icdd_goose_c;
}

switch(FEAT_TRAINS, SELF, sw_1970_icdd_goose_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1970_icdd_goose_pantocheck_at_2;
	return sw_1970_icdd_goose_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_1970_icdd_goose_lencheck, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_1970_icdd_goose_c;
	3 : sw_1970_icdd_goose_pantocheck_at_1;
	4 : sw_1970_icdd_goose_sidecheck_4;
	5 : sw_1970_icdd_goose_pantocheck_at_2;
	6 .. 7 : sw_1970_icdd_goose_sidecheck_6;
	return sw_1970_icdd_goose_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_1970_icdd_goose_panto_direction_r_pos, position_in_vehid_chain_from_end){
	0: spriteset_1970_icdd_goose_fp; //Panto
	return spriteset_1970_icdd_goose_f; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_1970_icdd_goose_panto_direction_r, vehicle_is_flipped){
	0 : sw_1970_icdd_goose_panto_direction_r_pos;		//Front panto
	return spriteset_1970_icdd_goose_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_1970_icdd_goose_panto_flipcheck_r, vehicle_is_flipped){
	0 : sw_1970_icdd_goose_panto_direction_r;		//Not flipped, give Panto
	return spriteset_1970_icdd_goose_rp;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_1970_icdd_goose_frontcheck_r, position_in_vehid_chain){
	0: sw_1970_icdd_goose_panto_direction_r; //We need a pantograph, guaranteed
	return sw_1970_icdd_goose_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_1970_icdd_goose_panto_direction, vehicle_is_flipped){
	0 : spriteset_1970_icdd_goose_fp;		//Front panto
	return spriteset_1970_icdd_goose_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_1970_icdd_goose_panto_flipcheck, vehicle_is_flipped){
	0 : sw_1970_icdd_goose_panto_direction;		//Not flipped, give Panto
	return spriteset_1970_icdd_goose_r;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_1970_icdd_goose_frontcheck, position_in_vehid_chain){
	0: sw_1970_icdd_goose_panto_direction; //We need a pantograph, guaranteed
	return sw_1970_icdd_goose_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_1970_icdd_goose_directioncheck, vehicle_is_reversed){
	0: sw_1970_icdd_goose_frontcheck; //We are going forwards
	return sw_1970_icdd_goose_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_1970_icdd_goose_revcheck, vehicle_is_reversed){
	0 : sw_1970_icdd_goose_lencheck;
	return sw_1970_icdd_goose_lencheck_r;
}

switch(FEAT_TRAINS, SELF, sw_1970_icdd_goose_attach, vehicle_type_id){
	item_1970_icdd_goose	: return CB_RESULT_ATTACH_ALLOW  ;
	item_pgt_mu_coach	: return CB_RESULT_ATTACH_ALLOW  ;
	return string(STR_NO_COUPLE_MU_SAME) ;
}

/* Define the actual train */
item(FEAT_TRAINS, item_1970_icdd_goose) {
    /* Define properties first, make sure to set all of them */
    property {
        reliability_decay:            20;
		refittable_cargo_classes:	  CC_PASSENGERS ;
		cargo_allow_refit:			  [PASS, TOUR] ;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
		misc_flags: bitmask(TRAIN_FLAG_MU, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_2CC);
        track_type:                   ELRL;
        ai_special_flag:              AI_FLAG_PASSENGER;
        running_cost_base:            RUNNING_COST_ELECTRIC;
		length:						  8;
		dual_headed:				  1;
        refit_cost:                   0;
        // callback flags are not set manually
        ai_engine_rank:               0;
        engine_class:                 ENGINE_CLASS_ELECTRIC;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
		effect_spawn_model_and_powered : EFFECT_SPAWN_MODEL_ELECTRIC ;
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
        name:                         string(str_name_1970_icdd_goose);
        climates_available:           ALL_CLIMATES; 
        introduction_date:            date(1970, 1, 1);
        model_life:                   40; //How long should this train be buyable
        vehicle_life:                 40; //How long should this train last before renewal
        tractive_effort_coefficient:  0.046;
        weight:                       60 ton;
        power:                        800 hp;
		cargo_capacity:				  90 ;
        speed:                        130 km/h;
		cost_factor:                    1;
		running_cost_factor:            1;
        loading_speed:                	5; 
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics {
        default				:	sw_1970_icdd_goose_directioncheck;
		can_attach_wagon	:	sw_1970_icdd_goose_attach ;
		create_effect		:	vfx_ohle ;
		additional_text		: 	string(STR_DESC_INTERCITY);
    }
	livery_override (item_pgt_mu_coach){
		default                     : sw_1970_icdd_goose_revcheck ;
		cargo_capacity              : 90 ;
		weight                      : 60 ;
		power                       : 800 ;
		length						: 8;
	}
}
# 1 "pgt.pnml" 2
# 1 "src/EMU - Intercity/1980_icsd_runner.pnml" 1
spriteset(spriteset_1980_icsd_runner_fp,   "gfx/EMU - Intercity/1980_icsd_runner.png") {template_32(7, 39)}
spriteset(spriteset_1980_icsd_runner_rp,   "gfx/EMU - Intercity/1980_icsd_runner.png") {template_32(7, 64)}
spriteset(spriteset_1980_icsd_runner_f,    "gfx/EMU - Intercity/1980_icsd_runner.png") {template_32(185, 39)}
spriteset(spriteset_1980_icsd_runner_r,    "gfx/EMU - Intercity/1980_icsd_runner.png") {template_32(185, 64)}
spriteset(spriteset_1980_icsd_runner_c,    "gfx/EMU - Intercity/1980_icsd_runner.png") {template_32(7, 89)}
spriteset(spriteset_1980_icsd_runner_cp,   "gfx/EMU - Intercity/1980_icsd_runner.png") {template_32(185, 89)}
spriteset(spriteset_1980_icsd_runner_c_r,  "gfx/EMU - Intercity/1980_icsd_runner.png") {template_32_r(7, 89)}
spriteset(spriteset_1980_icsd_runner_cp_r, "gfx/EMU - Intercity/1980_icsd_runner.png") {template_32_r(185, 89)}

// C O D E

//Backward

switch(FEAT_TRAINS, SELF, sw_1980_icsd_runner_pantocheck_at_2_r, position_in_vehid_chain % 3){
	2 : spriteset_1980_icsd_runner_cp_r;
	return spriteset_1980_icsd_runner_c_r;
}
switch(FEAT_TRAINS, SELF, sw_1980_icsd_runner_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_1980_icsd_runner_cp;
	return spriteset_1980_icsd_runner_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1980_icsd_runner_pantocheck_at_1_r, position_in_vehid_chain % 2){
	1 : spriteset_1980_icsd_runner_cp_r;
	return spriteset_1980_icsd_runner_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1980_icsd_runner_pantocheck_at_0_r, position_in_vehid_chain % 2){
	1 : spriteset_1980_icsd_runner_c_r;
	return spriteset_1980_icsd_runner_cp;
}

switch(FEAT_TRAINS, SELF, sw_1980_icsd_runner_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_1980_icsd_runner_cp;
	return spriteset_1980_icsd_runner_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1980_icsd_runner_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1980_icsd_runner_pantocheck_at_1_r;
	return sw_1980_icsd_runner_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_1980_icsd_runner_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : spriteset_1980_icsd_runner_c_r;
	return sw_1980_icsd_runner_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_1980_icsd_runner_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1980_icsd_runner_pantocheck_at_2_r;
	return sw_1980_icsd_runner_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_1980_icsd_runner_lencheck_r, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_1980_icsd_runner_c_r;
	3 : sw_1980_icsd_runner_pantocheck_at_1_r;
	4 : sw_1980_icsd_runner_sidecheck_4_r;
	5 : sw_1980_icsd_runner_pantocheck_at_2_r;
	6 .. 7 : sw_1980_icsd_runner_sidecheck_6_r;
	return sw_1980_icsd_runner_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_1980_icsd_runner_pantocheck_at_2, position_in_vehid_chain % 3){
	2 : spriteset_1980_icsd_runner_cp_r;
	return spriteset_1980_icsd_runner_c;
}
switch(FEAT_TRAINS, SELF, sw_1980_icsd_runner_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_1980_icsd_runner_cp;
	return spriteset_1980_icsd_runner_c;
}

switch(FEAT_TRAINS, SELF, sw_1980_icsd_runner_pantocheck_at_1, position_in_vehid_chain % 2){
	1 : spriteset_1980_icsd_runner_cp_r;
	return spriteset_1980_icsd_runner_c;
}
switch(FEAT_TRAINS, SELF, sw_1980_icsd_runner_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_1980_icsd_runner_cp;
	return spriteset_1980_icsd_runner_c;
}

switch(FEAT_TRAINS, SELF, sw_1980_icsd_runner_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1980_icsd_runner_pantocheck_at_1;
	return sw_1980_icsd_runner_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_1980_icsd_runner_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1980_icsd_runner_pantocheck_at_1;
	return spriteset_1980_icsd_runner_c;
}

switch(FEAT_TRAINS, SELF, sw_1980_icsd_runner_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1980_icsd_runner_pantocheck_at_2;
	return sw_1980_icsd_runner_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_1980_icsd_runner_lencheck, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_1980_icsd_runner_c;
	3 : sw_1980_icsd_runner_pantocheck_at_1;
	4 : sw_1980_icsd_runner_sidecheck_4;
	5 : sw_1980_icsd_runner_pantocheck_at_2;
	6 .. 7 : sw_1980_icsd_runner_sidecheck_6;
	return sw_1980_icsd_runner_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_1980_icsd_runner_panto_direction_r_pos, position_in_vehid_chain_from_end){
	0: spriteset_1980_icsd_runner_fp; //Panto
	return spriteset_1980_icsd_runner_f; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_1980_icsd_runner_panto_direction_r, vehicle_is_flipped){
	0 : sw_1980_icsd_runner_panto_direction_r_pos;		//Front panto
	return spriteset_1980_icsd_runner_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_1980_icsd_runner_panto_flipcheck_r, vehicle_is_flipped){
	0 : sw_1980_icsd_runner_panto_direction_r;		//Not flipped, give Panto
	return spriteset_1980_icsd_runner_rp;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_1980_icsd_runner_frontcheck_r, position_in_vehid_chain){
	0: sw_1980_icsd_runner_panto_direction_r; //We need a pantograph, guaranteed
	return sw_1980_icsd_runner_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_1980_icsd_runner_panto_direction, vehicle_is_flipped){
	0 : spriteset_1980_icsd_runner_fp;		//Front panto
	return spriteset_1980_icsd_runner_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_1980_icsd_runner_panto_flipcheck, vehicle_is_flipped){
	0 : sw_1980_icsd_runner_panto_direction;		//Not flipped, give Panto
	return spriteset_1980_icsd_runner_r;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_1980_icsd_runner_frontcheck, position_in_vehid_chain){
	0: sw_1980_icsd_runner_panto_direction; //We need a pantograph, guaranteed
	return sw_1980_icsd_runner_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_1980_icsd_runner_directioncheck, vehicle_is_reversed){
	0: sw_1980_icsd_runner_frontcheck; //We are going forwards
	return sw_1980_icsd_runner_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_1980_icsd_runner_revcheck, vehicle_is_reversed){
	0 : sw_1980_icsd_runner_lencheck;
	return sw_1980_icsd_runner_lencheck_r;
}

switch(FEAT_TRAINS, SELF, sw_1980_icsd_runner_attach, vehicle_type_id){
	item_1980_icsd_runner	: return CB_RESULT_ATTACH_ALLOW  ;
	item_pgt_mu_coach	: return CB_RESULT_ATTACH_ALLOW  ;
	return string(STR_NO_COUPLE_MU_SAME) ;
}

/* Define the actual train */
item(FEAT_TRAINS, item_1980_icsd_runner) {
    /* Define properties first, make sure to set all of them */
    property {
        reliability_decay:            20;
		refittable_cargo_classes:	  CC_PASSENGERS ;
		cargo_allow_refit:			  [PASS, TOUR] ;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
		misc_flags: bitmask(TRAIN_FLAG_MU, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_2CC);
        track_type:                   ELRL;
        ai_special_flag:              AI_FLAG_PASSENGER;
        running_cost_base:            RUNNING_COST_ELECTRIC;
		length:						  8;
		dual_headed:				  1;
		
        refit_cost:                   0;
        // callback flags are not set manually
        ai_engine_rank:               0;
        engine_class:                 ENGINE_CLASS_ELECTRIC;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
		effect_spawn_model_and_powered : EFFECT_SPAWN_MODEL_ELECTRIC ;
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
        name:                         string(str_name_1980_icsd_runner);
        climates_available:           ALL_CLIMATES; 
        introduction_date:            date(1980, 1, 1);
        model_life:                   40; //How long should this train be buyable
        vehicle_life:                 40; //How long should this train last before renewal
        tractive_effort_coefficient:  0.119;
        weight:                       42 ton;
        power:                        1400 hp;
		cargo_capacity:				  70 ;
        speed:                        130 km/h;
		cost_factor:                    1;
		running_cost_factor:            1;
        loading_speed:                	5; 
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics {
        default				:	sw_1980_icsd_runner_directioncheck;
		can_attach_wagon	:	sw_1980_icsd_runner_attach ;
		create_effect		:	vfx_ohle ;
		additional_text		: 	string(STR_DESC_INTERCITY);
    }
	livery_override (item_pgt_mu_coach){
		default                     : sw_1980_icsd_runner_revcheck ;
		cargo_capacity              : 70 ;
		weight                      : 42 ;
		power                       : 1400 ;
		length						: 8;
	}
}
# 1 "pgt.pnml" 2
# 1 "src/EMU - Intercity/1990_icdd_originator.pnml" 1
spriteset(spriteset_1990_icdd_originator_fp,   "gfx/EMU - Intercity/1990_icdd_originator.png") {template_32(7, 39)}
spriteset(spriteset_1990_icdd_originator_rp,   "gfx/EMU - Intercity/1990_icdd_originator.png") {template_32(7, 64)}
spriteset(spriteset_1990_icdd_originator_f,    "gfx/EMU - Intercity/1990_icdd_originator.png") {template_32(185, 39)}
spriteset(spriteset_1990_icdd_originator_r,    "gfx/EMU - Intercity/1990_icdd_originator.png") {template_32(185, 64)}
spriteset(spriteset_1990_icdd_originator_c,    "gfx/EMU - Intercity/1990_icdd_originator.png") {template_32(7, 89)}
spriteset(spriteset_1990_icdd_originator_cp,   "gfx/EMU - Intercity/1990_icdd_originator.png") {template_32(185, 89)}
spriteset(spriteset_1990_icdd_originator_c_r,  "gfx/EMU - Intercity/1990_icdd_originator.png") {template_32_r(7, 89)}
spriteset(spriteset_1990_icdd_originator_cp_r, "gfx/EMU - Intercity/1990_icdd_originator.png") {template_32_r(185, 89)}

// C O D E

//Backward

switch(FEAT_TRAINS, SELF, sw_1990_icdd_originator_pantocheck_at_2_r, position_in_vehid_chain % 3){
	2 : spriteset_1990_icdd_originator_cp_r;
	return spriteset_1990_icdd_originator_c_r;
}
switch(FEAT_TRAINS, SELF, sw_1990_icdd_originator_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_1990_icdd_originator_cp;
	return spriteset_1990_icdd_originator_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1990_icdd_originator_pantocheck_at_1_r, position_in_vehid_chain % 2){
	1 : spriteset_1990_icdd_originator_cp_r;
	return spriteset_1990_icdd_originator_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1990_icdd_originator_pantocheck_at_0_r, position_in_vehid_chain % 2){
	1 : spriteset_1990_icdd_originator_c_r;
	return spriteset_1990_icdd_originator_cp;
}

switch(FEAT_TRAINS, SELF, sw_1990_icdd_originator_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_1990_icdd_originator_cp;
	return spriteset_1990_icdd_originator_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1990_icdd_originator_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1990_icdd_originator_pantocheck_at_1_r;
	return sw_1990_icdd_originator_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_1990_icdd_originator_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : spriteset_1990_icdd_originator_c_r;
	return sw_1990_icdd_originator_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_1990_icdd_originator_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1990_icdd_originator_pantocheck_at_2_r;
	return sw_1990_icdd_originator_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_1990_icdd_originator_lencheck_r, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_1990_icdd_originator_c_r;
	3 : sw_1990_icdd_originator_pantocheck_at_1_r;
	4 : sw_1990_icdd_originator_sidecheck_4_r;
	5 : sw_1990_icdd_originator_pantocheck_at_2_r;
	6 .. 7 : sw_1990_icdd_originator_sidecheck_6_r;
	return sw_1990_icdd_originator_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_1990_icdd_originator_pantocheck_at_2, position_in_vehid_chain % 3){
	2 : spriteset_1990_icdd_originator_cp_r;
	return spriteset_1990_icdd_originator_c;
}
switch(FEAT_TRAINS, SELF, sw_1990_icdd_originator_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_1990_icdd_originator_cp;
	return spriteset_1990_icdd_originator_c;
}

switch(FEAT_TRAINS, SELF, sw_1990_icdd_originator_pantocheck_at_1, position_in_vehid_chain % 2){
	1 : spriteset_1990_icdd_originator_cp_r;
	return spriteset_1990_icdd_originator_c;
}
switch(FEAT_TRAINS, SELF, sw_1990_icdd_originator_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_1990_icdd_originator_cp;
	return spriteset_1990_icdd_originator_c;
}

switch(FEAT_TRAINS, SELF, sw_1990_icdd_originator_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1990_icdd_originator_pantocheck_at_1;
	return sw_1990_icdd_originator_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_1990_icdd_originator_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1990_icdd_originator_pantocheck_at_1;
	return spriteset_1990_icdd_originator_c;
}

switch(FEAT_TRAINS, SELF, sw_1990_icdd_originator_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1990_icdd_originator_pantocheck_at_2;
	return sw_1990_icdd_originator_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_1990_icdd_originator_lencheck, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_1990_icdd_originator_c;
	3 : sw_1990_icdd_originator_pantocheck_at_1;
	4 : sw_1990_icdd_originator_sidecheck_4;
	5 : sw_1990_icdd_originator_pantocheck_at_2;
	6 .. 7 : sw_1990_icdd_originator_sidecheck_6;
	return sw_1990_icdd_originator_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_1990_icdd_originator_panto_direction_r_pos, position_in_vehid_chain_from_end){
	0: spriteset_1990_icdd_originator_fp; //Panto
	return spriteset_1990_icdd_originator_f; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_1990_icdd_originator_panto_direction_r, vehicle_is_flipped){
	0 : sw_1990_icdd_originator_panto_direction_r_pos;		//Front panto
	return spriteset_1990_icdd_originator_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_1990_icdd_originator_panto_flipcheck_r, vehicle_is_flipped){
	0 : sw_1990_icdd_originator_panto_direction_r;		//Not flipped, give Panto
	return spriteset_1990_icdd_originator_rp;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_1990_icdd_originator_frontcheck_r, position_in_vehid_chain){
	0: sw_1990_icdd_originator_panto_direction_r; //We need a pantograph, guaranteed
	return sw_1990_icdd_originator_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_1990_icdd_originator_panto_direction, vehicle_is_flipped){
	0 : spriteset_1990_icdd_originator_fp;		//Front panto
	return spriteset_1990_icdd_originator_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_1990_icdd_originator_panto_flipcheck, vehicle_is_flipped){
	0 : sw_1990_icdd_originator_panto_direction;		//Not flipped, give Panto
	return spriteset_1990_icdd_originator_r;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_1990_icdd_originator_frontcheck, position_in_vehid_chain){
	0: sw_1990_icdd_originator_panto_direction; //We need a pantograph, guaranteed
	return sw_1990_icdd_originator_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_1990_icdd_originator_directioncheck, vehicle_is_reversed){
	0: sw_1990_icdd_originator_frontcheck; //We are going forwards
	return sw_1990_icdd_originator_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_1990_icdd_originator_revcheck, vehicle_is_reversed){
	0 : sw_1990_icdd_originator_lencheck;
	return sw_1990_icdd_originator_lencheck_r;
}

switch(FEAT_TRAINS, SELF, sw_1990_icdd_originator_attach, vehicle_type_id){
	item_1990_icdd_originator	: return CB_RESULT_ATTACH_ALLOW  ;
	item_pgt_mu_coach	: return CB_RESULT_ATTACH_ALLOW  ;
	return string(STR_NO_COUPLE_MU_SAME) ;
}

/* Define the actual train */
item(FEAT_TRAINS, item_1990_icdd_originator) {
    /* Define properties first, make sure to set all of them */
    property {
        reliability_decay:            20;
		refittable_cargo_classes:	  CC_PASSENGERS ;
		cargo_allow_refit:			  [PASS, TOUR] ;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
		misc_flags: bitmask(TRAIN_FLAG_MU, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_2CC);
        track_type:                   ELRL;
        ai_special_flag:              AI_FLAG_PASSENGER;
        running_cost_base:            RUNNING_COST_ELECTRIC;
		length:						  8;
		dual_headed:				  1;
		
        refit_cost:                   0;
        // callback flags are not set manually
        ai_engine_rank:               0;
        engine_class:                 ENGINE_CLASS_ELECTRIC;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
		effect_spawn_model_and_powered : EFFECT_SPAWN_MODEL_ELECTRIC ;
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
        name:                         string(str_name_1990_icdd_originator);
        climates_available:           ALL_CLIMATES; 
        introduction_date:            date(1990, 1, 1);
        model_life:                   40; //How long should this train be buyable
        vehicle_life:                 40; //How long should this train last before renewal
        tractive_effort_coefficient:  0.058;
        weight:                       55 ton;
        power:                        920 hp;
		cargo_capacity:				  100 ;
        speed:                        130 km/h;
		cost_factor:                    1;
		running_cost_factor:            1;
        loading_speed:                	5; 
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics {
        default				:	sw_1990_icdd_originator_directioncheck;
		can_attach_wagon	:	sw_1990_icdd_originator_attach ;
		create_effect		:	vfx_ohle ;
		additional_text		: 	string(STR_DESC_INTERCITY);
    }
	livery_override (item_pgt_mu_coach){
		default                     : sw_1990_icdd_originator_revcheck ;
		cargo_capacity              : 100 ;
		weight                      : 55 ;
		power                       : 920 ;
		length						: 8;
	}
}
# 1 "pgt.pnml" 2
# 1 "src/EMU - Intercity/2000_icdd_awabakal.pnml" 1
spriteset(spriteset_2000_icdd_awabakal_fp,   "gfx/EMU - Intercity/2000_icdd_awabakal.png") {template_32(7, 39)}
spriteset(spriteset_2000_icdd_awabakal_rp,   "gfx/EMU - Intercity/2000_icdd_awabakal.png") {template_32(7, 64)}
spriteset(spriteset_2000_icdd_awabakal_f,    "gfx/EMU - Intercity/2000_icdd_awabakal.png") {template_32(185, 39)}
spriteset(spriteset_2000_icdd_awabakal_r,    "gfx/EMU - Intercity/2000_icdd_awabakal.png") {template_32(185, 64)}
spriteset(spriteset_2000_icdd_awabakal_c,    "gfx/EMU - Intercity/2000_icdd_awabakal.png") {template_32(7, 89)}
spriteset(spriteset_2000_icdd_awabakal_cp,   "gfx/EMU - Intercity/2000_icdd_awabakal.png") {template_32(185, 89)}
spriteset(spriteset_2000_icdd_awabakal_c_r,  "gfx/EMU - Intercity/2000_icdd_awabakal.png") {template_32_r(7, 89)}
spriteset(spriteset_2000_icdd_awabakal_cp_r, "gfx/EMU - Intercity/2000_icdd_awabakal.png") {template_32_r(185, 89)}

// C O D E

//Backward

switch(FEAT_TRAINS, SELF, sw_2000_icdd_awabakal_pantocheck_at_2_r, position_in_vehid_chain % 3){
	2 : spriteset_2000_icdd_awabakal_cp_r;
	return spriteset_2000_icdd_awabakal_c_r;
}
switch(FEAT_TRAINS, SELF, sw_2000_icdd_awabakal_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_2000_icdd_awabakal_cp;
	return spriteset_2000_icdd_awabakal_c_r;
}

switch(FEAT_TRAINS, SELF, sw_2000_icdd_awabakal_pantocheck_at_1_r, position_in_vehid_chain % 2){
	1 : spriteset_2000_icdd_awabakal_cp_r;
	return spriteset_2000_icdd_awabakal_c_r;
}

switch(FEAT_TRAINS, SELF, sw_2000_icdd_awabakal_pantocheck_at_0_r, position_in_vehid_chain % 2){
	1 : spriteset_2000_icdd_awabakal_c_r;
	return spriteset_2000_icdd_awabakal_cp;
}

switch(FEAT_TRAINS, SELF, sw_2000_icdd_awabakal_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_2000_icdd_awabakal_cp;
	return spriteset_2000_icdd_awabakal_c_r;
}

switch(FEAT_TRAINS, SELF, sw_2000_icdd_awabakal_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2000_icdd_awabakal_pantocheck_at_1_r;
	return sw_2000_icdd_awabakal_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_2000_icdd_awabakal_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : spriteset_2000_icdd_awabakal_c_r;
	return sw_2000_icdd_awabakal_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_2000_icdd_awabakal_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2000_icdd_awabakal_pantocheck_at_2_r;
	return sw_2000_icdd_awabakal_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_2000_icdd_awabakal_lencheck_r, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_2000_icdd_awabakal_c_r;
	3 : sw_2000_icdd_awabakal_pantocheck_at_1_r;
	4 : sw_2000_icdd_awabakal_sidecheck_4_r;
	5 : sw_2000_icdd_awabakal_pantocheck_at_2_r;
	6 .. 7 : sw_2000_icdd_awabakal_sidecheck_6_r;
	return sw_2000_icdd_awabakal_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_2000_icdd_awabakal_pantocheck_at_2, position_in_vehid_chain % 3){
	2 : spriteset_2000_icdd_awabakal_cp_r;
	return spriteset_2000_icdd_awabakal_c;
}
switch(FEAT_TRAINS, SELF, sw_2000_icdd_awabakal_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_2000_icdd_awabakal_cp;
	return spriteset_2000_icdd_awabakal_c;
}

switch(FEAT_TRAINS, SELF, sw_2000_icdd_awabakal_pantocheck_at_1, position_in_vehid_chain % 2){
	1 : spriteset_2000_icdd_awabakal_cp_r;
	return spriteset_2000_icdd_awabakal_c;
}
switch(FEAT_TRAINS, SELF, sw_2000_icdd_awabakal_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_2000_icdd_awabakal_cp;
	return spriteset_2000_icdd_awabakal_c;
}

switch(FEAT_TRAINS, SELF, sw_2000_icdd_awabakal_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2000_icdd_awabakal_pantocheck_at_1;
	return sw_2000_icdd_awabakal_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_2000_icdd_awabakal_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2000_icdd_awabakal_pantocheck_at_1;
	return spriteset_2000_icdd_awabakal_c;
}

switch(FEAT_TRAINS, SELF, sw_2000_icdd_awabakal_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2000_icdd_awabakal_pantocheck_at_2;
	return sw_2000_icdd_awabakal_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_2000_icdd_awabakal_lencheck, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_2000_icdd_awabakal_c;
	3 : sw_2000_icdd_awabakal_pantocheck_at_1;
	4 : sw_2000_icdd_awabakal_sidecheck_4;
	5 : sw_2000_icdd_awabakal_pantocheck_at_2;
	6 .. 7 : sw_2000_icdd_awabakal_sidecheck_6;
	return sw_2000_icdd_awabakal_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_2000_icdd_awabakal_panto_direction_r_pos, position_in_vehid_chain_from_end){
	0: spriteset_2000_icdd_awabakal_fp; //Panto
	return spriteset_2000_icdd_awabakal_f; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_2000_icdd_awabakal_panto_direction_r, vehicle_is_flipped){
	0 : sw_2000_icdd_awabakal_panto_direction_r_pos;		//Front panto
	return spriteset_2000_icdd_awabakal_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_2000_icdd_awabakal_panto_flipcheck_r, vehicle_is_flipped){
	0 : sw_2000_icdd_awabakal_panto_direction_r;		//Not flipped, give Panto
	return spriteset_2000_icdd_awabakal_rp;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_2000_icdd_awabakal_frontcheck_r, position_in_vehid_chain){
	0: sw_2000_icdd_awabakal_panto_direction_r; //We need a pantograph, guaranteed
	return sw_2000_icdd_awabakal_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_2000_icdd_awabakal_panto_direction, vehicle_is_flipped){
	0 : spriteset_2000_icdd_awabakal_fp;		//Front panto
	return spriteset_2000_icdd_awabakal_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_2000_icdd_awabakal_panto_flipcheck, vehicle_is_flipped){
	0 : sw_2000_icdd_awabakal_panto_direction;		//Not flipped, give Panto
	return spriteset_2000_icdd_awabakal_r;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_2000_icdd_awabakal_frontcheck, position_in_vehid_chain){
	0: sw_2000_icdd_awabakal_panto_direction; //We need a pantograph, guaranteed
	return sw_2000_icdd_awabakal_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_2000_icdd_awabakal_directioncheck, vehicle_is_reversed){
	0: sw_2000_icdd_awabakal_frontcheck; //We are going forwards
	return sw_2000_icdd_awabakal_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_2000_icdd_awabakal_revcheck, vehicle_is_reversed){
	0 : sw_2000_icdd_awabakal_lencheck;
	return sw_2000_icdd_awabakal_lencheck_r;
}

switch(FEAT_TRAINS, SELF, sw_2000_icdd_awabakal_attach, vehicle_type_id){
	item_2000_icdd_awabakal	: return CB_RESULT_ATTACH_ALLOW  ;
	item_pgt_mu_coach	: return CB_RESULT_ATTACH_ALLOW  ;
	return string(STR_NO_COUPLE_MU_SAME) ;
}

/* Define the actual train */
item(FEAT_TRAINS, item_2000_icdd_awabakal) {
    /* Define properties first, make sure to set all of them */
    property {
        reliability_decay:            20;
		refittable_cargo_classes:	  CC_PASSENGERS ;
		cargo_allow_refit:			  [PASS, TOUR] ;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
		misc_flags: bitmask(TRAIN_FLAG_MU, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_2CC);
        track_type:                   ELRL;
        ai_special_flag:              AI_FLAG_PASSENGER;
        running_cost_base:            RUNNING_COST_ELECTRIC;
		length:						  8;
		dual_headed:				  1;
        refit_cost:                   0;
        // callback flags are not set manually
        ai_engine_rank:               0;
        engine_class:                 ENGINE_CLASS_ELECTRIC;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
		effect_spawn_model_and_powered : EFFECT_SPAWN_MODEL_ELECTRIC ;
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
        name:                         string(str_name_2000_icdd_awabakal);
        climates_available:           ALL_CLIMATES; 
        introduction_date:            date(2000, 1, 1);
        model_life:                   40; //How long should this train be buyable
        vehicle_life:                 40; //How long should this train last before renewal
        tractive_effort_coefficient:  0.067;
        weight:                       52 ton;
        power:                        1000 hp;
		cargo_capacity:				  110 ;
        speed:                        160 km/h;
		cost_factor:                    1;
		running_cost_factor:            1;
        loading_speed:                	5; 
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics {
        default				:	sw_2000_icdd_awabakal_directioncheck;
		can_attach_wagon	:	sw_2000_icdd_awabakal_attach ;
		create_effect		:	vfx_ohle ;
		additional_text		: 	string(STR_DESC_INTERCITY);
    }
	livery_override (item_pgt_mu_coach){
		default                     : sw_2000_icdd_awabakal_revcheck ;
		cargo_capacity              : 110 ;
		weight                      : 52 ;
		power                       : 1000 ;
		length						: 8;
	}
}
# 1 "pgt.pnml" 2
# 1 "src/EMU - Intercity/2000_icsd_wallaby.pnml" 1
spriteset(spriteset_2000_icsd_wallaby_fp,   "gfx/EMU - Intercity/2000_icsd_wallaby.png") {template_32(7, 39)}
spriteset(spriteset_2000_icsd_wallaby_rp,   "gfx/EMU - Intercity/2000_icsd_wallaby.png") {template_32(7, 64)}
spriteset(spriteset_2000_icsd_wallaby_f,    "gfx/EMU - Intercity/2000_icsd_wallaby.png") {template_32(185, 39)}
spriteset(spriteset_2000_icsd_wallaby_r,    "gfx/EMU - Intercity/2000_icsd_wallaby.png") {template_32(185, 64)}
spriteset(spriteset_2000_icsd_wallaby_c,    "gfx/EMU - Intercity/2000_icsd_wallaby.png") {template_32(7, 89)}
spriteset(spriteset_2000_icsd_wallaby_cp,   "gfx/EMU - Intercity/2000_icsd_wallaby.png") {template_32(185, 89)}
spriteset(spriteset_2000_icsd_wallaby_c_r,  "gfx/EMU - Intercity/2000_icsd_wallaby.png") {template_32_r(7, 89)}
spriteset(spriteset_2000_icsd_wallaby_cp_r, "gfx/EMU - Intercity/2000_icsd_wallaby.png") {template_32_r(185, 89)}

// C O D E

//Backward

switch(FEAT_TRAINS, SELF, sw_2000_icsd_wallaby_pantocheck_at_2_r, position_in_vehid_chain % 3){
	2 : spriteset_2000_icsd_wallaby_cp_r;
	return spriteset_2000_icsd_wallaby_c_r;
}
switch(FEAT_TRAINS, SELF, sw_2000_icsd_wallaby_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_2000_icsd_wallaby_cp;
	return spriteset_2000_icsd_wallaby_c_r;
}

switch(FEAT_TRAINS, SELF, sw_2000_icsd_wallaby_pantocheck_at_1_r, position_in_vehid_chain % 2){
	1 : spriteset_2000_icsd_wallaby_cp_r;
	return spriteset_2000_icsd_wallaby_c_r;
}

switch(FEAT_TRAINS, SELF, sw_2000_icsd_wallaby_pantocheck_at_0_r, position_in_vehid_chain % 2){
	1 : spriteset_2000_icsd_wallaby_c_r;
	return spriteset_2000_icsd_wallaby_cp;
}

switch(FEAT_TRAINS, SELF, sw_2000_icsd_wallaby_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_2000_icsd_wallaby_cp;
	return spriteset_2000_icsd_wallaby_c_r;
}

switch(FEAT_TRAINS, SELF, sw_2000_icsd_wallaby_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2000_icsd_wallaby_pantocheck_at_1_r;
	return sw_2000_icsd_wallaby_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_2000_icsd_wallaby_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : spriteset_2000_icsd_wallaby_c_r;
	return sw_2000_icsd_wallaby_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_2000_icsd_wallaby_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2000_icsd_wallaby_pantocheck_at_2_r;
	return sw_2000_icsd_wallaby_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_2000_icsd_wallaby_lencheck_r, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_2000_icsd_wallaby_c_r;
	3 : sw_2000_icsd_wallaby_pantocheck_at_1_r;
	4 : sw_2000_icsd_wallaby_sidecheck_4_r;
	5 : sw_2000_icsd_wallaby_pantocheck_at_2_r;
	6 .. 7 : sw_2000_icsd_wallaby_sidecheck_6_r;
	return sw_2000_icsd_wallaby_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_2000_icsd_wallaby_pantocheck_at_2, position_in_vehid_chain % 3){
	2 : spriteset_2000_icsd_wallaby_cp_r;
	return spriteset_2000_icsd_wallaby_c;
}
switch(FEAT_TRAINS, SELF, sw_2000_icsd_wallaby_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_2000_icsd_wallaby_cp;
	return spriteset_2000_icsd_wallaby_c;
}

switch(FEAT_TRAINS, SELF, sw_2000_icsd_wallaby_pantocheck_at_1, position_in_vehid_chain % 2){
	1 : spriteset_2000_icsd_wallaby_cp_r;
	return spriteset_2000_icsd_wallaby_c;
}
switch(FEAT_TRAINS, SELF, sw_2000_icsd_wallaby_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_2000_icsd_wallaby_cp;
	return spriteset_2000_icsd_wallaby_c;
}

switch(FEAT_TRAINS, SELF, sw_2000_icsd_wallaby_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2000_icsd_wallaby_pantocheck_at_1;
	return sw_2000_icsd_wallaby_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_2000_icsd_wallaby_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2000_icsd_wallaby_pantocheck_at_1;
	return spriteset_2000_icsd_wallaby_c;
}

switch(FEAT_TRAINS, SELF, sw_2000_icsd_wallaby_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2000_icsd_wallaby_pantocheck_at_2;
	return sw_2000_icsd_wallaby_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_2000_icsd_wallaby_lencheck, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_2000_icsd_wallaby_c;
	3 : sw_2000_icsd_wallaby_pantocheck_at_1;
	4 : sw_2000_icsd_wallaby_sidecheck_4;
	5 : sw_2000_icsd_wallaby_pantocheck_at_2;
	6 .. 7 : sw_2000_icsd_wallaby_sidecheck_6;
	return sw_2000_icsd_wallaby_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_2000_icsd_wallaby_panto_direction_r_pos, position_in_vehid_chain_from_end){
	0: spriteset_2000_icsd_wallaby_fp; //Panto
	return spriteset_2000_icsd_wallaby_f; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_2000_icsd_wallaby_panto_direction_r, vehicle_is_flipped){
	0 : sw_2000_icsd_wallaby_panto_direction_r_pos;		//Front panto
	return spriteset_2000_icsd_wallaby_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_2000_icsd_wallaby_panto_flipcheck_r, vehicle_is_flipped){
	0 : sw_2000_icsd_wallaby_panto_direction_r;		//Not flipped, give Panto
	return spriteset_2000_icsd_wallaby_rp;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_2000_icsd_wallaby_frontcheck_r, position_in_vehid_chain){
	0: sw_2000_icsd_wallaby_panto_direction_r; //We need a pantograph, guaranteed
	return sw_2000_icsd_wallaby_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_2000_icsd_wallaby_panto_direction, vehicle_is_flipped){
	0 : spriteset_2000_icsd_wallaby_fp;		//Front panto
	return spriteset_2000_icsd_wallaby_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_2000_icsd_wallaby_panto_flipcheck, vehicle_is_flipped){
	0 : sw_2000_icsd_wallaby_panto_direction;		//Not flipped, give Panto
	return spriteset_2000_icsd_wallaby_r;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_2000_icsd_wallaby_frontcheck, position_in_vehid_chain){
	0: sw_2000_icsd_wallaby_panto_direction; //We need a pantograph, guaranteed
	return sw_2000_icsd_wallaby_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_2000_icsd_wallaby_directioncheck, vehicle_is_reversed){
	0: sw_2000_icsd_wallaby_frontcheck; //We are going forwards
	return sw_2000_icsd_wallaby_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_2000_icsd_wallaby_revcheck, vehicle_is_reversed){
	0 : sw_2000_icsd_wallaby_lencheck;
	return sw_2000_icsd_wallaby_lencheck_r;
}

switch(FEAT_TRAINS, SELF, sw_2000_icsd_wallaby_attach, vehicle_type_id){
	item_2000_icsd_wallaby	: return CB_RESULT_ATTACH_ALLOW  ;
	item_pgt_mu_coach	: return CB_RESULT_ATTACH_ALLOW  ;
	return string(STR_NO_COUPLE_MU_SAME) ;
}

/* Define the actual train */
item(FEAT_TRAINS, item_2000_icsd_wallaby) {
    /* Define properties first, make sure to set all of them */
    property {
        reliability_decay:            20;
		refittable_cargo_classes:	  CC_PASSENGERS ;
		cargo_allow_refit:			  [PASS, TOUR] ;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
		misc_flags: bitmask(TRAIN_FLAG_MU, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_2CC);
        track_type:                   ELRL;
        ai_special_flag:              AI_FLAG_PASSENGER;
        running_cost_base:            RUNNING_COST_ELECTRIC;
		length:						  8;
		dual_headed:				  1;
        refit_cost:                   0;
        // callback flags are not set manually
        ai_engine_rank:               0;
        engine_class:                 ENGINE_CLASS_ELECTRIC;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
		effect_spawn_model_and_powered : EFFECT_SPAWN_MODEL_ELECTRIC ;
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
        name:                         string(str_name_2000_icsd_wallaby);
        climates_available:           ALL_CLIMATES; 
        introduction_date:            date(2000, 1, 1);
        model_life:                   40; //How long should this train be buyable
        vehicle_life:                 40; //How long should this train last before renewal
        tractive_effort_coefficient:  0.157;
        weight:                       45 ton;
        power:                        2000 hp;
		cargo_capacity:				  70 ;
        speed:                        160 km/h;
		
		cost_factor:                    1;
		running_cost_factor:            1;
        loading_speed:                	5; 
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics {
        default				:	sw_2000_icsd_wallaby_directioncheck;
		can_attach_wagon	:	sw_2000_icsd_wallaby_attach ;
		create_effect		:	vfx_ohle ;
		additional_text		: 	string(STR_DESC_INTERCITY);
    }
	livery_override (item_pgt_mu_coach){
		default                     : sw_2000_icsd_wallaby_revcheck ;
		cargo_capacity              : 70 ;
		weight                      : 45 ;
		power                       : 2000 ;
		length						: 8;
	}
}
# 1 "pgt.pnml" 2
# 1 "src/EMU - Intercity/2015_icsd_sonic.pnml" 1
spriteset(spriteset_2015_icsd_sonic_fp,   "gfx/EMU - Intercity/2015_icsd_sonic.png") {template_32(7, 39)}
spriteset(spriteset_2015_icsd_sonic_rp,   "gfx/EMU - Intercity/2015_icsd_sonic.png") {template_32(7, 64)}
spriteset(spriteset_2015_icsd_sonic_f,    "gfx/EMU - Intercity/2015_icsd_sonic.png") {template_32(185, 39)}
spriteset(spriteset_2015_icsd_sonic_r,    "gfx/EMU - Intercity/2015_icsd_sonic.png") {template_32(185, 64)}
spriteset(spriteset_2015_icsd_sonic_c,    "gfx/EMU - Intercity/2015_icsd_sonic.png") {template_32(7, 89)}
spriteset(spriteset_2015_icsd_sonic_cp,   "gfx/EMU - Intercity/2015_icsd_sonic.png") {template_32(185, 89)}
spriteset(spriteset_2015_icsd_sonic_c_r,  "gfx/EMU - Intercity/2015_icsd_sonic.png") {template_32_r(7, 89)}
spriteset(spriteset_2015_icsd_sonic_cp_r, "gfx/EMU - Intercity/2015_icsd_sonic.png") {template_32_r(185, 89)}

// C O D E

//Backward

switch(FEAT_TRAINS, SELF, sw_2015_icsd_sonic_pantocheck_at_2_r, position_in_vehid_chain % 3){
	2 : spriteset_2015_icsd_sonic_cp_r;
	return spriteset_2015_icsd_sonic_c_r;
}
switch(FEAT_TRAINS, SELF, sw_2015_icsd_sonic_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_2015_icsd_sonic_cp;
	return spriteset_2015_icsd_sonic_c_r;
}

switch(FEAT_TRAINS, SELF, sw_2015_icsd_sonic_pantocheck_at_1_r, position_in_vehid_chain % 2){
	1 : spriteset_2015_icsd_sonic_cp_r;
	return spriteset_2015_icsd_sonic_c_r;
}

switch(FEAT_TRAINS, SELF, sw_2015_icsd_sonic_pantocheck_at_0_r, position_in_vehid_chain % 2){
	1 : spriteset_2015_icsd_sonic_c_r;
	return spriteset_2015_icsd_sonic_cp;
}

switch(FEAT_TRAINS, SELF, sw_2015_icsd_sonic_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_2015_icsd_sonic_cp;
	return spriteset_2015_icsd_sonic_c_r;
}

switch(FEAT_TRAINS, SELF, sw_2015_icsd_sonic_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2015_icsd_sonic_pantocheck_at_1_r;
	return sw_2015_icsd_sonic_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_2015_icsd_sonic_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : spriteset_2015_icsd_sonic_c_r;
	return sw_2015_icsd_sonic_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_2015_icsd_sonic_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2015_icsd_sonic_pantocheck_at_2_r;
	return sw_2015_icsd_sonic_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_2015_icsd_sonic_lencheck_r, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_2015_icsd_sonic_c_r;
	3 : sw_2015_icsd_sonic_pantocheck_at_1_r;
	4 : sw_2015_icsd_sonic_sidecheck_4_r;
	5 : sw_2015_icsd_sonic_pantocheck_at_2_r;
	6 .. 7 : sw_2015_icsd_sonic_sidecheck_6_r;
	return sw_2015_icsd_sonic_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_2015_icsd_sonic_pantocheck_at_2, position_in_vehid_chain % 3){
	2 : spriteset_2015_icsd_sonic_cp_r;
	return spriteset_2015_icsd_sonic_c;
}
switch(FEAT_TRAINS, SELF, sw_2015_icsd_sonic_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_2015_icsd_sonic_cp;
	return spriteset_2015_icsd_sonic_c;
}

switch(FEAT_TRAINS, SELF, sw_2015_icsd_sonic_pantocheck_at_1, position_in_vehid_chain % 2){
	1 : spriteset_2015_icsd_sonic_cp_r;
	return spriteset_2015_icsd_sonic_c;
}
switch(FEAT_TRAINS, SELF, sw_2015_icsd_sonic_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_2015_icsd_sonic_cp;
	return spriteset_2015_icsd_sonic_c;
}

switch(FEAT_TRAINS, SELF, sw_2015_icsd_sonic_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2015_icsd_sonic_pantocheck_at_1;
	return sw_2015_icsd_sonic_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_2015_icsd_sonic_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2015_icsd_sonic_pantocheck_at_1;
	return spriteset_2015_icsd_sonic_c;
}

switch(FEAT_TRAINS, SELF, sw_2015_icsd_sonic_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2015_icsd_sonic_pantocheck_at_2;
	return sw_2015_icsd_sonic_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_2015_icsd_sonic_lencheck, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_2015_icsd_sonic_c;
	3 : sw_2015_icsd_sonic_pantocheck_at_1;
	4 : sw_2015_icsd_sonic_sidecheck_4;
	5 : sw_2015_icsd_sonic_pantocheck_at_2;
	6 .. 7 : sw_2015_icsd_sonic_sidecheck_6;
	return sw_2015_icsd_sonic_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_2015_icsd_sonic_panto_direction_r_pos, position_in_vehid_chain_from_end){
	0: spriteset_2015_icsd_sonic_fp; //Panto
	return spriteset_2015_icsd_sonic_f; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_2015_icsd_sonic_panto_direction_r, vehicle_is_flipped){
	0 : sw_2015_icsd_sonic_panto_direction_r_pos;		//Front panto
	return spriteset_2015_icsd_sonic_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_2015_icsd_sonic_panto_flipcheck_r, vehicle_is_flipped){
	0 : sw_2015_icsd_sonic_panto_direction_r;		//Not flipped, give Panto
	return spriteset_2015_icsd_sonic_rp;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_2015_icsd_sonic_frontcheck_r, position_in_vehid_chain){
	0: sw_2015_icsd_sonic_panto_direction_r; //We need a pantograph, guaranteed
	return sw_2015_icsd_sonic_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_2015_icsd_sonic_panto_direction, vehicle_is_flipped){
	0 : spriteset_2015_icsd_sonic_fp;		//Front panto
	return spriteset_2015_icsd_sonic_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_2015_icsd_sonic_panto_flipcheck, vehicle_is_flipped){
	0 : sw_2015_icsd_sonic_panto_direction;		//Not flipped, give Panto
	return spriteset_2015_icsd_sonic_r;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_2015_icsd_sonic_frontcheck, position_in_vehid_chain){
	0: sw_2015_icsd_sonic_panto_direction; //We need a pantograph, guaranteed
	return sw_2015_icsd_sonic_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_2015_icsd_sonic_directioncheck, vehicle_is_reversed){
	0: sw_2015_icsd_sonic_frontcheck; //We are going forwards
	return sw_2015_icsd_sonic_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_2015_icsd_sonic_revcheck, vehicle_is_reversed){
	0 : sw_2015_icsd_sonic_lencheck;
	return sw_2015_icsd_sonic_lencheck_r;
}

switch(FEAT_TRAINS, SELF, sw_2015_icsd_sonic_attach, vehicle_type_id){
	item_2015_icsd_sonic	: return CB_RESULT_ATTACH_ALLOW  ;
	item_pgt_mu_coach	: return CB_RESULT_ATTACH_ALLOW  ;
	return string(STR_NO_COUPLE_MU_SAME) ;
}

/* Define the actual train */
item(FEAT_TRAINS, item_2015_icsd_sonic) {
    /* Define properties first, make sure to set all of them */
    property {
        reliability_decay:            20;
		refittable_cargo_classes:	  CC_PASSENGERS ;
		cargo_allow_refit:			  [PASS, TOUR] ;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
		misc_flags: bitmask(TRAIN_FLAG_MU, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_2CC);
        track_type:                   ELRL;
        ai_special_flag:              AI_FLAG_PASSENGER;
        running_cost_base:            RUNNING_COST_ELECTRIC;
		length:						  8;
		dual_headed:				  1;
		
        refit_cost:                   0;
        // callback flags are not set manually
        ai_engine_rank:               0;
        engine_class:                 ENGINE_CLASS_ELECTRIC;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
		effect_spawn_model_and_powered : EFFECT_SPAWN_MODEL_ELECTRIC ;
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
        name:                         string(str_name_2015_icsd_sonic);
        climates_available:           ALL_CLIMATES; 
        introduction_date:            date(2015, 1, 1);
        model_life:                   40; //How long should this train be buyable
        vehicle_life:                 40; //How long should this train last before renewal
        tractive_effort_coefficient:  0.195;
        weight:                       40 ton;
        power:                        2200 hp;
		cargo_capacity:				  80 ;
        speed:                        160 km/h;
		cost_factor:                    1;
		running_cost_factor:            1;
        loading_speed:                	5; 
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics {
        default				:	sw_2015_icsd_sonic_directioncheck;
		can_attach_wagon	:	sw_2015_icsd_sonic_attach ;
		create_effect		:	vfx_ohle ;
		additional_text		: 	string(STR_DESC_INTERCITY);
    }
	livery_override (item_pgt_mu_coach){
		default                     : sw_2015_icsd_sonic_revcheck ;
		cargo_capacity              : 80 ;
		weight                      : 40 ;
		power                       : 2200 ;
		length						: 8;
	}
}
# 1 "pgt.pnml" 2

# 1 "src/EMU - Suburban/1919_ssd_lucy.pnml" 1
spriteset(spriteset_1919_ssd_lucy_fp,   "gfx/EMU - Suburban/1919_ssd_lucy.png") {template_32(7, 39)}
spriteset(spriteset_1919_ssd_lucy_rp,   "gfx/EMU - Suburban/1919_ssd_lucy.png") {template_32(7, 64)}
spriteset(spriteset_1919_ssd_lucy_f,    "gfx/EMU - Suburban/1919_ssd_lucy.png") {template_32(185, 39)}
spriteset(spriteset_1919_ssd_lucy_r,    "gfx/EMU - Suburban/1919_ssd_lucy.png") {template_32(185, 64)}
spriteset(spriteset_1919_ssd_lucy_c,    "gfx/EMU - Suburban/1919_ssd_lucy.png") {template_32(7, 89)}
spriteset(spriteset_1919_ssd_lucy_cp,   "gfx/EMU - Suburban/1919_ssd_lucy.png") {template_32(185, 89)}
spriteset(spriteset_1919_ssd_lucy_c_r,  "gfx/EMU - Suburban/1919_ssd_lucy.png") {template_32_r(7, 89)}
spriteset(spriteset_1919_ssd_lucy_cp_r, "gfx/EMU - Suburban/1919_ssd_lucy.png") {template_32_r(185, 89)}

// C O D E

//Backward

switch(FEAT_TRAINS, SELF, sw_1919_ssd_lucy_pantocheck_at_2_r, position_in_vehid_chain % 3){
	2 : spriteset_1919_ssd_lucy_cp_r;
	return spriteset_1919_ssd_lucy_c_r;
}
switch(FEAT_TRAINS, SELF, sw_1919_ssd_lucy_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_1919_ssd_lucy_cp;
	return spriteset_1919_ssd_lucy_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1919_ssd_lucy_pantocheck_at_1_r, position_in_vehid_chain % 2){
	1 : spriteset_1919_ssd_lucy_cp_r;
	return spriteset_1919_ssd_lucy_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1919_ssd_lucy_pantocheck_at_0_r, position_in_vehid_chain % 2){
	1 : spriteset_1919_ssd_lucy_c_r;
	return spriteset_1919_ssd_lucy_cp;
}

switch(FEAT_TRAINS, SELF, sw_1919_ssd_lucy_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_1919_ssd_lucy_cp;
	return spriteset_1919_ssd_lucy_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1919_ssd_lucy_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1919_ssd_lucy_pantocheck_at_1_r;
	return sw_1919_ssd_lucy_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_1919_ssd_lucy_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : spriteset_1919_ssd_lucy_c_r;
	return sw_1919_ssd_lucy_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_1919_ssd_lucy_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1919_ssd_lucy_pantocheck_at_2_r;
	return sw_1919_ssd_lucy_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_1919_ssd_lucy_lencheck_r, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_1919_ssd_lucy_c_r;
	3 : sw_1919_ssd_lucy_pantocheck_at_1_r;
	4 : sw_1919_ssd_lucy_sidecheck_4_r;
	5 : sw_1919_ssd_lucy_pantocheck_at_2_r;
	6 .. 7 : sw_1919_ssd_lucy_sidecheck_6_r;
	return sw_1919_ssd_lucy_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_1919_ssd_lucy_pantocheck_at_2, position_in_vehid_chain % 3){
	2 : spriteset_1919_ssd_lucy_cp_r;
	return spriteset_1919_ssd_lucy_c;
}
switch(FEAT_TRAINS, SELF, sw_1919_ssd_lucy_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_1919_ssd_lucy_cp;
	return spriteset_1919_ssd_lucy_c;
}

switch(FEAT_TRAINS, SELF, sw_1919_ssd_lucy_pantocheck_at_1, position_in_vehid_chain % 2){
	1 : spriteset_1919_ssd_lucy_cp_r;
	return spriteset_1919_ssd_lucy_c;
}
switch(FEAT_TRAINS, SELF, sw_1919_ssd_lucy_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_1919_ssd_lucy_cp;
	return spriteset_1919_ssd_lucy_c;
}

switch(FEAT_TRAINS, SELF, sw_1919_ssd_lucy_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1919_ssd_lucy_pantocheck_at_1;
	return sw_1919_ssd_lucy_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_1919_ssd_lucy_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1919_ssd_lucy_pantocheck_at_1;
	return spriteset_1919_ssd_lucy_c;
}

switch(FEAT_TRAINS, SELF, sw_1919_ssd_lucy_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1919_ssd_lucy_pantocheck_at_2;
	return sw_1919_ssd_lucy_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_1919_ssd_lucy_lencheck, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_1919_ssd_lucy_c;
	3 : sw_1919_ssd_lucy_pantocheck_at_1;
	4 : sw_1919_ssd_lucy_sidecheck_4;
	5 : sw_1919_ssd_lucy_pantocheck_at_2;
	6 .. 7 : sw_1919_ssd_lucy_sidecheck_6;
	return sw_1919_ssd_lucy_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_1919_ssd_lucy_panto_direction_r_pos, position_in_vehid_chain_from_end){
	0: spriteset_1919_ssd_lucy_fp; //Panto
	return spriteset_1919_ssd_lucy_f; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_1919_ssd_lucy_panto_direction_r, vehicle_is_flipped){
	0 : sw_1919_ssd_lucy_panto_direction_r_pos;		//Front panto
	return spriteset_1919_ssd_lucy_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_1919_ssd_lucy_panto_flipcheck_r, vehicle_is_flipped){
	0 : sw_1919_ssd_lucy_panto_direction_r;		//Not flipped, give Panto
	return spriteset_1919_ssd_lucy_rp;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_1919_ssd_lucy_frontcheck_r, position_in_vehid_chain){
	0: sw_1919_ssd_lucy_panto_direction_r; //We need a pantograph, guaranteed
	return sw_1919_ssd_lucy_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_1919_ssd_lucy_panto_direction, vehicle_is_flipped){
	0 : spriteset_1919_ssd_lucy_fp;		//Front panto
	return spriteset_1919_ssd_lucy_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_1919_ssd_lucy_panto_flipcheck, vehicle_is_flipped){
	0 : sw_1919_ssd_lucy_panto_direction;		//Not flipped, give Panto
	return spriteset_1919_ssd_lucy_r;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_1919_ssd_lucy_frontcheck, position_in_vehid_chain){
	0: sw_1919_ssd_lucy_panto_direction; //We need a pantograph, guaranteed
	return sw_1919_ssd_lucy_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_1919_ssd_lucy_directioncheck, vehicle_is_reversed){
	0: sw_1919_ssd_lucy_frontcheck; //We are going forwards
	return sw_1919_ssd_lucy_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_1919_ssd_lucy_revcheck, vehicle_is_reversed){
	0 : sw_1919_ssd_lucy_lencheck;
	return sw_1919_ssd_lucy_lencheck_r;
}

switch(FEAT_TRAINS, SELF, sw_1919_ssd_lucy_attach, vehicle_type_id){
	item_1919_ssd_lucy	: return CB_RESULT_ATTACH_ALLOW  ;
	item_pgt_mu_coach	: return CB_RESULT_ATTACH_ALLOW  ;
	return string(STR_NO_COUPLE_MU_SAME) ;
}

/* Define the actual train */
item(FEAT_TRAINS, item_1919_ssd_lucy) {
    /* Define properties first, make sure to set all of them */
    property {
        reliability_decay:            20;
		refittable_cargo_classes:	  CC_PASSENGERS ;
		cargo_allow_refit:			  [PASS, TOUR] ;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
		misc_flags: bitmask(TRAIN_FLAG_MU, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_2CC);
        track_type:                   ELRL;
        ai_special_flag:              AI_FLAG_PASSENGER;
        running_cost_base:            RUNNING_COST_ELECTRIC;
		length:						  8;
		dual_headed:				  1;
        refit_cost:                   0;
        // callback flags are not set manually
        ai_engine_rank:               0;
        engine_class:                 ENGINE_CLASS_ELECTRIC;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
		effect_spawn_model_and_powered : EFFECT_SPAWN_MODEL_ELECTRIC ;
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
        name:                         string(str_name_1919_ssd_lucy);
        climates_available:           ALL_CLIMATES; 
        introduction_date:            date(1919, 1, 1);
        model_life:                   40; //How long should this train be buyable
        vehicle_life:                 40; //How long should this train last before renewal
        tractive_effort_coefficient:  0.625;
        weight:                       40 ton;
        power:                        360 hp;
		cargo_capacity:				  100 ;
        speed:                        80 km/h;
		
        loading_speed:                5; 
        cost_factor:                  1;
        running_cost_factor:          1;
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics {
        default				:	sw_1919_ssd_lucy_directioncheck;
		can_attach_wagon	:	sw_1919_ssd_lucy_attach ;
		create_effect		:	vfx_ohle ;
		additional_text		: 	string(STR_DESC_SUBURBAN);
    }
	livery_override (item_pgt_mu_coach){
		default                     : sw_1919_ssd_lucy_revcheck ;
		cargo_capacity              : 100 ;
		weight                      : 40 ;
		power                       : 360 ;
		length						: 8;
	}
}
# 1 "pgt.pnml" 2
# 1 "src/EMU - Suburban/1935_ssd_rhodes.pnml" 1
spriteset(spriteset_1935_ssd_rhodes_fp,   "gfx/EMU - Suburban/1935_ssd_rhodes.png") {template_32(7, 39)}
spriteset(spriteset_1935_ssd_rhodes_rp,   "gfx/EMU - Suburban/1935_ssd_rhodes.png") {template_32(7, 64)}
spriteset(spriteset_1935_ssd_rhodes_f,    "gfx/EMU - Suburban/1935_ssd_rhodes.png") {template_32(185, 39)}
spriteset(spriteset_1935_ssd_rhodes_r,    "gfx/EMU - Suburban/1935_ssd_rhodes.png") {template_32(185, 64)}
spriteset(spriteset_1935_ssd_rhodes_c,    "gfx/EMU - Suburban/1935_ssd_rhodes.png") {template_32(7, 89)}
spriteset(spriteset_1935_ssd_rhodes_cp,   "gfx/EMU - Suburban/1935_ssd_rhodes.png") {template_32(185, 89)}
spriteset(spriteset_1935_ssd_rhodes_c_r,  "gfx/EMU - Suburban/1935_ssd_rhodes.png") {template_32_r(7, 89)}
spriteset(spriteset_1935_ssd_rhodes_cp_r, "gfx/EMU - Suburban/1935_ssd_rhodes.png") {template_32_r(185, 89)}

// C O D E

//Backward

switch(FEAT_TRAINS, SELF, sw_1935_ssd_rhodes_pantocheck_at_2_r, position_in_vehid_chain % 3){
	2 : spriteset_1935_ssd_rhodes_cp_r;
	return spriteset_1935_ssd_rhodes_c_r;
}
switch(FEAT_TRAINS, SELF, sw_1935_ssd_rhodes_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_1935_ssd_rhodes_cp;
	return spriteset_1935_ssd_rhodes_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1935_ssd_rhodes_pantocheck_at_1_r, position_in_vehid_chain % 2){
	1 : spriteset_1935_ssd_rhodes_cp_r;
	return spriteset_1935_ssd_rhodes_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1935_ssd_rhodes_pantocheck_at_0_r, position_in_vehid_chain % 2){
	1 : spriteset_1935_ssd_rhodes_c_r;
	return spriteset_1935_ssd_rhodes_cp;
}

switch(FEAT_TRAINS, SELF, sw_1935_ssd_rhodes_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_1935_ssd_rhodes_cp;
	return spriteset_1935_ssd_rhodes_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1935_ssd_rhodes_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1935_ssd_rhodes_pantocheck_at_1_r;
	return sw_1935_ssd_rhodes_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_1935_ssd_rhodes_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : spriteset_1935_ssd_rhodes_c_r;
	return sw_1935_ssd_rhodes_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_1935_ssd_rhodes_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1935_ssd_rhodes_pantocheck_at_2_r;
	return sw_1935_ssd_rhodes_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_1935_ssd_rhodes_lencheck_r, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_1935_ssd_rhodes_c_r;
	3 : sw_1935_ssd_rhodes_pantocheck_at_1_r;
	4 : sw_1935_ssd_rhodes_sidecheck_4_r;
	5 : sw_1935_ssd_rhodes_pantocheck_at_2_r;
	6 .. 7 : sw_1935_ssd_rhodes_sidecheck_6_r;
	return sw_1935_ssd_rhodes_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_1935_ssd_rhodes_pantocheck_at_2, position_in_vehid_chain % 3){
	2 : spriteset_1935_ssd_rhodes_cp_r;
	return spriteset_1935_ssd_rhodes_c;
}
switch(FEAT_TRAINS, SELF, sw_1935_ssd_rhodes_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_1935_ssd_rhodes_cp;
	return spriteset_1935_ssd_rhodes_c;
}

switch(FEAT_TRAINS, SELF, sw_1935_ssd_rhodes_pantocheck_at_1, position_in_vehid_chain % 2){
	1 : spriteset_1935_ssd_rhodes_cp_r;
	return spriteset_1935_ssd_rhodes_c;
}
switch(FEAT_TRAINS, SELF, sw_1935_ssd_rhodes_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_1935_ssd_rhodes_cp;
	return spriteset_1935_ssd_rhodes_c;
}

switch(FEAT_TRAINS, SELF, sw_1935_ssd_rhodes_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1935_ssd_rhodes_pantocheck_at_1;
	return sw_1935_ssd_rhodes_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_1935_ssd_rhodes_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1935_ssd_rhodes_pantocheck_at_1;
	return spriteset_1935_ssd_rhodes_c;
}

switch(FEAT_TRAINS, SELF, sw_1935_ssd_rhodes_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1935_ssd_rhodes_pantocheck_at_2;
	return sw_1935_ssd_rhodes_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_1935_ssd_rhodes_lencheck, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_1935_ssd_rhodes_c;
	3 : sw_1935_ssd_rhodes_pantocheck_at_1;
	4 : sw_1935_ssd_rhodes_sidecheck_4;
	5 : sw_1935_ssd_rhodes_pantocheck_at_2;
	6 .. 7 : sw_1935_ssd_rhodes_sidecheck_6;
	return sw_1935_ssd_rhodes_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_1935_ssd_rhodes_panto_direction_r_pos, position_in_vehid_chain_from_end){
	0: spriteset_1935_ssd_rhodes_fp; //Panto
	return spriteset_1935_ssd_rhodes_f; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_1935_ssd_rhodes_panto_direction_r, vehicle_is_flipped){
	0 : sw_1935_ssd_rhodes_panto_direction_r_pos;		//Front panto
	return spriteset_1935_ssd_rhodes_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_1935_ssd_rhodes_panto_flipcheck_r, vehicle_is_flipped){
	0 : sw_1935_ssd_rhodes_panto_direction_r;		//Not flipped, give Panto
	return spriteset_1935_ssd_rhodes_rp;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_1935_ssd_rhodes_frontcheck_r, position_in_vehid_chain){
	0: sw_1935_ssd_rhodes_panto_direction_r; //We need a pantograph, guaranteed
	return sw_1935_ssd_rhodes_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_1935_ssd_rhodes_panto_direction, vehicle_is_flipped){
	0 : spriteset_1935_ssd_rhodes_fp;		//Front panto
	return spriteset_1935_ssd_rhodes_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_1935_ssd_rhodes_panto_flipcheck, vehicle_is_flipped){
	0 : sw_1935_ssd_rhodes_panto_direction;		//Not flipped, give Panto
	return spriteset_1935_ssd_rhodes_r;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_1935_ssd_rhodes_frontcheck, position_in_vehid_chain){
	0: sw_1935_ssd_rhodes_panto_direction; //We need a pantograph, guaranteed
	return sw_1935_ssd_rhodes_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_1935_ssd_rhodes_directioncheck, vehicle_is_reversed){
	0: sw_1935_ssd_rhodes_frontcheck; //We are going forwards
	return sw_1935_ssd_rhodes_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_1935_ssd_rhodes_revcheck, vehicle_is_reversed){
	0 : sw_1935_ssd_rhodes_lencheck;
	return sw_1935_ssd_rhodes_lencheck_r;
}

switch(FEAT_TRAINS, SELF, sw_1935_ssd_rhodes_attach, vehicle_type_id){
	item_1935_ssd_rhodes	: return CB_RESULT_ATTACH_ALLOW  ;
	item_pgt_mu_coach	: return CB_RESULT_ATTACH_ALLOW  ;
	return string(STR_NO_COUPLE_MU_SAME) ;
}

/* Define the actual train */
item(FEAT_TRAINS, item_1935_ssd_rhodes) {
    /* Define properties first, make sure to set all of them */
    property {
        reliability_decay:            20;
		refittable_cargo_classes:	  CC_PASSENGERS ;
		cargo_allow_refit:			  [PASS, TOUR] ;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
		misc_flags: bitmask(TRAIN_FLAG_MU, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_2CC);
        track_type:                   ELRL;
        ai_special_flag:              AI_FLAG_PASSENGER;
        running_cost_base:            RUNNING_COST_ELECTRIC;
		length:						  8;
		dual_headed:				  1;
        refit_cost:                   0;
        // callback flags are not set manually
        ai_engine_rank:               0;
        engine_class:                 ENGINE_CLASS_ELECTRIC;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
		effect_spawn_model_and_powered : EFFECT_SPAWN_MODEL_ELECTRIC ;
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
        name:                         string(str_name_1935_ssd_rhodes);
        climates_available:           ALL_CLIMATES; 
        introduction_date:            date(1935, 1, 1);
        model_life:                   40; //How long should this train be buyable
        vehicle_life:                 40; //How long should this train last before renewal
        tractive_effort_coefficient:  0.105;
        weight:                       40 ton;
        power:                        600 hp;
		cargo_capacity:				  100 ;
        speed:                        90 km/h;
		
        loading_speed:                5; 
        cost_factor:                  1;
        running_cost_factor:          1;
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics {
        default				:	sw_1935_ssd_rhodes_directioncheck;
		can_attach_wagon	:	sw_1935_ssd_rhodes_attach ;
		create_effect		:	vfx_ohle ;
		additional_text		: 	string(STR_DESC_SUBURBAN);
    }
	livery_override (item_pgt_mu_coach){
		default                     : sw_1935_ssd_rhodes_revcheck ;
		cargo_capacity              : 100 ;
		weight                      : 40 ;
		power                       : 600 ;
		length						: 8;
	}
}
# 1 "pgt.pnml" 2
# 1 "src/EMU - Suburban/1955_ssd_bluey.pnml" 1
spriteset(spriteset_1955_ssd_bluey_fp,   "gfx/EMU - Suburban/1955_ssd_bluey.png") {template_32(7, 39)}
spriteset(spriteset_1955_ssd_bluey_rp,   "gfx/EMU - Suburban/1955_ssd_bluey.png") {template_32(7, 64)}
spriteset(spriteset_1955_ssd_bluey_f,    "gfx/EMU - Suburban/1955_ssd_bluey.png") {template_32(185, 39)}
spriteset(spriteset_1955_ssd_bluey_r,    "gfx/EMU - Suburban/1955_ssd_bluey.png") {template_32(185, 64)}
spriteset(spriteset_1955_ssd_bluey_c,    "gfx/EMU - Suburban/1955_ssd_bluey.png") {template_32(7, 89)}
spriteset(spriteset_1955_ssd_bluey_cp,   "gfx/EMU - Suburban/1955_ssd_bluey.png") {template_32(185, 89)}
spriteset(spriteset_1955_ssd_bluey_c_r,  "gfx/EMU - Suburban/1955_ssd_bluey.png") {template_32_r(7, 89)}
spriteset(spriteset_1955_ssd_bluey_cp_r, "gfx/EMU - Suburban/1955_ssd_bluey.png") {template_32_r(185, 89)}

// C O D E

//Backward

switch(FEAT_TRAINS, SELF, sw_1955_ssd_bluey_pantocheck_at_2_r, position_in_vehid_chain % 3){
	2 : spriteset_1955_ssd_bluey_cp_r;
	return spriteset_1955_ssd_bluey_c_r;
}
switch(FEAT_TRAINS, SELF, sw_1955_ssd_bluey_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_1955_ssd_bluey_cp;
	return spriteset_1955_ssd_bluey_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1955_ssd_bluey_pantocheck_at_1_r, position_in_vehid_chain % 2){
	1 : spriteset_1955_ssd_bluey_cp_r;
	return spriteset_1955_ssd_bluey_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1955_ssd_bluey_pantocheck_at_0_r, position_in_vehid_chain % 2){
	1 : spriteset_1955_ssd_bluey_c_r;
	return spriteset_1955_ssd_bluey_cp;
}

switch(FEAT_TRAINS, SELF, sw_1955_ssd_bluey_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_1955_ssd_bluey_cp;
	return spriteset_1955_ssd_bluey_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1955_ssd_bluey_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1955_ssd_bluey_pantocheck_at_1_r;
	return sw_1955_ssd_bluey_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_1955_ssd_bluey_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : spriteset_1955_ssd_bluey_c_r;
	return sw_1955_ssd_bluey_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_1955_ssd_bluey_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1955_ssd_bluey_pantocheck_at_2_r;
	return sw_1955_ssd_bluey_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_1955_ssd_bluey_lencheck_r, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_1955_ssd_bluey_c_r;
	3 : sw_1955_ssd_bluey_pantocheck_at_1_r;
	4 : sw_1955_ssd_bluey_sidecheck_4_r;
	5 : sw_1955_ssd_bluey_pantocheck_at_2_r;
	6 .. 7 : sw_1955_ssd_bluey_sidecheck_6_r;
	return sw_1955_ssd_bluey_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_1955_ssd_bluey_pantocheck_at_2, position_in_vehid_chain % 3){
	2 : spriteset_1955_ssd_bluey_cp_r;
	return spriteset_1955_ssd_bluey_c;
}
switch(FEAT_TRAINS, SELF, sw_1955_ssd_bluey_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_1955_ssd_bluey_cp;
	return spriteset_1955_ssd_bluey_c;
}

switch(FEAT_TRAINS, SELF, sw_1955_ssd_bluey_pantocheck_at_1, position_in_vehid_chain % 2){
	1 : spriteset_1955_ssd_bluey_cp_r;
	return spriteset_1955_ssd_bluey_c;
}
switch(FEAT_TRAINS, SELF, sw_1955_ssd_bluey_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_1955_ssd_bluey_cp;
	return spriteset_1955_ssd_bluey_c;
}

switch(FEAT_TRAINS, SELF, sw_1955_ssd_bluey_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1955_ssd_bluey_pantocheck_at_1;
	return sw_1955_ssd_bluey_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_1955_ssd_bluey_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1955_ssd_bluey_pantocheck_at_1;
	return spriteset_1955_ssd_bluey_c;
}

switch(FEAT_TRAINS, SELF, sw_1955_ssd_bluey_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1955_ssd_bluey_pantocheck_at_2;
	return sw_1955_ssd_bluey_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_1955_ssd_bluey_lencheck, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_1955_ssd_bluey_c;
	3 : sw_1955_ssd_bluey_pantocheck_at_1;
	4 : sw_1955_ssd_bluey_sidecheck_4;
	5 : sw_1955_ssd_bluey_pantocheck_at_2;
	6 .. 7 : sw_1955_ssd_bluey_sidecheck_6;
	return sw_1955_ssd_bluey_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_1955_ssd_bluey_panto_direction_r_pos, position_in_vehid_chain_from_end){
	0: spriteset_1955_ssd_bluey_fp; //Panto
	return spriteset_1955_ssd_bluey_f; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_1955_ssd_bluey_panto_direction_r, vehicle_is_flipped){
	0 : sw_1955_ssd_bluey_panto_direction_r_pos;		//Front panto
	return spriteset_1955_ssd_bluey_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_1955_ssd_bluey_panto_flipcheck_r, vehicle_is_flipped){
	0 : sw_1955_ssd_bluey_panto_direction_r;		//Not flipped, give Panto
	return spriteset_1955_ssd_bluey_rp;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_1955_ssd_bluey_frontcheck_r, position_in_vehid_chain){
	0: sw_1955_ssd_bluey_panto_direction_r; //We need a pantograph, guaranteed
	return sw_1955_ssd_bluey_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_1955_ssd_bluey_panto_direction, vehicle_is_flipped){
	0 : spriteset_1955_ssd_bluey_fp;		//Front panto
	return spriteset_1955_ssd_bluey_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_1955_ssd_bluey_panto_flipcheck, vehicle_is_flipped){
	0 : sw_1955_ssd_bluey_panto_direction;		//Not flipped, give Panto
	return spriteset_1955_ssd_bluey_r;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_1955_ssd_bluey_frontcheck, position_in_vehid_chain){
	0: sw_1955_ssd_bluey_panto_direction; //We need a pantograph, guaranteed
	return sw_1955_ssd_bluey_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_1955_ssd_bluey_directioncheck, vehicle_is_reversed){
	0: sw_1955_ssd_bluey_frontcheck; //We are going forwards
	return sw_1955_ssd_bluey_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_1955_ssd_bluey_revcheck, vehicle_is_reversed){
	0 : sw_1955_ssd_bluey_lencheck;
	return sw_1955_ssd_bluey_lencheck_r;
}

switch(FEAT_TRAINS, SELF, sw_1955_ssd_bluey_attach, vehicle_type_id){
	item_1955_ssd_bluey	: return CB_RESULT_ATTACH_ALLOW  ;
	item_pgt_mu_coach	: return CB_RESULT_ATTACH_ALLOW  ;
	return string(STR_NO_COUPLE_MU_SAME) ;
}

/* Define the actual train */
item(FEAT_TRAINS, item_1955_ssd_bluey) {
    /* Define properties first, make sure to set all of them */
    property {
        reliability_decay:            20;
		refittable_cargo_classes:	  CC_PASSENGERS ;
		cargo_allow_refit:			  [PASS, TOUR] ;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
		misc_flags: bitmask(TRAIN_FLAG_MU, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_2CC);
        track_type:                   ELRL;
        ai_special_flag:              AI_FLAG_PASSENGER;
        running_cost_base:            RUNNING_COST_ELECTRIC;
		length:						  8;
		dual_headed:				  1;
        refit_cost:                   0;
        // callback flags are not set manually
        ai_engine_rank:               0;
        engine_class:                 ENGINE_CLASS_ELECTRIC;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
		effect_spawn_model_and_powered : EFFECT_SPAWN_MODEL_ELECTRIC ;
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
        name:                         string(str_name_1955_ssd_bluey);
        climates_available:           ALL_CLIMATES; 
        introduction_date:            date(1955, 1, 1);
        model_life:                   40; //How long should this train be buyable
        vehicle_life:                 40; //How long should this train last before renewal
        tractive_effort_coefficient:  0.147;
        weight:                       40 ton;
        power:                        800 hp;
		cargo_capacity:				  100 ;
        speed:                        100 km/h;
		
        loading_speed:                5; 
        cost_factor:                  1;
        running_cost_factor:          1;
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics {
        default				:	sw_1955_ssd_bluey_directioncheck;
		can_attach_wagon	:	sw_1955_ssd_bluey_attach ;
		create_effect		:	vfx_ohle ;
		additional_text		: 	string(STR_DESC_SUBURBAN);
    }
	livery_override (item_pgt_mu_coach){
		default                     : sw_1955_ssd_bluey_revcheck ;
		cargo_capacity              : 100 ;
		weight                      : 40 ;
		power                       : 800 ;
		length						: 8;
	}
}
# 1 "pgt.pnml" 2
# 1 "src/EMU - Suburban/1974_sdd_silversider.pnml" 1
spriteset(spriteset_1974_sdd_silversider_fp,   "gfx/EMU - Suburban/1974_sdd_silversider.png") {template_32(7, 39)}
spriteset(spriteset_1974_sdd_silversider_rp,   "gfx/EMU - Suburban/1974_sdd_silversider.png") {template_32(7, 64)}
spriteset(spriteset_1974_sdd_silversider_f,    "gfx/EMU - Suburban/1974_sdd_silversider.png") {template_32(185, 39)}
spriteset(spriteset_1974_sdd_silversider_r,    "gfx/EMU - Suburban/1974_sdd_silversider.png") {template_32(185, 64)}
spriteset(spriteset_1974_sdd_silversider_c,    "gfx/EMU - Suburban/1974_sdd_silversider.png") {template_32(7, 89)}
spriteset(spriteset_1974_sdd_silversider_cp,   "gfx/EMU - Suburban/1974_sdd_silversider.png") {template_32(185, 89)}
spriteset(spriteset_1974_sdd_silversider_c_r,  "gfx/EMU - Suburban/1974_sdd_silversider.png") {template_32_r(7, 89)}
spriteset(spriteset_1974_sdd_silversider_cp_r, "gfx/EMU - Suburban/1974_sdd_silversider.png") {template_32_r(185, 89)}

// C O D E

//Backward

switch(FEAT_TRAINS, SELF, sw_1974_sdd_silversider_pantocheck_at_2_r, position_in_vehid_chain % 3){
	2 : spriteset_1974_sdd_silversider_cp_r;
	return spriteset_1974_sdd_silversider_c_r;
}
switch(FEAT_TRAINS, SELF, sw_1974_sdd_silversider_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_1974_sdd_silversider_cp;
	return spriteset_1974_sdd_silversider_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1974_sdd_silversider_pantocheck_at_1_r, position_in_vehid_chain % 2){
	1 : spriteset_1974_sdd_silversider_cp_r;
	return spriteset_1974_sdd_silversider_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1974_sdd_silversider_pantocheck_at_0_r, position_in_vehid_chain % 2){
	1 : spriteset_1974_sdd_silversider_c_r;
	return spriteset_1974_sdd_silversider_cp;
}

switch(FEAT_TRAINS, SELF, sw_1974_sdd_silversider_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_1974_sdd_silversider_cp;
	return spriteset_1974_sdd_silversider_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1974_sdd_silversider_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1974_sdd_silversider_pantocheck_at_1_r;
	return sw_1974_sdd_silversider_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_1974_sdd_silversider_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : spriteset_1974_sdd_silversider_c_r;
	return sw_1974_sdd_silversider_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_1974_sdd_silversider_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1974_sdd_silversider_pantocheck_at_2_r;
	return sw_1974_sdd_silversider_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_1974_sdd_silversider_lencheck_r, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_1974_sdd_silversider_c_r;
	3 : sw_1974_sdd_silversider_pantocheck_at_1_r;
	4 : sw_1974_sdd_silversider_sidecheck_4_r;
	5 : sw_1974_sdd_silversider_pantocheck_at_2_r;
	6 .. 7 : sw_1974_sdd_silversider_sidecheck_6_r;
	return sw_1974_sdd_silversider_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_1974_sdd_silversider_pantocheck_at_2, position_in_vehid_chain % 3){
	2 : spriteset_1974_sdd_silversider_cp_r;
	return spriteset_1974_sdd_silversider_c;
}
switch(FEAT_TRAINS, SELF, sw_1974_sdd_silversider_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_1974_sdd_silversider_cp;
	return spriteset_1974_sdd_silversider_c;
}

switch(FEAT_TRAINS, SELF, sw_1974_sdd_silversider_pantocheck_at_1, position_in_vehid_chain % 2){
	1 : spriteset_1974_sdd_silversider_cp_r;
	return spriteset_1974_sdd_silversider_c;
}
switch(FEAT_TRAINS, SELF, sw_1974_sdd_silversider_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_1974_sdd_silversider_cp;
	return spriteset_1974_sdd_silversider_c;
}

switch(FEAT_TRAINS, SELF, sw_1974_sdd_silversider_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1974_sdd_silversider_pantocheck_at_1;
	return sw_1974_sdd_silversider_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_1974_sdd_silversider_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1974_sdd_silversider_pantocheck_at_1;
	return spriteset_1974_sdd_silversider_c;
}

switch(FEAT_TRAINS, SELF, sw_1974_sdd_silversider_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1974_sdd_silversider_pantocheck_at_2;
	return sw_1974_sdd_silversider_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_1974_sdd_silversider_lencheck, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_1974_sdd_silversider_c;
	3 : sw_1974_sdd_silversider_pantocheck_at_1;
	4 : sw_1974_sdd_silversider_sidecheck_4;
	5 : sw_1974_sdd_silversider_pantocheck_at_2;
	6 .. 7 : sw_1974_sdd_silversider_sidecheck_6;
	return sw_1974_sdd_silversider_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_1974_sdd_silversider_panto_direction_r_pos, position_in_vehid_chain_from_end){
	0: spriteset_1974_sdd_silversider_fp; //Panto
	return spriteset_1974_sdd_silversider_f; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_1974_sdd_silversider_panto_direction_r, vehicle_is_flipped){
	0 : sw_1974_sdd_silversider_panto_direction_r_pos;		//Front panto
	return spriteset_1974_sdd_silversider_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_1974_sdd_silversider_panto_flipcheck_r, vehicle_is_flipped){
	0 : sw_1974_sdd_silversider_panto_direction_r;		//Not flipped, give Panto
	return spriteset_1974_sdd_silversider_rp;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_1974_sdd_silversider_frontcheck_r, position_in_vehid_chain){
	0: sw_1974_sdd_silversider_panto_direction_r; //We need a pantograph, guaranteed
	return sw_1974_sdd_silversider_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_1974_sdd_silversider_panto_direction, vehicle_is_flipped){
	0 : spriteset_1974_sdd_silversider_fp;		//Front panto
	return spriteset_1974_sdd_silversider_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_1974_sdd_silversider_panto_flipcheck, vehicle_is_flipped){
	0 : sw_1974_sdd_silversider_panto_direction;		//Not flipped, give Panto
	return spriteset_1974_sdd_silversider_r;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_1974_sdd_silversider_frontcheck, position_in_vehid_chain){
	0: sw_1974_sdd_silversider_panto_direction; //We need a pantograph, guaranteed
	return sw_1974_sdd_silversider_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_1974_sdd_silversider_directioncheck, vehicle_is_reversed){
	0: sw_1974_sdd_silversider_frontcheck; //We are going forwards
	return sw_1974_sdd_silversider_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_1974_sdd_silversider_revcheck, vehicle_is_reversed){
	0 : sw_1974_sdd_silversider_lencheck;
	return sw_1974_sdd_silversider_lencheck_r;
}

switch(FEAT_TRAINS, SELF, sw_1974_sdd_silversider_attach, vehicle_type_id){
	item_1974_sdd_silversider	: return CB_RESULT_ATTACH_ALLOW  ;
	item_pgt_mu_coach	: return CB_RESULT_ATTACH_ALLOW  ;
	return string(STR_NO_COUPLE_MU_SAME) ;
}

/* Define the actual train */
item(FEAT_TRAINS, item_1974_sdd_silversider) {
    /* Define properties first, make sure to set all of them */
    property {
        reliability_decay:            20;
		refittable_cargo_classes:	  CC_PASSENGERS ;
		cargo_allow_refit:			  [PASS, TOUR] ;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
		misc_flags: bitmask(TRAIN_FLAG_MU, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_2CC);
        track_type:                   ELRL;
        ai_special_flag:              AI_FLAG_PASSENGER;
        running_cost_base:            RUNNING_COST_ELECTRIC;
		length:						  8;
		dual_headed:				  1;
        refit_cost:                   0;
        // callback flags are not set manually
        ai_engine_rank:               0;
        engine_class:                 ENGINE_CLASS_ELECTRIC;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
		effect_spawn_model_and_powered : EFFECT_SPAWN_MODEL_ELECTRIC ;
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
        name:                         string(str_name_1974_sdd_silversider);
        climates_available:           ALL_CLIMATES; 
        introduction_date:            date(1974, 1, 1);
        model_life:                   40; //How long should this train be buyable
        vehicle_life:                 40; //How long should this train last before renewal
        tractive_effort_coefficient:  0.114;
        weight:                       50 ton;
        power:                        800 hp;
		cargo_capacity:				  140 ;
        speed:                        100 km/h;
		
        loading_speed:                5; 
        cost_factor:                  1;
        running_cost_factor:          1;
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics {
        default				:	sw_1974_sdd_silversider_directioncheck;
		can_attach_wagon	:	sw_1974_sdd_silversider_attach ;
		create_effect		:	vfx_ohle ;
		additional_text		: 	string(STR_DESC_SUBURBAN);
    }
	livery_override (item_pgt_mu_coach){
		default                     : sw_1974_sdd_silversider_revcheck ;
		cargo_capacity              : 140 ;
		weight                      : 50 ;
		power                       : 800 ;
		length						: 8;
	}
}
# 1 "pgt.pnml" 2
# 1 "src/EMU - Suburban/1980_ssd_walker.pnml" 1
spriteset(spriteset_1980_ssd_walker_fp,   "gfx/EMU - Suburban/1980_ssd_walker.png") {template_32(7, 39)}
spriteset(spriteset_1980_ssd_walker_rp,   "gfx/EMU - Suburban/1980_ssd_walker.png") {template_32(7, 64)}
spriteset(spriteset_1980_ssd_walker_f,    "gfx/EMU - Suburban/1980_ssd_walker.png") {template_32(185, 39)}
spriteset(spriteset_1980_ssd_walker_r,    "gfx/EMU - Suburban/1980_ssd_walker.png") {template_32(185, 64)}
spriteset(spriteset_1980_ssd_walker_c,    "gfx/EMU - Suburban/1980_ssd_walker.png") {template_32(7, 89)}
spriteset(spriteset_1980_ssd_walker_cp,   "gfx/EMU - Suburban/1980_ssd_walker.png") {template_32(185, 89)}
spriteset(spriteset_1980_ssd_walker_c_r,  "gfx/EMU - Suburban/1980_ssd_walker.png") {template_32_r(7, 89)}
spriteset(spriteset_1980_ssd_walker_cp_r, "gfx/EMU - Suburban/1980_ssd_walker.png") {template_32_r(185, 89)}

// C O D E

//Backward

switch(FEAT_TRAINS, SELF, sw_1980_ssd_walker_pantocheck_at_2_r, position_in_vehid_chain % 3){
	2 : spriteset_1980_ssd_walker_cp_r;
	return spriteset_1980_ssd_walker_c_r;
}
switch(FEAT_TRAINS, SELF, sw_1980_ssd_walker_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_1980_ssd_walker_cp;
	return spriteset_1980_ssd_walker_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1980_ssd_walker_pantocheck_at_1_r, position_in_vehid_chain % 2){
	1 : spriteset_1980_ssd_walker_cp_r;
	return spriteset_1980_ssd_walker_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1980_ssd_walker_pantocheck_at_0_r, position_in_vehid_chain % 2){
	1 : spriteset_1980_ssd_walker_c_r;
	return spriteset_1980_ssd_walker_cp;
}

switch(FEAT_TRAINS, SELF, sw_1980_ssd_walker_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_1980_ssd_walker_cp;
	return spriteset_1980_ssd_walker_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1980_ssd_walker_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1980_ssd_walker_pantocheck_at_1_r;
	return sw_1980_ssd_walker_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_1980_ssd_walker_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : spriteset_1980_ssd_walker_c_r;
	return sw_1980_ssd_walker_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_1980_ssd_walker_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1980_ssd_walker_pantocheck_at_2_r;
	return sw_1980_ssd_walker_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_1980_ssd_walker_lencheck_r, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_1980_ssd_walker_c_r;
	3 : sw_1980_ssd_walker_pantocheck_at_1_r;
	4 : sw_1980_ssd_walker_sidecheck_4_r;
	5 : sw_1980_ssd_walker_pantocheck_at_2_r;
	6 .. 7 : sw_1980_ssd_walker_sidecheck_6_r;
	return sw_1980_ssd_walker_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_1980_ssd_walker_pantocheck_at_2, position_in_vehid_chain % 3){
	2 : spriteset_1980_ssd_walker_cp_r;
	return spriteset_1980_ssd_walker_c;
}
switch(FEAT_TRAINS, SELF, sw_1980_ssd_walker_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_1980_ssd_walker_cp;
	return spriteset_1980_ssd_walker_c;
}

switch(FEAT_TRAINS, SELF, sw_1980_ssd_walker_pantocheck_at_1, position_in_vehid_chain % 2){
	1 : spriteset_1980_ssd_walker_cp_r;
	return spriteset_1980_ssd_walker_c;
}
switch(FEAT_TRAINS, SELF, sw_1980_ssd_walker_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_1980_ssd_walker_cp;
	return spriteset_1980_ssd_walker_c;
}

switch(FEAT_TRAINS, SELF, sw_1980_ssd_walker_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1980_ssd_walker_pantocheck_at_1;
	return sw_1980_ssd_walker_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_1980_ssd_walker_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1980_ssd_walker_pantocheck_at_1;
	return spriteset_1980_ssd_walker_c;
}

switch(FEAT_TRAINS, SELF, sw_1980_ssd_walker_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1980_ssd_walker_pantocheck_at_2;
	return sw_1980_ssd_walker_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_1980_ssd_walker_lencheck, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_1980_ssd_walker_c;
	3 : sw_1980_ssd_walker_pantocheck_at_1;
	4 : sw_1980_ssd_walker_sidecheck_4;
	5 : sw_1980_ssd_walker_pantocheck_at_2;
	6 .. 7 : sw_1980_ssd_walker_sidecheck_6;
	return sw_1980_ssd_walker_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_1980_ssd_walker_panto_direction_r_pos, position_in_vehid_chain_from_end){
	0: spriteset_1980_ssd_walker_fp; //Panto
	return spriteset_1980_ssd_walker_f; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_1980_ssd_walker_panto_direction_r, vehicle_is_flipped){
	0 : sw_1980_ssd_walker_panto_direction_r_pos;		//Front panto
	return spriteset_1980_ssd_walker_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_1980_ssd_walker_panto_flipcheck_r, vehicle_is_flipped){
	0 : sw_1980_ssd_walker_panto_direction_r;		//Not flipped, give Panto
	return spriteset_1980_ssd_walker_rp;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_1980_ssd_walker_frontcheck_r, position_in_vehid_chain){
	0: sw_1980_ssd_walker_panto_direction_r; //We need a pantograph, guaranteed
	return sw_1980_ssd_walker_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_1980_ssd_walker_panto_direction, vehicle_is_flipped){
	0 : spriteset_1980_ssd_walker_fp;		//Front panto
	return spriteset_1980_ssd_walker_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_1980_ssd_walker_panto_flipcheck, vehicle_is_flipped){
	0 : sw_1980_ssd_walker_panto_direction;		//Not flipped, give Panto
	return spriteset_1980_ssd_walker_r;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_1980_ssd_walker_frontcheck, position_in_vehid_chain){
	0: sw_1980_ssd_walker_panto_direction; //We need a pantograph, guaranteed
	return sw_1980_ssd_walker_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_1980_ssd_walker_directioncheck, vehicle_is_reversed){
	0: sw_1980_ssd_walker_frontcheck; //We are going forwards
	return sw_1980_ssd_walker_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_1980_ssd_walker_revcheck, vehicle_is_reversed){
	0 : sw_1980_ssd_walker_lencheck;
	return sw_1980_ssd_walker_lencheck_r;
}

switch(FEAT_TRAINS, SELF, sw_1980_ssd_walker_attach, vehicle_type_id){
	item_1980_ssd_walker	: return CB_RESULT_ATTACH_ALLOW  ;
	item_pgt_mu_coach	: return CB_RESULT_ATTACH_ALLOW  ;
	return string(STR_NO_COUPLE_MU_SAME) ;
}

/* Define the actual train */
item(FEAT_TRAINS, item_1980_ssd_walker) {
    /* Define properties first, make sure to set all of them */
    property {
        reliability_decay:            20;
		refittable_cargo_classes:	  CC_PASSENGERS ;
		cargo_allow_refit:			  [PASS, TOUR] ;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
		misc_flags: bitmask(TRAIN_FLAG_MU, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_2CC);
        track_type:                   ELRL;
        ai_special_flag:              AI_FLAG_PASSENGER;
        running_cost_base:            RUNNING_COST_ELECTRIC;
		length:						  8;
		dual_headed:				  1;
        refit_cost:                   0;
        // callback flags are not set manually
        ai_engine_rank:               0;
        engine_class:                 ENGINE_CLASS_ELECTRIC;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
		effect_spawn_model_and_powered : EFFECT_SPAWN_MODEL_ELECTRIC ;
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
        name:                         string(str_name_1980_ssd_walker);
        climates_available:           ALL_CLIMATES; 
        introduction_date:            date(1980, 1, 1);
        model_life:                   40; //How long should this train be buyable
        vehicle_life:                 40; //How long should this train last before renewal
        tractive_effort_coefficient:  0.177;
        weight:                       40 ton;
        power:                        1000 hp;
		cargo_capacity:				  110 ;
        speed:                        115 km/h;
		
        loading_speed:                5; 
        cost_factor:                  1;
        running_cost_factor:          1;
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics {
        default				:	sw_1980_ssd_walker_directioncheck;
		can_attach_wagon	:	sw_1980_ssd_walker_attach ;
		create_effect		:	vfx_ohle ;
		additional_text		: 	string(STR_DESC_SUBURBAN);
    }
	livery_override (item_pgt_mu_coach){
		default                     : sw_1980_ssd_walker_revcheck ;
		cargo_capacity              : 110 ;
		weight                      : 40 ;
		power                       : 1000 ;
		length						: 8;
	}
}
# 1 "pgt.pnml" 2
# 1 "src/EMU - Suburban/1987_sdd_togo.pnml" 1
spriteset(spriteset_1987_sdd_togo_fp,   "gfx/EMU - Suburban/1987_sdd_togo.png") {template_32(7, 39)}
spriteset(spriteset_1987_sdd_togo_rp,   "gfx/EMU - Suburban/1987_sdd_togo.png") {template_32(7, 64)}
spriteset(spriteset_1987_sdd_togo_f,    "gfx/EMU - Suburban/1987_sdd_togo.png") {template_32(185, 39)}
spriteset(spriteset_1987_sdd_togo_r,    "gfx/EMU - Suburban/1987_sdd_togo.png") {template_32(185, 64)}
spriteset(spriteset_1987_sdd_togo_c,    "gfx/EMU - Suburban/1987_sdd_togo.png") {template_32(7, 89)}
spriteset(spriteset_1987_sdd_togo_cp,   "gfx/EMU - Suburban/1987_sdd_togo.png") {template_32(185, 89)}
spriteset(spriteset_1987_sdd_togo_c_r,  "gfx/EMU - Suburban/1987_sdd_togo.png") {template_32_r(7, 89)}
spriteset(spriteset_1987_sdd_togo_cp_r, "gfx/EMU - Suburban/1987_sdd_togo.png") {template_32_r(185, 89)}

// C O D E

//Backward

switch(FEAT_TRAINS, SELF, sw_1987_sdd_togo_pantocheck_at_2_r, position_in_vehid_chain % 3){
	2 : spriteset_1987_sdd_togo_cp_r;
	return spriteset_1987_sdd_togo_c_r;
}
switch(FEAT_TRAINS, SELF, sw_1987_sdd_togo_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_1987_sdd_togo_cp;
	return spriteset_1987_sdd_togo_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1987_sdd_togo_pantocheck_at_1_r, position_in_vehid_chain % 2){
	1 : spriteset_1987_sdd_togo_cp_r;
	return spriteset_1987_sdd_togo_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1987_sdd_togo_pantocheck_at_0_r, position_in_vehid_chain % 2){
	1 : spriteset_1987_sdd_togo_c_r;
	return spriteset_1987_sdd_togo_cp;
}

switch(FEAT_TRAINS, SELF, sw_1987_sdd_togo_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_1987_sdd_togo_cp;
	return spriteset_1987_sdd_togo_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1987_sdd_togo_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1987_sdd_togo_pantocheck_at_1_r;
	return sw_1987_sdd_togo_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_1987_sdd_togo_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : spriteset_1987_sdd_togo_c_r;
	return sw_1987_sdd_togo_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_1987_sdd_togo_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1987_sdd_togo_pantocheck_at_2_r;
	return sw_1987_sdd_togo_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_1987_sdd_togo_lencheck_r, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_1987_sdd_togo_c_r;
	3 : sw_1987_sdd_togo_pantocheck_at_1_r;
	4 : sw_1987_sdd_togo_sidecheck_4_r;
	5 : sw_1987_sdd_togo_pantocheck_at_2_r;
	6 .. 7 : sw_1987_sdd_togo_sidecheck_6_r;
	return sw_1987_sdd_togo_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_1987_sdd_togo_pantocheck_at_2, position_in_vehid_chain % 3){
	2 : spriteset_1987_sdd_togo_cp_r;
	return spriteset_1987_sdd_togo_c;
}
switch(FEAT_TRAINS, SELF, sw_1987_sdd_togo_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_1987_sdd_togo_cp;
	return spriteset_1987_sdd_togo_c;
}

switch(FEAT_TRAINS, SELF, sw_1987_sdd_togo_pantocheck_at_1, position_in_vehid_chain % 2){
	1 : spriteset_1987_sdd_togo_cp_r;
	return spriteset_1987_sdd_togo_c;
}
switch(FEAT_TRAINS, SELF, sw_1987_sdd_togo_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_1987_sdd_togo_cp;
	return spriteset_1987_sdd_togo_c;
}

switch(FEAT_TRAINS, SELF, sw_1987_sdd_togo_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1987_sdd_togo_pantocheck_at_1;
	return sw_1987_sdd_togo_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_1987_sdd_togo_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1987_sdd_togo_pantocheck_at_1;
	return spriteset_1987_sdd_togo_c;
}

switch(FEAT_TRAINS, SELF, sw_1987_sdd_togo_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1987_sdd_togo_pantocheck_at_2;
	return sw_1987_sdd_togo_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_1987_sdd_togo_lencheck, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_1987_sdd_togo_c;
	3 : sw_1987_sdd_togo_pantocheck_at_1;
	4 : sw_1987_sdd_togo_sidecheck_4;
	5 : sw_1987_sdd_togo_pantocheck_at_2;
	6 .. 7 : sw_1987_sdd_togo_sidecheck_6;
	return sw_1987_sdd_togo_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_1987_sdd_togo_panto_direction_r_pos, position_in_vehid_chain_from_end){
	0: spriteset_1987_sdd_togo_fp; //Panto
	return spriteset_1987_sdd_togo_f; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_1987_sdd_togo_panto_direction_r, vehicle_is_flipped){
	0 : sw_1987_sdd_togo_panto_direction_r_pos;		//Front panto
	return spriteset_1987_sdd_togo_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_1987_sdd_togo_panto_flipcheck_r, vehicle_is_flipped){
	0 : sw_1987_sdd_togo_panto_direction_r;		//Not flipped, give Panto
	return spriteset_1987_sdd_togo_rp;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_1987_sdd_togo_frontcheck_r, position_in_vehid_chain){
	0: sw_1987_sdd_togo_panto_direction_r; //We need a pantograph, guaranteed
	return sw_1987_sdd_togo_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_1987_sdd_togo_panto_direction, vehicle_is_flipped){
	0 : spriteset_1987_sdd_togo_fp;		//Front panto
	return spriteset_1987_sdd_togo_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_1987_sdd_togo_panto_flipcheck, vehicle_is_flipped){
	0 : sw_1987_sdd_togo_panto_direction;		//Not flipped, give Panto
	return spriteset_1987_sdd_togo_r;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_1987_sdd_togo_frontcheck, position_in_vehid_chain){
	0: sw_1987_sdd_togo_panto_direction; //We need a pantograph, guaranteed
	return sw_1987_sdd_togo_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_1987_sdd_togo_directioncheck, vehicle_is_reversed){
	0: sw_1987_sdd_togo_frontcheck; //We are going forwards
	return sw_1987_sdd_togo_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_1987_sdd_togo_revcheck, vehicle_is_reversed){
	0 : sw_1987_sdd_togo_lencheck;
	return sw_1987_sdd_togo_lencheck_r;
}

switch(FEAT_TRAINS, SELF, sw_1987_sdd_togo_attach, vehicle_type_id){
	item_1987_sdd_togo	: return CB_RESULT_ATTACH_ALLOW  ;
	item_pgt_mu_coach	: return CB_RESULT_ATTACH_ALLOW  ;
	return string(STR_NO_COUPLE_MU_SAME) ;
}

/* Define the actual train */
item(FEAT_TRAINS, item_1987_sdd_togo) {
    /* Define properties first, make sure to set all of them */
    property {
        reliability_decay:            20;
		refittable_cargo_classes:	  CC_PASSENGERS ;
		cargo_allow_refit:			  [PASS, TOUR] ;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
		misc_flags: bitmask(TRAIN_FLAG_MU, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_2CC);
        track_type:                   ELRL;
        ai_special_flag:              AI_FLAG_PASSENGER;
        running_cost_base:            RUNNING_COST_ELECTRIC;
		length:						  8;
		dual_headed:				  1;
        refit_cost:                   0;
        // callback flags are not set manually
        ai_engine_rank:               0;
        engine_class:                 ENGINE_CLASS_ELECTRIC;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
		effect_spawn_model_and_powered : EFFECT_SPAWN_MODEL_ELECTRIC ;
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
        name:                         string(str_name_1987_sdd_togo);
        climates_available:           ALL_CLIMATES; 
        introduction_date:            date(1987, 1, 1);
        model_life:                   40; //How long should this train be buyable
        vehicle_life:                 40; //How long should this train last before renewal
        tractive_effort_coefficient:  0.125;
        weight:                       52 ton;
        power:                        920 hp;
		cargo_capacity:				  150 ;
        speed:                        115 km/h;
		
        loading_speed:                5; 
        cost_factor:                  1;
        running_cost_factor:          1;
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics {
        default				:	sw_1987_sdd_togo_directioncheck;
		can_attach_wagon	:	sw_1987_sdd_togo_attach ;
		create_effect		:	vfx_ohle ;
		additional_text		: 	string(STR_DESC_SUBURBAN);
    }
	livery_override (item_pgt_mu_coach){
		default                     : sw_1987_sdd_togo_revcheck ;
		cargo_capacity              : 150 ;
		weight                      : 52 ;
		power                       : 920 ;
		length						: 8;
	}
}
# 1 "pgt.pnml" 2
# 1 "src/EMU - Suburban/2000_sdd_olympian.pnml" 1
spriteset(spriteset_2000_sdd_olympian_fp,   "gfx/EMU - Suburban/2000_sdd_olympian.png") {template_32(7, 39)}
spriteset(spriteset_2000_sdd_olympian_rp,   "gfx/EMU - Suburban/2000_sdd_olympian.png") {template_32(7, 64)}
spriteset(spriteset_2000_sdd_olympian_f,    "gfx/EMU - Suburban/2000_sdd_olympian.png") {template_32(185, 39)}
spriteset(spriteset_2000_sdd_olympian_r,    "gfx/EMU - Suburban/2000_sdd_olympian.png") {template_32(185, 64)}
spriteset(spriteset_2000_sdd_olympian_c,    "gfx/EMU - Suburban/2000_sdd_olympian.png") {template_32(7, 89)}
spriteset(spriteset_2000_sdd_olympian_cp,   "gfx/EMU - Suburban/2000_sdd_olympian.png") {template_32(185, 89)}
spriteset(spriteset_2000_sdd_olympian_c_r,  "gfx/EMU - Suburban/2000_sdd_olympian.png") {template_32_r(7, 89)}
spriteset(spriteset_2000_sdd_olympian_cp_r, "gfx/EMU - Suburban/2000_sdd_olympian.png") {template_32_r(185, 89)}

// C O D E

//Backward

switch(FEAT_TRAINS, SELF, sw_2000_sdd_olympian_pantocheck_at_2_r, position_in_vehid_chain % 3){
	2 : spriteset_2000_sdd_olympian_cp_r;
	return spriteset_2000_sdd_olympian_c_r;
}
switch(FEAT_TRAINS, SELF, sw_2000_sdd_olympian_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_2000_sdd_olympian_cp;
	return spriteset_2000_sdd_olympian_c_r;
}

switch(FEAT_TRAINS, SELF, sw_2000_sdd_olympian_pantocheck_at_1_r, position_in_vehid_chain % 2){
	1 : spriteset_2000_sdd_olympian_cp_r;
	return spriteset_2000_sdd_olympian_c_r;
}

switch(FEAT_TRAINS, SELF, sw_2000_sdd_olympian_pantocheck_at_0_r, position_in_vehid_chain % 2){
	1 : spriteset_2000_sdd_olympian_c_r;
	return spriteset_2000_sdd_olympian_cp;
}

switch(FEAT_TRAINS, SELF, sw_2000_sdd_olympian_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_2000_sdd_olympian_cp;
	return spriteset_2000_sdd_olympian_c_r;
}

switch(FEAT_TRAINS, SELF, sw_2000_sdd_olympian_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2000_sdd_olympian_pantocheck_at_1_r;
	return sw_2000_sdd_olympian_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_2000_sdd_olympian_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : spriteset_2000_sdd_olympian_c_r;
	return sw_2000_sdd_olympian_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_2000_sdd_olympian_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2000_sdd_olympian_pantocheck_at_2_r;
	return sw_2000_sdd_olympian_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_2000_sdd_olympian_lencheck_r, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_2000_sdd_olympian_c_r;
	3 : sw_2000_sdd_olympian_pantocheck_at_1_r;
	4 : sw_2000_sdd_olympian_sidecheck_4_r;
	5 : sw_2000_sdd_olympian_pantocheck_at_2_r;
	6 .. 7 : sw_2000_sdd_olympian_sidecheck_6_r;
	return sw_2000_sdd_olympian_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_2000_sdd_olympian_pantocheck_at_2, position_in_vehid_chain % 3){
	2 : spriteset_2000_sdd_olympian_cp_r;
	return spriteset_2000_sdd_olympian_c;
}
switch(FEAT_TRAINS, SELF, sw_2000_sdd_olympian_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_2000_sdd_olympian_cp;
	return spriteset_2000_sdd_olympian_c;
}

switch(FEAT_TRAINS, SELF, sw_2000_sdd_olympian_pantocheck_at_1, position_in_vehid_chain % 2){
	1 : spriteset_2000_sdd_olympian_cp_r;
	return spriteset_2000_sdd_olympian_c;
}
switch(FEAT_TRAINS, SELF, sw_2000_sdd_olympian_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_2000_sdd_olympian_cp;
	return spriteset_2000_sdd_olympian_c;
}

switch(FEAT_TRAINS, SELF, sw_2000_sdd_olympian_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2000_sdd_olympian_pantocheck_at_1;
	return sw_2000_sdd_olympian_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_2000_sdd_olympian_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2000_sdd_olympian_pantocheck_at_1;
	return spriteset_2000_sdd_olympian_c;
}

switch(FEAT_TRAINS, SELF, sw_2000_sdd_olympian_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2000_sdd_olympian_pantocheck_at_2;
	return sw_2000_sdd_olympian_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_2000_sdd_olympian_lencheck, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_2000_sdd_olympian_c;
	3 : sw_2000_sdd_olympian_pantocheck_at_1;
	4 : sw_2000_sdd_olympian_sidecheck_4;
	5 : sw_2000_sdd_olympian_pantocheck_at_2;
	6 .. 7 : sw_2000_sdd_olympian_sidecheck_6;
	return sw_2000_sdd_olympian_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_2000_sdd_olympian_panto_direction_r_pos, position_in_vehid_chain_from_end){
	0: spriteset_2000_sdd_olympian_fp; //Panto
	return spriteset_2000_sdd_olympian_f; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_2000_sdd_olympian_panto_direction_r, vehicle_is_flipped){
	0 : sw_2000_sdd_olympian_panto_direction_r_pos;		//Front panto
	return spriteset_2000_sdd_olympian_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_2000_sdd_olympian_panto_flipcheck_r, vehicle_is_flipped){
	0 : sw_2000_sdd_olympian_panto_direction_r;		//Not flipped, give Panto
	return spriteset_2000_sdd_olympian_rp;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_2000_sdd_olympian_frontcheck_r, position_in_vehid_chain){
	0: sw_2000_sdd_olympian_panto_direction_r; //We need a pantograph, guaranteed
	return sw_2000_sdd_olympian_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_2000_sdd_olympian_panto_direction, vehicle_is_flipped){
	0 : spriteset_2000_sdd_olympian_fp;		//Front panto
	return spriteset_2000_sdd_olympian_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_2000_sdd_olympian_panto_flipcheck, vehicle_is_flipped){
	0 : sw_2000_sdd_olympian_panto_direction;		//Not flipped, give Panto
	return spriteset_2000_sdd_olympian_r;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_2000_sdd_olympian_frontcheck, position_in_vehid_chain){
	0: sw_2000_sdd_olympian_panto_direction; //We need a pantograph, guaranteed
	return sw_2000_sdd_olympian_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_2000_sdd_olympian_directioncheck, vehicle_is_reversed){
	0: sw_2000_sdd_olympian_frontcheck; //We are going forwards
	return sw_2000_sdd_olympian_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_2000_sdd_olympian_revcheck, vehicle_is_reversed){
	0 : sw_2000_sdd_olympian_lencheck;
	return sw_2000_sdd_olympian_lencheck_r;
}

switch(FEAT_TRAINS, SELF, sw_2000_sdd_olympian_attach, vehicle_type_id){
	item_2000_sdd_olympian	: return CB_RESULT_ATTACH_ALLOW  ;
	item_pgt_mu_coach	: return CB_RESULT_ATTACH_ALLOW  ;
	return string(STR_NO_COUPLE_MU_SAME) ;
}

/* Define the actual train */
item(FEAT_TRAINS, item_2000_sdd_olympian) {
    /* Define properties first, make sure to set all of them */
    property {
        reliability_decay:            20;
		refittable_cargo_classes:	  CC_PASSENGERS ;
		cargo_allow_refit:			  [PASS, TOUR] ;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
		misc_flags: bitmask(TRAIN_FLAG_MU, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_2CC);
        track_type:                   ELRL;
        ai_special_flag:              AI_FLAG_PASSENGER;
        running_cost_base:            RUNNING_COST_ELECTRIC;
		length:						  8;
		dual_headed:				  1;
        refit_cost:                   0;
        // callback flags are not set manually
        ai_engine_rank:               0;
        engine_class:                 ENGINE_CLASS_ELECTRIC;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
		effect_spawn_model_and_powered : EFFECT_SPAWN_MODEL_ELECTRIC ;
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
        name:                         string(str_name_2000_sdd_olympian);
        climates_available:           ALL_CLIMATES; 
        introduction_date:            date(2000, 1, 1);
        model_life:                   40; //How long should this train be buyable
        vehicle_life:                 40; //How long should this train last before renewal
        tractive_effort_coefficient:  0.180;
        weight:                       47 ton;
        power:                        1200 hp;
		cargo_capacity:				  150 ;
        speed:                        115 km/h;
		
        loading_speed:                5; 
        cost_factor:                  1;
        running_cost_factor:          1;
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics {
        default				:	sw_2000_sdd_olympian_directioncheck;
		can_attach_wagon	:	sw_2000_sdd_olympian_attach ;
		create_effect		:	vfx_ohle ;
		additional_text		: 	string(STR_DESC_SUBURBAN);
    }
	livery_override (item_pgt_mu_coach){
		default                     : sw_2000_sdd_olympian_revcheck ;
		cargo_capacity              : 150 ;
		weight                      : 47 ;
		power                       : 1200 ;
		length						: 8;
	}
}
# 1 "pgt.pnml" 2
# 1 "src/EMU - Suburban/2000_ssd_suburbanite.pnml" 1
spriteset(spriteset_2000_ssd_suburbanite_fp,   "gfx/EMU - Suburban/2000_ssd_suburbanite.png") {template_32(7, 39)}
spriteset(spriteset_2000_ssd_suburbanite_rp,   "gfx/EMU - Suburban/2000_ssd_suburbanite.png") {template_32(7, 64)}
spriteset(spriteset_2000_ssd_suburbanite_f,    "gfx/EMU - Suburban/2000_ssd_suburbanite.png") {template_32(185, 39)}
spriteset(spriteset_2000_ssd_suburbanite_r,    "gfx/EMU - Suburban/2000_ssd_suburbanite.png") {template_32(185, 64)}
spriteset(spriteset_2000_ssd_suburbanite_c,    "gfx/EMU - Suburban/2000_ssd_suburbanite.png") {template_32(7, 89)}
spriteset(spriteset_2000_ssd_suburbanite_cp,   "gfx/EMU - Suburban/2000_ssd_suburbanite.png") {template_32(185, 89)}
spriteset(spriteset_2000_ssd_suburbanite_c_r,  "gfx/EMU - Suburban/2000_ssd_suburbanite.png") {template_32_r(7, 89)}
spriteset(spriteset_2000_ssd_suburbanite_cp_r, "gfx/EMU - Suburban/2000_ssd_suburbanite.png") {template_32_r(185, 89)}

// C O D E

//Backward

switch(FEAT_TRAINS, SELF, sw_2000_ssd_suburbanite_pantocheck_at_2_r, position_in_vehid_chain % 3){
	2 : spriteset_2000_ssd_suburbanite_cp_r;
	return spriteset_2000_ssd_suburbanite_c_r;
}
switch(FEAT_TRAINS, SELF, sw_2000_ssd_suburbanite_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_2000_ssd_suburbanite_cp;
	return spriteset_2000_ssd_suburbanite_c_r;
}

switch(FEAT_TRAINS, SELF, sw_2000_ssd_suburbanite_pantocheck_at_1_r, position_in_vehid_chain % 2){
	1 : spriteset_2000_ssd_suburbanite_cp_r;
	return spriteset_2000_ssd_suburbanite_c_r;
}

switch(FEAT_TRAINS, SELF, sw_2000_ssd_suburbanite_pantocheck_at_0_r, position_in_vehid_chain % 2){
	1 : spriteset_2000_ssd_suburbanite_c_r;
	return spriteset_2000_ssd_suburbanite_cp;
}

switch(FEAT_TRAINS, SELF, sw_2000_ssd_suburbanite_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_2000_ssd_suburbanite_cp;
	return spriteset_2000_ssd_suburbanite_c_r;
}

switch(FEAT_TRAINS, SELF, sw_2000_ssd_suburbanite_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2000_ssd_suburbanite_pantocheck_at_1_r;
	return sw_2000_ssd_suburbanite_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_2000_ssd_suburbanite_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : spriteset_2000_ssd_suburbanite_c_r;
	return sw_2000_ssd_suburbanite_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_2000_ssd_suburbanite_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2000_ssd_suburbanite_pantocheck_at_2_r;
	return sw_2000_ssd_suburbanite_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_2000_ssd_suburbanite_lencheck_r, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_2000_ssd_suburbanite_c_r;
	3 : sw_2000_ssd_suburbanite_pantocheck_at_1_r;
	4 : sw_2000_ssd_suburbanite_sidecheck_4_r;
	5 : sw_2000_ssd_suburbanite_pantocheck_at_2_r;
	6 .. 7 : sw_2000_ssd_suburbanite_sidecheck_6_r;
	return sw_2000_ssd_suburbanite_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_2000_ssd_suburbanite_pantocheck_at_2, position_in_vehid_chain % 3){
	2 : spriteset_2000_ssd_suburbanite_cp_r;
	return spriteset_2000_ssd_suburbanite_c;
}
switch(FEAT_TRAINS, SELF, sw_2000_ssd_suburbanite_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_2000_ssd_suburbanite_cp;
	return spriteset_2000_ssd_suburbanite_c;
}

switch(FEAT_TRAINS, SELF, sw_2000_ssd_suburbanite_pantocheck_at_1, position_in_vehid_chain % 2){
	1 : spriteset_2000_ssd_suburbanite_cp_r;
	return spriteset_2000_ssd_suburbanite_c;
}
switch(FEAT_TRAINS, SELF, sw_2000_ssd_suburbanite_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_2000_ssd_suburbanite_cp;
	return spriteset_2000_ssd_suburbanite_c;
}

switch(FEAT_TRAINS, SELF, sw_2000_ssd_suburbanite_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2000_ssd_suburbanite_pantocheck_at_1;
	return sw_2000_ssd_suburbanite_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_2000_ssd_suburbanite_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2000_ssd_suburbanite_pantocheck_at_1;
	return spriteset_2000_ssd_suburbanite_c;
}

switch(FEAT_TRAINS, SELF, sw_2000_ssd_suburbanite_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2000_ssd_suburbanite_pantocheck_at_2;
	return sw_2000_ssd_suburbanite_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_2000_ssd_suburbanite_lencheck, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_2000_ssd_suburbanite_c;
	3 : sw_2000_ssd_suburbanite_pantocheck_at_1;
	4 : sw_2000_ssd_suburbanite_sidecheck_4;
	5 : sw_2000_ssd_suburbanite_pantocheck_at_2;
	6 .. 7 : sw_2000_ssd_suburbanite_sidecheck_6;
	return sw_2000_ssd_suburbanite_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_2000_ssd_suburbanite_panto_direction_r_pos, position_in_vehid_chain_from_end){
	0: spriteset_2000_ssd_suburbanite_fp; //Panto
	return spriteset_2000_ssd_suburbanite_f; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_2000_ssd_suburbanite_panto_direction_r, vehicle_is_flipped){
	0 : sw_2000_ssd_suburbanite_panto_direction_r_pos;		//Front panto
	return spriteset_2000_ssd_suburbanite_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_2000_ssd_suburbanite_panto_flipcheck_r, vehicle_is_flipped){
	0 : sw_2000_ssd_suburbanite_panto_direction_r;		//Not flipped, give Panto
	return spriteset_2000_ssd_suburbanite_rp;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_2000_ssd_suburbanite_frontcheck_r, position_in_vehid_chain){
	0: sw_2000_ssd_suburbanite_panto_direction_r; //We need a pantograph, guaranteed
	return sw_2000_ssd_suburbanite_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_2000_ssd_suburbanite_panto_direction, vehicle_is_flipped){
	0 : spriteset_2000_ssd_suburbanite_fp;		//Front panto
	return spriteset_2000_ssd_suburbanite_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_2000_ssd_suburbanite_panto_flipcheck, vehicle_is_flipped){
	0 : sw_2000_ssd_suburbanite_panto_direction;		//Not flipped, give Panto
	return spriteset_2000_ssd_suburbanite_r;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_2000_ssd_suburbanite_frontcheck, position_in_vehid_chain){
	0: sw_2000_ssd_suburbanite_panto_direction; //We need a pantograph, guaranteed
	return sw_2000_ssd_suburbanite_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_2000_ssd_suburbanite_directioncheck, vehicle_is_reversed){
	0: sw_2000_ssd_suburbanite_frontcheck; //We are going forwards
	return sw_2000_ssd_suburbanite_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_2000_ssd_suburbanite_revcheck, vehicle_is_reversed){
	0 : sw_2000_ssd_suburbanite_lencheck;
	return sw_2000_ssd_suburbanite_lencheck_r;
}

switch(FEAT_TRAINS, SELF, sw_2000_ssd_suburbanite_attach, vehicle_type_id){
	item_2000_ssd_suburbanite	: return CB_RESULT_ATTACH_ALLOW  ;
	item_pgt_mu_coach	: return CB_RESULT_ATTACH_ALLOW  ;
	return string(STR_NO_COUPLE_MU_SAME) ;
}

/* Define the actual train */
item(FEAT_TRAINS, item_2000_ssd_suburbanite) {
    /* Define properties first, make sure to set all of them */
    property {
        reliability_decay:            20;
		refittable_cargo_classes:	  CC_PASSENGERS ;
		cargo_allow_refit:			  [PASS, TOUR] ;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
		misc_flags: bitmask(TRAIN_FLAG_MU, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_2CC);
        track_type:                   ELRL;
        ai_special_flag:              AI_FLAG_PASSENGER;
        running_cost_base:            RUNNING_COST_ELECTRIC;
		length:						  8;
		dual_headed:				  1;
        refit_cost:                   0;
        // callback flags are not set manually
        ai_engine_rank:               0;
        engine_class:                 ENGINE_CLASS_ELECTRIC;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
		effect_spawn_model_and_powered : EFFECT_SPAWN_MODEL_ELECTRIC ;
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
        name:                         string(str_name_2000_ssd_suburbanite);
        climates_available:           ALL_CLIMATES; 
        introduction_date:            date(2000, 1, 1);
        model_life:                   40; //How long should this train be buyable
        vehicle_life:                 40; //How long should this train last before renewal
        tractive_effort_coefficient:  0.250;
        weight:                       40 ton;
        power:                        1400 hp;
		cargo_capacity:				  120 ;
        speed:                        130 km/h;
		
        loading_speed:                5; 
        cost_factor:                  1;
        running_cost_factor:          1;
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics {
        default				:	sw_2000_ssd_suburbanite_directioncheck;
		can_attach_wagon	:	sw_2000_ssd_suburbanite_attach ;
		create_effect		:	vfx_ohle ;
		additional_text		: 	string(STR_DESC_SUBURBAN);
    }
	livery_override (item_pgt_mu_coach){
		default                     : sw_2000_ssd_suburbanite_revcheck ;
		cargo_capacity              : 120 ;
		weight                      : 40 ;
		power                       : 1400 ;
		length						: 8;
	}
}
# 1 "pgt.pnml" 2
# 1 "src/EMU - Suburban/2011_sdd_banko.pnml" 1
spriteset(spriteset_2011_sdd_banko_fp,   "gfx/EMU - Suburban/2011_sdd_banko.png") {template_32(7, 39)}
spriteset(spriteset_2011_sdd_banko_rp,   "gfx/EMU - Suburban/2011_sdd_banko.png") {template_32(7, 64)}
spriteset(spriteset_2011_sdd_banko_f,    "gfx/EMU - Suburban/2011_sdd_banko.png") {template_32(185, 39)}
spriteset(spriteset_2011_sdd_banko_r,    "gfx/EMU - Suburban/2011_sdd_banko.png") {template_32(185, 64)}
spriteset(spriteset_2011_sdd_banko_c,    "gfx/EMU - Suburban/2011_sdd_banko.png") {template_32(7, 89)}
spriteset(spriteset_2011_sdd_banko_cp,   "gfx/EMU - Suburban/2011_sdd_banko.png") {template_32(185, 89)}
spriteset(spriteset_2011_sdd_banko_c_r,  "gfx/EMU - Suburban/2011_sdd_banko.png") {template_32_r(7, 89)}
spriteset(spriteset_2011_sdd_banko_cp_r, "gfx/EMU - Suburban/2011_sdd_banko.png") {template_32_r(185, 89)}

// C O D E

//Backward

switch(FEAT_TRAINS, SELF, sw_2011_sdd_banko_pantocheck_at_2_r, position_in_vehid_chain % 3){
	2 : spriteset_2011_sdd_banko_cp_r;
	return spriteset_2011_sdd_banko_c_r;
}
switch(FEAT_TRAINS, SELF, sw_2011_sdd_banko_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_2011_sdd_banko_cp;
	return spriteset_2011_sdd_banko_c_r;
}

switch(FEAT_TRAINS, SELF, sw_2011_sdd_banko_pantocheck_at_1_r, position_in_vehid_chain % 2){
	1 : spriteset_2011_sdd_banko_cp_r;
	return spriteset_2011_sdd_banko_c_r;
}

switch(FEAT_TRAINS, SELF, sw_2011_sdd_banko_pantocheck_at_0_r, position_in_vehid_chain % 2){
	1 : spriteset_2011_sdd_banko_c_r;
	return spriteset_2011_sdd_banko_cp;
}

switch(FEAT_TRAINS, SELF, sw_2011_sdd_banko_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_2011_sdd_banko_cp;
	return spriteset_2011_sdd_banko_c_r;
}

switch(FEAT_TRAINS, SELF, sw_2011_sdd_banko_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2011_sdd_banko_pantocheck_at_1_r;
	return sw_2011_sdd_banko_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_2011_sdd_banko_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : spriteset_2011_sdd_banko_c_r;
	return sw_2011_sdd_banko_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_2011_sdd_banko_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2011_sdd_banko_pantocheck_at_2_r;
	return sw_2011_sdd_banko_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_2011_sdd_banko_lencheck_r, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_2011_sdd_banko_c_r;
	3 : sw_2011_sdd_banko_pantocheck_at_1_r;
	4 : sw_2011_sdd_banko_sidecheck_4_r;
	5 : sw_2011_sdd_banko_pantocheck_at_2_r;
	6 .. 7 : sw_2011_sdd_banko_sidecheck_6_r;
	return sw_2011_sdd_banko_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_2011_sdd_banko_pantocheck_at_2, position_in_vehid_chain % 3){
	2 : spriteset_2011_sdd_banko_cp_r;
	return spriteset_2011_sdd_banko_c;
}
switch(FEAT_TRAINS, SELF, sw_2011_sdd_banko_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_2011_sdd_banko_cp;
	return spriteset_2011_sdd_banko_c;
}

switch(FEAT_TRAINS, SELF, sw_2011_sdd_banko_pantocheck_at_1, position_in_vehid_chain % 2){
	1 : spriteset_2011_sdd_banko_cp_r;
	return spriteset_2011_sdd_banko_c;
}
switch(FEAT_TRAINS, SELF, sw_2011_sdd_banko_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_2011_sdd_banko_cp;
	return spriteset_2011_sdd_banko_c;
}

switch(FEAT_TRAINS, SELF, sw_2011_sdd_banko_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2011_sdd_banko_pantocheck_at_1;
	return sw_2011_sdd_banko_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_2011_sdd_banko_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2011_sdd_banko_pantocheck_at_1;
	return spriteset_2011_sdd_banko_c;
}

switch(FEAT_TRAINS, SELF, sw_2011_sdd_banko_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2011_sdd_banko_pantocheck_at_2;
	return sw_2011_sdd_banko_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_2011_sdd_banko_lencheck, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_2011_sdd_banko_c;
	3 : sw_2011_sdd_banko_pantocheck_at_1;
	4 : sw_2011_sdd_banko_sidecheck_4;
	5 : sw_2011_sdd_banko_pantocheck_at_2;
	6 .. 7 : sw_2011_sdd_banko_sidecheck_6;
	return sw_2011_sdd_banko_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_2011_sdd_banko_panto_direction_r_pos, position_in_vehid_chain_from_end){
	0: spriteset_2011_sdd_banko_fp; //Panto
	return spriteset_2011_sdd_banko_f; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_2011_sdd_banko_panto_direction_r, vehicle_is_flipped){
	0 : sw_2011_sdd_banko_panto_direction_r_pos;		//Front panto
	return spriteset_2011_sdd_banko_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_2011_sdd_banko_panto_flipcheck_r, vehicle_is_flipped){
	0 : sw_2011_sdd_banko_panto_direction_r;		//Not flipped, give Panto
	return spriteset_2011_sdd_banko_rp;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_2011_sdd_banko_frontcheck_r, position_in_vehid_chain){
	0: sw_2011_sdd_banko_panto_direction_r; //We need a pantograph, guaranteed
	return sw_2011_sdd_banko_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_2011_sdd_banko_panto_direction, vehicle_is_flipped){
	0 : spriteset_2011_sdd_banko_fp;		//Front panto
	return spriteset_2011_sdd_banko_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_2011_sdd_banko_panto_flipcheck, vehicle_is_flipped){
	0 : sw_2011_sdd_banko_panto_direction;		//Not flipped, give Panto
	return spriteset_2011_sdd_banko_r;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_2011_sdd_banko_frontcheck, position_in_vehid_chain){
	0: sw_2011_sdd_banko_panto_direction; //We need a pantograph, guaranteed
	return sw_2011_sdd_banko_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_2011_sdd_banko_directioncheck, vehicle_is_reversed){
	0: sw_2011_sdd_banko_frontcheck; //We are going forwards
	return sw_2011_sdd_banko_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_2011_sdd_banko_revcheck, vehicle_is_reversed){
	0 : sw_2011_sdd_banko_lencheck;
	return sw_2011_sdd_banko_lencheck_r;
}

switch(FEAT_TRAINS, SELF, sw_2011_sdd_banko_attach, vehicle_type_id){
	item_2011_sdd_banko	: return CB_RESULT_ATTACH_ALLOW  ;
	item_pgt_mu_coach	: return CB_RESULT_ATTACH_ALLOW  ;
	return string(STR_NO_COUPLE_MU_SAME) ;
}

/* Define the actual train */
item(FEAT_TRAINS, item_2011_sdd_banko) {
    /* Define properties first, make sure to set all of them */
    property {
        reliability_decay:            20;
		refittable_cargo_classes:	  CC_PASSENGERS ;
		cargo_allow_refit:			  [PASS, TOUR] ;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
		misc_flags: bitmask(TRAIN_FLAG_MU, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_2CC);
        track_type:                   ELRL;
        ai_special_flag:              AI_FLAG_PASSENGER;
        running_cost_base:            RUNNING_COST_ELECTRIC;
		length:						  8;
		dual_headed:				  1;
        refit_cost:                   0;
        // callback flags are not set manually
        ai_engine_rank:               0;
        engine_class:                 ENGINE_CLASS_ELECTRIC;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
		effect_spawn_model_and_powered : EFFECT_SPAWN_MODEL_ELECTRIC ;
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
        name:                         string(str_name_2011_sdd_banko);
        climates_available:           ALL_CLIMATES; 
        introduction_date:            date(2011, 1, 1);
        model_life:                   40; //How long should this train be buyable
        vehicle_life:                 40; //How long should this train last before renewal
        tractive_effort_coefficient:  0.222;
        weight:                       45 ton;
        power:                        1400 hp;
		cargo_capacity:				  150 ;
        speed:                        130 km/h;
		
        loading_speed:                5; 
        cost_factor:                  1;
        running_cost_factor:          1;
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics {
        default				:	sw_2011_sdd_banko_directioncheck;
		can_attach_wagon	:	sw_2011_sdd_banko_attach ;
		create_effect		:	vfx_ohle ;
		additional_text		: 	string(STR_DESC_SUBURBAN);
    }
	livery_override (item_pgt_mu_coach){
		default                     : sw_2011_sdd_banko_revcheck ;
		cargo_capacity              : 150 ;
		weight                      : 45 ;
		power                       : 1400 ;
		length						: 8;
	}
}
# 1 "pgt.pnml" 2
# 1 "src/EMU - Suburban/2015_ssd_cosmopolitan.pnml" 1
spriteset(spriteset_2015_ssd_cosmopolitan_fp,   "gfx/EMU - Suburban/2015_ssd_cosmopolitan.png") {template_32(7, 39)}
spriteset(spriteset_2015_ssd_cosmopolitan_rp,   "gfx/EMU - Suburban/2015_ssd_cosmopolitan.png") {template_32(7, 64)}
spriteset(spriteset_2015_ssd_cosmopolitan_f,    "gfx/EMU - Suburban/2015_ssd_cosmopolitan.png") {template_32(185, 39)}
spriteset(spriteset_2015_ssd_cosmopolitan_r,    "gfx/EMU - Suburban/2015_ssd_cosmopolitan.png") {template_32(185, 64)}
spriteset(spriteset_2015_ssd_cosmopolitan_c,    "gfx/EMU - Suburban/2015_ssd_cosmopolitan.png") {template_32(7, 89)}
spriteset(spriteset_2015_ssd_cosmopolitan_cp,   "gfx/EMU - Suburban/2015_ssd_cosmopolitan.png") {template_32(185, 89)}
spriteset(spriteset_2015_ssd_cosmopolitan_c_r,  "gfx/EMU - Suburban/2015_ssd_cosmopolitan.png") {template_32_r(7, 89)}
spriteset(spriteset_2015_ssd_cosmopolitan_cp_r, "gfx/EMU - Suburban/2015_ssd_cosmopolitan.png") {template_32_r(185, 89)}

// C O D E

//Backward

switch(FEAT_TRAINS, SELF, sw_2015_ssd_cosmopolitan_pantocheck_at_2_r, position_in_vehid_chain % 3){
	2 : spriteset_2015_ssd_cosmopolitan_cp_r;
	return spriteset_2015_ssd_cosmopolitan_c_r;
}
switch(FEAT_TRAINS, SELF, sw_2015_ssd_cosmopolitan_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_2015_ssd_cosmopolitan_cp;
	return spriteset_2015_ssd_cosmopolitan_c_r;
}

switch(FEAT_TRAINS, SELF, sw_2015_ssd_cosmopolitan_pantocheck_at_1_r, position_in_vehid_chain % 2){
	1 : spriteset_2015_ssd_cosmopolitan_cp_r;
	return spriteset_2015_ssd_cosmopolitan_c_r;
}

switch(FEAT_TRAINS, SELF, sw_2015_ssd_cosmopolitan_pantocheck_at_0_r, position_in_vehid_chain % 2){
	1 : spriteset_2015_ssd_cosmopolitan_c_r;
	return spriteset_2015_ssd_cosmopolitan_cp;
}

switch(FEAT_TRAINS, SELF, sw_2015_ssd_cosmopolitan_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_2015_ssd_cosmopolitan_cp;
	return spriteset_2015_ssd_cosmopolitan_c_r;
}

switch(FEAT_TRAINS, SELF, sw_2015_ssd_cosmopolitan_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2015_ssd_cosmopolitan_pantocheck_at_1_r;
	return sw_2015_ssd_cosmopolitan_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_2015_ssd_cosmopolitan_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : spriteset_2015_ssd_cosmopolitan_c_r;
	return sw_2015_ssd_cosmopolitan_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_2015_ssd_cosmopolitan_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2015_ssd_cosmopolitan_pantocheck_at_2_r;
	return sw_2015_ssd_cosmopolitan_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_2015_ssd_cosmopolitan_lencheck_r, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_2015_ssd_cosmopolitan_c_r;
	3 : sw_2015_ssd_cosmopolitan_pantocheck_at_1_r;
	4 : sw_2015_ssd_cosmopolitan_sidecheck_4_r;
	5 : sw_2015_ssd_cosmopolitan_pantocheck_at_2_r;
	6 .. 7 : sw_2015_ssd_cosmopolitan_sidecheck_6_r;
	return sw_2015_ssd_cosmopolitan_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_2015_ssd_cosmopolitan_pantocheck_at_2, position_in_vehid_chain % 3){
	2 : spriteset_2015_ssd_cosmopolitan_cp_r;
	return spriteset_2015_ssd_cosmopolitan_c;
}
switch(FEAT_TRAINS, SELF, sw_2015_ssd_cosmopolitan_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_2015_ssd_cosmopolitan_cp;
	return spriteset_2015_ssd_cosmopolitan_c;
}

switch(FEAT_TRAINS, SELF, sw_2015_ssd_cosmopolitan_pantocheck_at_1, position_in_vehid_chain % 2){
	1 : spriteset_2015_ssd_cosmopolitan_cp_r;
	return spriteset_2015_ssd_cosmopolitan_c;
}
switch(FEAT_TRAINS, SELF, sw_2015_ssd_cosmopolitan_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_2015_ssd_cosmopolitan_cp;
	return spriteset_2015_ssd_cosmopolitan_c;
}

switch(FEAT_TRAINS, SELF, sw_2015_ssd_cosmopolitan_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2015_ssd_cosmopolitan_pantocheck_at_1;
	return sw_2015_ssd_cosmopolitan_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_2015_ssd_cosmopolitan_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2015_ssd_cosmopolitan_pantocheck_at_1;
	return spriteset_2015_ssd_cosmopolitan_c;
}

switch(FEAT_TRAINS, SELF, sw_2015_ssd_cosmopolitan_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2015_ssd_cosmopolitan_pantocheck_at_2;
	return sw_2015_ssd_cosmopolitan_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_2015_ssd_cosmopolitan_lencheck, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_2015_ssd_cosmopolitan_c;
	3 : sw_2015_ssd_cosmopolitan_pantocheck_at_1;
	4 : sw_2015_ssd_cosmopolitan_sidecheck_4;
	5 : sw_2015_ssd_cosmopolitan_pantocheck_at_2;
	6 .. 7 : sw_2015_ssd_cosmopolitan_sidecheck_6;
	return sw_2015_ssd_cosmopolitan_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_2015_ssd_cosmopolitan_panto_direction_r_pos, position_in_vehid_chain_from_end){
	0: spriteset_2015_ssd_cosmopolitan_fp; //Panto
	return spriteset_2015_ssd_cosmopolitan_f; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_2015_ssd_cosmopolitan_panto_direction_r, vehicle_is_flipped){
	0 : sw_2015_ssd_cosmopolitan_panto_direction_r_pos;		//Front panto
	return spriteset_2015_ssd_cosmopolitan_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_2015_ssd_cosmopolitan_panto_flipcheck_r, vehicle_is_flipped){
	0 : sw_2015_ssd_cosmopolitan_panto_direction_r;		//Not flipped, give Panto
	return spriteset_2015_ssd_cosmopolitan_rp;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_2015_ssd_cosmopolitan_frontcheck_r, position_in_vehid_chain){
	0: sw_2015_ssd_cosmopolitan_panto_direction_r; //We need a pantograph, guaranteed
	return sw_2015_ssd_cosmopolitan_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_2015_ssd_cosmopolitan_panto_direction, vehicle_is_flipped){
	0 : spriteset_2015_ssd_cosmopolitan_fp;		//Front panto
	return spriteset_2015_ssd_cosmopolitan_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_2015_ssd_cosmopolitan_panto_flipcheck, vehicle_is_flipped){
	0 : sw_2015_ssd_cosmopolitan_panto_direction;		//Not flipped, give Panto
	return spriteset_2015_ssd_cosmopolitan_r;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_2015_ssd_cosmopolitan_frontcheck, position_in_vehid_chain){
	0: sw_2015_ssd_cosmopolitan_panto_direction; //We need a pantograph, guaranteed
	return sw_2015_ssd_cosmopolitan_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_2015_ssd_cosmopolitan_directioncheck, vehicle_is_reversed){
	0: sw_2015_ssd_cosmopolitan_frontcheck; //We are going forwards
	return sw_2015_ssd_cosmopolitan_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_2015_ssd_cosmopolitan_revcheck, vehicle_is_reversed){
	0 : sw_2015_ssd_cosmopolitan_lencheck;
	return sw_2015_ssd_cosmopolitan_lencheck_r;
}

switch(FEAT_TRAINS, SELF, sw_2015_ssd_cosmopolitan_attach, vehicle_type_id){
	item_2015_ssd_cosmopolitan	: return CB_RESULT_ATTACH_ALLOW  ;
	item_pgt_mu_coach	: return CB_RESULT_ATTACH_ALLOW  ;
	return string(STR_NO_COUPLE_MU_SAME) ;
}

/* Define the actual train */
item(FEAT_TRAINS, item_2015_ssd_cosmopolitan) {
    /* Define properties first, make sure to set all of them */
    property {
        reliability_decay:            20;
		refittable_cargo_classes:	  CC_PASSENGERS ;
		cargo_allow_refit:			  [PASS, TOUR] ;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
		misc_flags: bitmask(TRAIN_FLAG_MU, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_2CC);
        track_type:                   ELRL;
        ai_special_flag:              AI_FLAG_PASSENGER;
        running_cost_base:            RUNNING_COST_ELECTRIC;
		length:						  8;
		dual_headed:				  1;
        refit_cost:                   0;
        // callback flags are not set manually
        ai_engine_rank:               0;
        engine_class:                 ENGINE_CLASS_ELECTRIC;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
		effect_spawn_model_and_powered : EFFECT_SPAWN_MODEL_ELECTRIC ;
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
        name:                         string(str_name_2015_ssd_cosmopolitan);
        climates_available:           ALL_CLIMATES; 
        introduction_date:            date(2015, 1, 1);
        model_life:                   40; //How long should this train be buyable
        vehicle_life:                 40; //How long should this train last before renewal
        tractive_effort_coefficient:  0.285;
        weight:                       40 ton;
        power:                        1600 hp;
		cargo_capacity:				  120 ;
        speed:                        130 km/h;
		
        loading_speed:                5; 
        cost_factor:                  1;
        running_cost_factor:          1;
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics {
        default				:	sw_2015_ssd_cosmopolitan_directioncheck;
		can_attach_wagon	:	sw_2015_ssd_cosmopolitan_attach ;
		create_effect		:	vfx_ohle ;
		additional_text		: 	string(STR_DESC_SUBURBAN);
    }
	livery_override (item_pgt_mu_coach){
		default                     : sw_2015_ssd_cosmopolitan_revcheck ;
		cargo_capacity              : 120 ;
		weight                      : 40 ;
		power                       : 1600 ;
		length						: 8;
	}
}
# 1 "pgt.pnml" 2
# 1 "src/EMU - Suburban/2027_sdd_prism.pnml" 1
spriteset(spriteset_2027_sdd_prism_fp,   "gfx/EMU - Suburban/2027_sdd_prism.png") {template_32(7, 39)}
spriteset(spriteset_2027_sdd_prism_rp,   "gfx/EMU - Suburban/2027_sdd_prism.png") {template_32(7, 64)}
spriteset(spriteset_2027_sdd_prism_f,    "gfx/EMU - Suburban/2027_sdd_prism.png") {template_32(185, 39)}
spriteset(spriteset_2027_sdd_prism_r,    "gfx/EMU - Suburban/2027_sdd_prism.png") {template_32(185, 64)}
spriteset(spriteset_2027_sdd_prism_c,    "gfx/EMU - Suburban/2027_sdd_prism.png") {template_32(7, 89)}
spriteset(spriteset_2027_sdd_prism_cp,   "gfx/EMU - Suburban/2027_sdd_prism.png") {template_32(185, 89)}
spriteset(spriteset_2027_sdd_prism_c_r,  "gfx/EMU - Suburban/2027_sdd_prism.png") {template_32_r(7, 89)}
spriteset(spriteset_2027_sdd_prism_cp_r, "gfx/EMU - Suburban/2027_sdd_prism.png") {template_32_r(185, 89)}

// C O D E

//Backward

switch(FEAT_TRAINS, SELF, sw_2027_sdd_prism_pantocheck_at_2_r, position_in_vehid_chain % 3){
	2 : spriteset_2027_sdd_prism_cp_r;
	return spriteset_2027_sdd_prism_c_r;
}
switch(FEAT_TRAINS, SELF, sw_2027_sdd_prism_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_2027_sdd_prism_cp;
	return spriteset_2027_sdd_prism_c_r;
}

switch(FEAT_TRAINS, SELF, sw_2027_sdd_prism_pantocheck_at_1_r, position_in_vehid_chain % 2){
	1 : spriteset_2027_sdd_prism_cp_r;
	return spriteset_2027_sdd_prism_c_r;
}

switch(FEAT_TRAINS, SELF, sw_2027_sdd_prism_pantocheck_at_0_r, position_in_vehid_chain % 2){
	1 : spriteset_2027_sdd_prism_c_r;
	return spriteset_2027_sdd_prism_cp;
}

switch(FEAT_TRAINS, SELF, sw_2027_sdd_prism_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_2027_sdd_prism_cp;
	return spriteset_2027_sdd_prism_c_r;
}

switch(FEAT_TRAINS, SELF, sw_2027_sdd_prism_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2027_sdd_prism_pantocheck_at_1_r;
	return sw_2027_sdd_prism_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_2027_sdd_prism_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : spriteset_2027_sdd_prism_c_r;
	return sw_2027_sdd_prism_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_2027_sdd_prism_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2027_sdd_prism_pantocheck_at_2_r;
	return sw_2027_sdd_prism_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_2027_sdd_prism_lencheck_r, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_2027_sdd_prism_c_r;
	3 : sw_2027_sdd_prism_pantocheck_at_1_r;
	4 : sw_2027_sdd_prism_sidecheck_4_r;
	5 : sw_2027_sdd_prism_pantocheck_at_2_r;
	6 .. 7 : sw_2027_sdd_prism_sidecheck_6_r;
	return sw_2027_sdd_prism_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_2027_sdd_prism_pantocheck_at_2, position_in_vehid_chain % 3){
	2 : spriteset_2027_sdd_prism_cp_r;
	return spriteset_2027_sdd_prism_c;
}
switch(FEAT_TRAINS, SELF, sw_2027_sdd_prism_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_2027_sdd_prism_cp;
	return spriteset_2027_sdd_prism_c;
}

switch(FEAT_TRAINS, SELF, sw_2027_sdd_prism_pantocheck_at_1, position_in_vehid_chain % 2){
	1 : spriteset_2027_sdd_prism_cp_r;
	return spriteset_2027_sdd_prism_c;
}
switch(FEAT_TRAINS, SELF, sw_2027_sdd_prism_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_2027_sdd_prism_cp;
	return spriteset_2027_sdd_prism_c;
}

switch(FEAT_TRAINS, SELF, sw_2027_sdd_prism_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2027_sdd_prism_pantocheck_at_1;
	return sw_2027_sdd_prism_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_2027_sdd_prism_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2027_sdd_prism_pantocheck_at_1;
	return spriteset_2027_sdd_prism_c;
}

switch(FEAT_TRAINS, SELF, sw_2027_sdd_prism_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2027_sdd_prism_pantocheck_at_2;
	return sw_2027_sdd_prism_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_2027_sdd_prism_lencheck, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_2027_sdd_prism_c;
	3 : sw_2027_sdd_prism_pantocheck_at_1;
	4 : sw_2027_sdd_prism_sidecheck_4;
	5 : sw_2027_sdd_prism_pantocheck_at_2;
	6 .. 7 : sw_2027_sdd_prism_sidecheck_6;
	return sw_2027_sdd_prism_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_2027_sdd_prism_panto_direction_r_pos, position_in_vehid_chain_from_end){
	0: spriteset_2027_sdd_prism_fp; //Panto
	return spriteset_2027_sdd_prism_f; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_2027_sdd_prism_panto_direction_r, vehicle_is_flipped){
	0 : sw_2027_sdd_prism_panto_direction_r_pos;		//Front panto
	return spriteset_2027_sdd_prism_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_2027_sdd_prism_panto_flipcheck_r, vehicle_is_flipped){
	0 : sw_2027_sdd_prism_panto_direction_r;		//Not flipped, give Panto
	return spriteset_2027_sdd_prism_rp;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_2027_sdd_prism_frontcheck_r, position_in_vehid_chain){
	0: sw_2027_sdd_prism_panto_direction_r; //We need a pantograph, guaranteed
	return sw_2027_sdd_prism_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_2027_sdd_prism_panto_direction, vehicle_is_flipped){
	0 : spriteset_2027_sdd_prism_fp;		//Front panto
	return spriteset_2027_sdd_prism_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_2027_sdd_prism_panto_flipcheck, vehicle_is_flipped){
	0 : sw_2027_sdd_prism_panto_direction;		//Not flipped, give Panto
	return spriteset_2027_sdd_prism_r;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_2027_sdd_prism_frontcheck, position_in_vehid_chain){
	0: sw_2027_sdd_prism_panto_direction; //We need a pantograph, guaranteed
	return sw_2027_sdd_prism_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_2027_sdd_prism_directioncheck, vehicle_is_reversed){
	0: sw_2027_sdd_prism_frontcheck; //We are going forwards
	return sw_2027_sdd_prism_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_2027_sdd_prism_revcheck, vehicle_is_reversed){
	0 : sw_2027_sdd_prism_lencheck;
	return sw_2027_sdd_prism_lencheck_r;
}

switch(FEAT_TRAINS, SELF, sw_2027_sdd_prism_attach, vehicle_type_id){
	item_2027_sdd_prism	: return CB_RESULT_ATTACH_ALLOW  ;
	item_pgt_mu_coach	: return CB_RESULT_ATTACH_ALLOW  ;
	return string(STR_NO_COUPLE_MU_SAME) ;
}

/* Define the actual train */
item(FEAT_TRAINS, item_2027_sdd_prism) {
    /* Define properties first, make sure to set all of them */
    property {
        reliability_decay:            20;
		refittable_cargo_classes:	  CC_PASSENGERS ;
		cargo_allow_refit:			  [PASS, TOUR] ;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
		misc_flags: bitmask(TRAIN_FLAG_MU, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_2CC);
        track_type:                   ELRL;
        ai_special_flag:              AI_FLAG_PASSENGER;
        running_cost_base:            RUNNING_COST_ELECTRIC;
		length:						  8;
		dual_headed:				  1;
        refit_cost:                   0;
        // callback flags are not set manually
        ai_engine_rank:               0;
        engine_class:                 ENGINE_CLASS_ELECTRIC;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
		effect_spawn_model_and_powered : EFFECT_SPAWN_MODEL_ELECTRIC ;
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
        name:                         string(str_name_2027_sdd_prism);
        climates_available:           ALL_CLIMATES; 
        introduction_date:            date(2027, 1, 1);
        model_life:                   40; //How long should this train be buyable
        vehicle_life:                 40; //How long should this train last before renewal
        tractive_effort_coefficient:  0.253;
        weight:                       45 ton;
        power:                        1600 hp;
		cargo_capacity:				  160 ;
        speed:                        130 km/h;
		
        loading_speed:                5; 
        cost_factor:                  1;
        running_cost_factor:          1;
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics {
        default				:	sw_2027_sdd_prism_directioncheck;
		can_attach_wagon	:	sw_2027_sdd_prism_attach ;
		create_effect		:	vfx_ohle ;
		additional_text		: 	string(STR_DESC_SUBURBAN);
    }
	livery_override (item_pgt_mu_coach){
		default                     : sw_2027_sdd_prism_revcheck ;
		cargo_capacity              : 160 ;
		weight                      : 45 ;
		power                       : 1600 ;
		length						: 8;
	}
}
# 1 "pgt.pnml" 2

# 1 "src/EMU - Metro/1925_m_hanei.pnml" 1
spriteset(spriteset_1925_m_hanei_fp,   "gfx/EMU - Metro/1925_m_hanei.png") {template_32(7, 39)}
spriteset(spriteset_1925_m_hanei_rp,   "gfx/EMU - Metro/1925_m_hanei.png") {template_32(7, 64)}
spriteset(spriteset_1925_m_hanei_f,    "gfx/EMU - Metro/1925_m_hanei.png") {template_32(185, 39)}
spriteset(spriteset_1925_m_hanei_r,    "gfx/EMU - Metro/1925_m_hanei.png") {template_32(185, 64)}
spriteset(spriteset_1925_m_hanei_c,    "gfx/EMU - Metro/1925_m_hanei.png") {template_32(7, 89)}
spriteset(spriteset_1925_m_hanei_cp,   "gfx/EMU - Metro/1925_m_hanei.png") {template_32(185, 89)}
spriteset(spriteset_1925_m_hanei_c_r,  "gfx/EMU - Metro/1925_m_hanei.png") {template_32_r(7, 89)}
spriteset(spriteset_1925_m_hanei_cp_r, "gfx/EMU - Metro/1925_m_hanei.png") {template_32_r(185, 89)}

// C O D E

//Backward

switch(FEAT_TRAINS, SELF, sw_1925_m_hanei_pantocheck_at_2_r, position_in_vehid_chain % 3){
	2 : spriteset_1925_m_hanei_cp_r;
	return spriteset_1925_m_hanei_c_r;
}
switch(FEAT_TRAINS, SELF, sw_1925_m_hanei_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_1925_m_hanei_cp;
	return spriteset_1925_m_hanei_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1925_m_hanei_pantocheck_at_1_r, position_in_vehid_chain % 2){
	1 : spriteset_1925_m_hanei_cp_r;
	return spriteset_1925_m_hanei_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1925_m_hanei_pantocheck_at_0_r, position_in_vehid_chain % 2){
	1 : spriteset_1925_m_hanei_c_r;
	return spriteset_1925_m_hanei_cp;
}

switch(FEAT_TRAINS, SELF, sw_1925_m_hanei_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_1925_m_hanei_cp;
	return spriteset_1925_m_hanei_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1925_m_hanei_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1925_m_hanei_pantocheck_at_1_r;
	return sw_1925_m_hanei_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_1925_m_hanei_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : spriteset_1925_m_hanei_c_r;
	return sw_1925_m_hanei_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_1925_m_hanei_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1925_m_hanei_pantocheck_at_2_r;
	return sw_1925_m_hanei_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_1925_m_hanei_lencheck_r, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_1925_m_hanei_c_r;
	3 : sw_1925_m_hanei_pantocheck_at_1_r;
	4 : sw_1925_m_hanei_sidecheck_4_r;
	5 : sw_1925_m_hanei_pantocheck_at_2_r;
	6 .. 7 : sw_1925_m_hanei_sidecheck_6_r;
	return sw_1925_m_hanei_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_1925_m_hanei_pantocheck_at_2, position_in_vehid_chain % 3){
	2 : spriteset_1925_m_hanei_cp_r;
	return spriteset_1925_m_hanei_c;
}
switch(FEAT_TRAINS, SELF, sw_1925_m_hanei_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_1925_m_hanei_cp;
	return spriteset_1925_m_hanei_c;
}

switch(FEAT_TRAINS, SELF, sw_1925_m_hanei_pantocheck_at_1, position_in_vehid_chain % 2){
	1 : spriteset_1925_m_hanei_cp_r;
	return spriteset_1925_m_hanei_c;
}
switch(FEAT_TRAINS, SELF, sw_1925_m_hanei_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_1925_m_hanei_cp;
	return spriteset_1925_m_hanei_c;
}

switch(FEAT_TRAINS, SELF, sw_1925_m_hanei_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1925_m_hanei_pantocheck_at_1;
	return sw_1925_m_hanei_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_1925_m_hanei_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1925_m_hanei_pantocheck_at_1;
	return spriteset_1925_m_hanei_c;
}

switch(FEAT_TRAINS, SELF, sw_1925_m_hanei_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1925_m_hanei_pantocheck_at_2;
	return sw_1925_m_hanei_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_1925_m_hanei_lencheck, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_1925_m_hanei_c;
	3 : sw_1925_m_hanei_pantocheck_at_1;
	4 : sw_1925_m_hanei_sidecheck_4;
	5 : sw_1925_m_hanei_pantocheck_at_2;
	6 .. 7 : sw_1925_m_hanei_sidecheck_6;
	return sw_1925_m_hanei_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_1925_m_hanei_panto_direction_r_pos, position_in_vehid_chain_from_end){
	0: spriteset_1925_m_hanei_fp; //Panto
	return spriteset_1925_m_hanei_f; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_1925_m_hanei_panto_direction_r, vehicle_is_flipped){
	0 : sw_1925_m_hanei_panto_direction_r_pos;		//Front panto
	return spriteset_1925_m_hanei_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_1925_m_hanei_panto_flipcheck_r, vehicle_is_flipped){
	0 : sw_1925_m_hanei_panto_direction_r;		//Not flipped, give Panto
	return spriteset_1925_m_hanei_rp;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_1925_m_hanei_frontcheck_r, position_in_vehid_chain){
	0: sw_1925_m_hanei_panto_direction_r; //We need a pantograph, guaranteed
	return sw_1925_m_hanei_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_1925_m_hanei_panto_direction, vehicle_is_flipped){
	0 : spriteset_1925_m_hanei_fp;		//Front panto
	return spriteset_1925_m_hanei_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_1925_m_hanei_panto_flipcheck, vehicle_is_flipped){
	0 : sw_1925_m_hanei_panto_direction;		//Not flipped, give Panto
	return spriteset_1925_m_hanei_r;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_1925_m_hanei_frontcheck, position_in_vehid_chain){
	0: sw_1925_m_hanei_panto_direction; //We need a pantograph, guaranteed
	return sw_1925_m_hanei_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_1925_m_hanei_directioncheck, vehicle_is_reversed){
	0: sw_1925_m_hanei_frontcheck; //We are going forwards
	return sw_1925_m_hanei_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_1925_m_hanei_revcheck, vehicle_is_reversed){
	0 : sw_1925_m_hanei_lencheck;
	return sw_1925_m_hanei_lencheck_r;
}

switch(FEAT_TRAINS, SELF, sw_1925_m_hanei_attach, vehicle_type_id){
	item_1925_m_hanei	: return CB_RESULT_ATTACH_ALLOW  ;
	item_pgt_mu_coach	: return CB_RESULT_ATTACH_ALLOW  ;
	return string(STR_NO_COUPLE_MU_SAME) ;
}

/* Define the actual train */
item(FEAT_TRAINS, item_1925_m_hanei) {
    /* Define properties first, make sure to set all of them */
    property {
        reliability_decay:            20;
		refittable_cargo_classes:	  CC_PASSENGERS ;
		cargo_allow_refit:			  [PASS, TOUR] ;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
		misc_flags: bitmask(TRAIN_FLAG_MU, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_2CC);
        track_type:                   ELRL;
        ai_special_flag:              AI_FLAG_PASSENGER;
        running_cost_base:            RUNNING_COST_ELECTRIC;
		length:						  8;
		dual_headed:				  1;
        refit_cost:                   0;
        // callback flags are not set manually
        ai_engine_rank:               0;
        engine_class:                 ENGINE_CLASS_ELECTRIC;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
		effect_spawn_model_and_powered : EFFECT_SPAWN_MODEL_ELECTRIC ;
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
        name:                         string(str_name_1925_m_hanei);
        climates_available:           ALL_CLIMATES; 
        introduction_date:            date(1925, 1, 1);
        model_life:                   40; //How long should this train be buyable
        vehicle_life:                 40; //How long should this train last before renewal
        tractive_effort_coefficient:  0.05;
        weight:                       22 ton;
        power:                        150 hp;
		cargo_capacity:				  150 ;
        speed:                        60 km/h;
		
        loading_speed:                5; 
        cost_factor:                  1;
        running_cost_factor:          1;
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics {
        default				:	sw_1925_m_hanei_directioncheck;
		can_attach_wagon	:	sw_1925_m_hanei_attach ;
		create_effect		:	vfx_ohle ;
		additional_text		: 	string(STR_DESC_METRO);
    }
	livery_override (item_pgt_mu_coach){
		default                     : sw_1925_m_hanei_revcheck ;
		cargo_capacity              : 150 ;
		weight                      : 22 ;
		power                       : 150 ;
		length						: 8;
	}
}
# 1 "pgt.pnml" 2
# 1 "src/EMU - Metro/1939_m_senso.pnml" 1
spriteset(spriteset_1939_m_senso_fp,   "gfx/EMU - Metro/1939_m_senso.png") {template_32(7, 39)}
spriteset(spriteset_1939_m_senso_rp,   "gfx/EMU - Metro/1939_m_senso.png") {template_32(7, 64)}
spriteset(spriteset_1939_m_senso_f,    "gfx/EMU - Metro/1939_m_senso.png") {template_32(185, 39)}
spriteset(spriteset_1939_m_senso_r,    "gfx/EMU - Metro/1939_m_senso.png") {template_32(185, 64)}
spriteset(spriteset_1939_m_senso_c,    "gfx/EMU - Metro/1939_m_senso.png") {template_32(7, 89)}
spriteset(spriteset_1939_m_senso_cp,   "gfx/EMU - Metro/1939_m_senso.png") {template_32(185, 89)}
spriteset(spriteset_1939_m_senso_c_r,  "gfx/EMU - Metro/1939_m_senso.png") {template_32_r(7, 89)}
spriteset(spriteset_1939_m_senso_cp_r, "gfx/EMU - Metro/1939_m_senso.png") {template_32_r(185, 89)}

// C O D E

//Backward

switch(FEAT_TRAINS, SELF, sw_1939_m_senso_pantocheck_at_2_r, position_in_vehid_chain % 3){
	2 : spriteset_1939_m_senso_cp_r;
	return spriteset_1939_m_senso_c_r;
}
switch(FEAT_TRAINS, SELF, sw_1939_m_senso_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_1939_m_senso_cp;
	return spriteset_1939_m_senso_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1939_m_senso_pantocheck_at_1_r, position_in_vehid_chain % 2){
	1 : spriteset_1939_m_senso_cp_r;
	return spriteset_1939_m_senso_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1939_m_senso_pantocheck_at_0_r, position_in_vehid_chain % 2){
	1 : spriteset_1939_m_senso_c_r;
	return spriteset_1939_m_senso_cp;
}

switch(FEAT_TRAINS, SELF, sw_1939_m_senso_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_1939_m_senso_cp;
	return spriteset_1939_m_senso_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1939_m_senso_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1939_m_senso_pantocheck_at_1_r;
	return sw_1939_m_senso_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_1939_m_senso_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : spriteset_1939_m_senso_c_r;
	return sw_1939_m_senso_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_1939_m_senso_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1939_m_senso_pantocheck_at_2_r;
	return sw_1939_m_senso_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_1939_m_senso_lencheck_r, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_1939_m_senso_c_r;
	3 : sw_1939_m_senso_pantocheck_at_1_r;
	4 : sw_1939_m_senso_sidecheck_4_r;
	5 : sw_1939_m_senso_pantocheck_at_2_r;
	6 .. 7 : sw_1939_m_senso_sidecheck_6_r;
	return sw_1939_m_senso_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_1939_m_senso_pantocheck_at_2, position_in_vehid_chain % 3){
	2 : spriteset_1939_m_senso_cp_r;
	return spriteset_1939_m_senso_c;
}
switch(FEAT_TRAINS, SELF, sw_1939_m_senso_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_1939_m_senso_cp;
	return spriteset_1939_m_senso_c;
}

switch(FEAT_TRAINS, SELF, sw_1939_m_senso_pantocheck_at_1, position_in_vehid_chain % 2){
	1 : spriteset_1939_m_senso_cp_r;
	return spriteset_1939_m_senso_c;
}
switch(FEAT_TRAINS, SELF, sw_1939_m_senso_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_1939_m_senso_cp;
	return spriteset_1939_m_senso_c;
}

switch(FEAT_TRAINS, SELF, sw_1939_m_senso_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1939_m_senso_pantocheck_at_1;
	return sw_1939_m_senso_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_1939_m_senso_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1939_m_senso_pantocheck_at_1;
	return spriteset_1939_m_senso_c;
}

switch(FEAT_TRAINS, SELF, sw_1939_m_senso_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1939_m_senso_pantocheck_at_2;
	return sw_1939_m_senso_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_1939_m_senso_lencheck, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_1939_m_senso_c;
	3 : sw_1939_m_senso_pantocheck_at_1;
	4 : sw_1939_m_senso_sidecheck_4;
	5 : sw_1939_m_senso_pantocheck_at_2;
	6 .. 7 : sw_1939_m_senso_sidecheck_6;
	return sw_1939_m_senso_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_1939_m_senso_panto_direction_r_pos, position_in_vehid_chain_from_end){
	0: spriteset_1939_m_senso_fp; //Panto
	return spriteset_1939_m_senso_f; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_1939_m_senso_panto_direction_r, vehicle_is_flipped){
	0 : sw_1939_m_senso_panto_direction_r_pos;		//Front panto
	return spriteset_1939_m_senso_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_1939_m_senso_panto_flipcheck_r, vehicle_is_flipped){
	0 : sw_1939_m_senso_panto_direction_r;		//Not flipped, give Panto
	return spriteset_1939_m_senso_rp;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_1939_m_senso_frontcheck_r, position_in_vehid_chain){
	0: sw_1939_m_senso_panto_direction_r; //We need a pantograph, guaranteed
	return sw_1939_m_senso_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_1939_m_senso_panto_direction, vehicle_is_flipped){
	0 : spriteset_1939_m_senso_fp;		//Front panto
	return spriteset_1939_m_senso_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_1939_m_senso_panto_flipcheck, vehicle_is_flipped){
	0 : sw_1939_m_senso_panto_direction;		//Not flipped, give Panto
	return spriteset_1939_m_senso_r;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_1939_m_senso_frontcheck, position_in_vehid_chain){
	0: sw_1939_m_senso_panto_direction; //We need a pantograph, guaranteed
	return sw_1939_m_senso_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_1939_m_senso_directioncheck, vehicle_is_reversed){
	0: sw_1939_m_senso_frontcheck; //We are going forwards
	return sw_1939_m_senso_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_1939_m_senso_revcheck, vehicle_is_reversed){
	0 : sw_1939_m_senso_lencheck;
	return sw_1939_m_senso_lencheck_r;
}

switch(FEAT_TRAINS, SELF, sw_1939_m_senso_attach, vehicle_type_id){
	item_1939_m_senso	: return CB_RESULT_ATTACH_ALLOW  ;
	item_pgt_mu_coach	: return CB_RESULT_ATTACH_ALLOW  ;
	return string(STR_NO_COUPLE_MU_SAME) ;
}

/* Define the actual train */
item(FEAT_TRAINS, item_1939_m_senso) {
    /* Define properties first, make sure to set all of them */
    property {
        reliability_decay:            20;
		refittable_cargo_classes:	  CC_PASSENGERS ;
		cargo_allow_refit:			  [PASS, TOUR] ;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
		misc_flags: bitmask(TRAIN_FLAG_MU, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_2CC);
        track_type:                   ELRL;
        ai_special_flag:              AI_FLAG_PASSENGER;
        running_cost_base:            RUNNING_COST_ELECTRIC;
		length:						  8;
		dual_headed:				  1;
        refit_cost:                   0;
        // callback flags are not set manually
        ai_engine_rank:               0;
        engine_class:                 ENGINE_CLASS_ELECTRIC;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
		effect_spawn_model_and_powered : EFFECT_SPAWN_MODEL_ELECTRIC ;
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
        name:                         string(str_name_1939_m_senso);
        climates_available:           ALL_CLIMATES; 
        introduction_date:            date(1939, 1, 1);
        model_life:                   40; //How long should this train be buyable
        vehicle_life:                 40; //How long should this train last before renewal
        tractive_effort_coefficient:  0.063;
        weight:                       22 ton;
        power:                        200 hp;
		cargo_capacity:				  150 ;
        speed:                        60 km/h;
		
        loading_speed:                5; 
        cost_factor:                  1;
        running_cost_factor:          1;
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics {
        default				:	sw_1939_m_senso_directioncheck;
		can_attach_wagon	:	sw_1939_m_senso_attach ;
		create_effect		:	vfx_ohle ;
		additional_text		: 	string(STR_DESC_METRO);
    }
	livery_override (item_pgt_mu_coach){
		default                     : sw_1939_m_senso_revcheck ;
		cargo_capacity              : 150 ;
		weight                      : 22 ;
		power                       : 200 ;
		length						: 8;
	}
}
# 1 "pgt.pnml" 2
# 1 "src/EMU - Metro/1955_m_tokyu.pnml" 1
spriteset(spriteset_1955_m_tokyu_fp,   "gfx/EMU - Metro/1955_m_tokyu.png") {template_32(7, 39)}
spriteset(spriteset_1955_m_tokyu_rp,   "gfx/EMU - Metro/1955_m_tokyu.png") {template_32(7, 64)}
spriteset(spriteset_1955_m_tokyu_f,    "gfx/EMU - Metro/1955_m_tokyu.png") {template_32(185, 39)}
spriteset(spriteset_1955_m_tokyu_r,    "gfx/EMU - Metro/1955_m_tokyu.png") {template_32(185, 64)}
spriteset(spriteset_1955_m_tokyu_c,    "gfx/EMU - Metro/1955_m_tokyu.png") {template_32(7, 89)}
spriteset(spriteset_1955_m_tokyu_cp,   "gfx/EMU - Metro/1955_m_tokyu.png") {template_32(185, 89)}
spriteset(spriteset_1955_m_tokyu_c_r,  "gfx/EMU - Metro/1955_m_tokyu.png") {template_32_r(7, 89)}
spriteset(spriteset_1955_m_tokyu_cp_r, "gfx/EMU - Metro/1955_m_tokyu.png") {template_32_r(185, 89)}

// C O D E

//Backward

switch(FEAT_TRAINS, SELF, sw_1955_m_tokyu_pantocheck_at_2_r, position_in_vehid_chain % 3){
	2 : spriteset_1955_m_tokyu_cp_r;
	return spriteset_1955_m_tokyu_c_r;
}
switch(FEAT_TRAINS, SELF, sw_1955_m_tokyu_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_1955_m_tokyu_cp;
	return spriteset_1955_m_tokyu_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1955_m_tokyu_pantocheck_at_1_r, position_in_vehid_chain % 2){
	1 : spriteset_1955_m_tokyu_cp_r;
	return spriteset_1955_m_tokyu_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1955_m_tokyu_pantocheck_at_0_r, position_in_vehid_chain % 2){
	1 : spriteset_1955_m_tokyu_c_r;
	return spriteset_1955_m_tokyu_cp;
}

switch(FEAT_TRAINS, SELF, sw_1955_m_tokyu_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_1955_m_tokyu_cp;
	return spriteset_1955_m_tokyu_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1955_m_tokyu_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1955_m_tokyu_pantocheck_at_1_r;
	return sw_1955_m_tokyu_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_1955_m_tokyu_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : spriteset_1955_m_tokyu_c_r;
	return sw_1955_m_tokyu_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_1955_m_tokyu_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1955_m_tokyu_pantocheck_at_2_r;
	return sw_1955_m_tokyu_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_1955_m_tokyu_lencheck_r, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_1955_m_tokyu_c_r;
	3 : sw_1955_m_tokyu_pantocheck_at_1_r;
	4 : sw_1955_m_tokyu_sidecheck_4_r;
	5 : sw_1955_m_tokyu_pantocheck_at_2_r;
	6 .. 7 : sw_1955_m_tokyu_sidecheck_6_r;
	return sw_1955_m_tokyu_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_1955_m_tokyu_pantocheck_at_2, position_in_vehid_chain % 3){
	2 : spriteset_1955_m_tokyu_cp_r;
	return spriteset_1955_m_tokyu_c;
}
switch(FEAT_TRAINS, SELF, sw_1955_m_tokyu_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_1955_m_tokyu_cp;
	return spriteset_1955_m_tokyu_c;
}

switch(FEAT_TRAINS, SELF, sw_1955_m_tokyu_pantocheck_at_1, position_in_vehid_chain % 2){
	1 : spriteset_1955_m_tokyu_cp_r;
	return spriteset_1955_m_tokyu_c;
}
switch(FEAT_TRAINS, SELF, sw_1955_m_tokyu_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_1955_m_tokyu_cp;
	return spriteset_1955_m_tokyu_c;
}

switch(FEAT_TRAINS, SELF, sw_1955_m_tokyu_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1955_m_tokyu_pantocheck_at_1;
	return sw_1955_m_tokyu_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_1955_m_tokyu_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1955_m_tokyu_pantocheck_at_1;
	return spriteset_1955_m_tokyu_c;
}

switch(FEAT_TRAINS, SELF, sw_1955_m_tokyu_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1955_m_tokyu_pantocheck_at_2;
	return sw_1955_m_tokyu_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_1955_m_tokyu_lencheck, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_1955_m_tokyu_c;
	3 : sw_1955_m_tokyu_pantocheck_at_1;
	4 : sw_1955_m_tokyu_sidecheck_4;
	5 : sw_1955_m_tokyu_pantocheck_at_2;
	6 .. 7 : sw_1955_m_tokyu_sidecheck_6;
	return sw_1955_m_tokyu_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_1955_m_tokyu_panto_direction_r_pos, position_in_vehid_chain_from_end){
	0: spriteset_1955_m_tokyu_fp; //Panto
	return spriteset_1955_m_tokyu_f; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_1955_m_tokyu_panto_direction_r, vehicle_is_flipped){
	0 : sw_1955_m_tokyu_panto_direction_r_pos;		//Front panto
	return spriteset_1955_m_tokyu_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_1955_m_tokyu_panto_flipcheck_r, vehicle_is_flipped){
	0 : sw_1955_m_tokyu_panto_direction_r;		//Not flipped, give Panto
	return spriteset_1955_m_tokyu_rp;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_1955_m_tokyu_frontcheck_r, position_in_vehid_chain){
	0: sw_1955_m_tokyu_panto_direction_r; //We need a pantograph, guaranteed
	return sw_1955_m_tokyu_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_1955_m_tokyu_panto_direction, vehicle_is_flipped){
	0 : spriteset_1955_m_tokyu_fp;		//Front panto
	return spriteset_1955_m_tokyu_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_1955_m_tokyu_panto_flipcheck, vehicle_is_flipped){
	0 : sw_1955_m_tokyu_panto_direction;		//Not flipped, give Panto
	return spriteset_1955_m_tokyu_r;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_1955_m_tokyu_frontcheck, position_in_vehid_chain){
	0: sw_1955_m_tokyu_panto_direction; //We need a pantograph, guaranteed
	return sw_1955_m_tokyu_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_1955_m_tokyu_directioncheck, vehicle_is_reversed){
	0: sw_1955_m_tokyu_frontcheck; //We are going forwards
	return sw_1955_m_tokyu_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_1955_m_tokyu_revcheck, vehicle_is_reversed){
	0 : sw_1955_m_tokyu_lencheck;
	return sw_1955_m_tokyu_lencheck_r;
}

switch(FEAT_TRAINS, SELF, sw_1955_m_tokyu_attach, vehicle_type_id){
	item_1955_m_tokyu	: return CB_RESULT_ATTACH_ALLOW  ;
	item_pgt_mu_coach	: return CB_RESULT_ATTACH_ALLOW  ;
	return string(STR_NO_COUPLE_MU_SAME) ;
}

/* Define the actual train */
item(FEAT_TRAINS, item_1955_m_tokyu) {
    /* Define properties first, make sure to set all of them */
    property {
        reliability_decay:            20;
		refittable_cargo_classes:	  CC_PASSENGERS ;
		cargo_allow_refit:			  [PASS, TOUR] ;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
		misc_flags: bitmask(TRAIN_FLAG_MU, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_2CC);
        track_type:                   ELRL;
        ai_special_flag:              AI_FLAG_PASSENGER;
        running_cost_base:            RUNNING_COST_ELECTRIC;
		length:						  8;
		dual_headed:				  1;
        refit_cost:                   0;
        // callback flags are not set manually
        ai_engine_rank:               0;
        engine_class:                 ENGINE_CLASS_ELECTRIC;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
		effect_spawn_model_and_powered : EFFECT_SPAWN_MODEL_ELECTRIC ;
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
        name:                         string(str_name_1955_m_tokyu);
        climates_available:           ALL_CLIMATES; 
        introduction_date:            date(1955, 1, 1);
        model_life:                   40; //How long should this train be buyable
        vehicle_life:                 40; //How long should this train last before renewal
        tractive_effort_coefficient:  0.095;
        weight:                       22 ton;
        power:                        300 hp;
		cargo_capacity:				  160 ;
        speed:                        60 km/h;
		
        loading_speed:                5; 
        cost_factor:                  1;
        running_cost_factor:          1;
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics {
        default				:	sw_1955_m_tokyu_directioncheck;
		can_attach_wagon	:	sw_1955_m_tokyu_attach ;
		create_effect		:	vfx_ohle ;
		additional_text		: 	string(STR_DESC_METRO);
    }
	livery_override (item_pgt_mu_coach){
		default                     : sw_1955_m_tokyu_revcheck ;
		cargo_capacity              : 160 ;
		weight                      : 22 ;
		power                       : 300 ;
		length						: 8;
	}
}
# 1 "pgt.pnml" 2
# 1 "src/EMU - Metro/1970_m_laurel.pnml" 1
spriteset(spriteset_1970_m_laurel_fp,   "gfx/EMU - Metro/1970_m_laurel.png") {template_32(7, 39)}
spriteset(spriteset_1970_m_laurel_rp,   "gfx/EMU - Metro/1970_m_laurel.png") {template_32(7, 64)}
spriteset(spriteset_1970_m_laurel_f,    "gfx/EMU - Metro/1970_m_laurel.png") {template_32(185, 39)}
spriteset(spriteset_1970_m_laurel_r,    "gfx/EMU - Metro/1970_m_laurel.png") {template_32(185, 64)}
spriteset(spriteset_1970_m_laurel_c,    "gfx/EMU - Metro/1970_m_laurel.png") {template_32(7, 89)}
spriteset(spriteset_1970_m_laurel_cp,   "gfx/EMU - Metro/1970_m_laurel.png") {template_32(185, 89)}
spriteset(spriteset_1970_m_laurel_c_r,  "gfx/EMU - Metro/1970_m_laurel.png") {template_32_r(7, 89)}
spriteset(spriteset_1970_m_laurel_cp_r, "gfx/EMU - Metro/1970_m_laurel.png") {template_32_r(185, 89)}

// C O D E

//Backward

switch(FEAT_TRAINS, SELF, sw_1970_m_laurel_pantocheck_at_2_r, position_in_vehid_chain % 3){
	2 : spriteset_1970_m_laurel_cp_r;
	return spriteset_1970_m_laurel_c_r;
}
switch(FEAT_TRAINS, SELF, sw_1970_m_laurel_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_1970_m_laurel_cp;
	return spriteset_1970_m_laurel_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1970_m_laurel_pantocheck_at_1_r, position_in_vehid_chain % 2){
	1 : spriteset_1970_m_laurel_cp_r;
	return spriteset_1970_m_laurel_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1970_m_laurel_pantocheck_at_0_r, position_in_vehid_chain % 2){
	1 : spriteset_1970_m_laurel_c_r;
	return spriteset_1970_m_laurel_cp;
}

switch(FEAT_TRAINS, SELF, sw_1970_m_laurel_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_1970_m_laurel_cp;
	return spriteset_1970_m_laurel_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1970_m_laurel_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1970_m_laurel_pantocheck_at_1_r;
	return sw_1970_m_laurel_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_1970_m_laurel_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : spriteset_1970_m_laurel_c_r;
	return sw_1970_m_laurel_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_1970_m_laurel_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1970_m_laurel_pantocheck_at_2_r;
	return sw_1970_m_laurel_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_1970_m_laurel_lencheck_r, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_1970_m_laurel_c_r;
	3 : sw_1970_m_laurel_pantocheck_at_1_r;
	4 : sw_1970_m_laurel_sidecheck_4_r;
	5 : sw_1970_m_laurel_pantocheck_at_2_r;
	6 .. 7 : sw_1970_m_laurel_sidecheck_6_r;
	return sw_1970_m_laurel_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_1970_m_laurel_pantocheck_at_2, position_in_vehid_chain % 3){
	2 : spriteset_1970_m_laurel_cp_r;
	return spriteset_1970_m_laurel_c;
}
switch(FEAT_TRAINS, SELF, sw_1970_m_laurel_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_1970_m_laurel_cp;
	return spriteset_1970_m_laurel_c;
}

switch(FEAT_TRAINS, SELF, sw_1970_m_laurel_pantocheck_at_1, position_in_vehid_chain % 2){
	1 : spriteset_1970_m_laurel_cp_r;
	return spriteset_1970_m_laurel_c;
}
switch(FEAT_TRAINS, SELF, sw_1970_m_laurel_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_1970_m_laurel_cp;
	return spriteset_1970_m_laurel_c;
}

switch(FEAT_TRAINS, SELF, sw_1970_m_laurel_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1970_m_laurel_pantocheck_at_1;
	return sw_1970_m_laurel_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_1970_m_laurel_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1970_m_laurel_pantocheck_at_1;
	return spriteset_1970_m_laurel_c;
}

switch(FEAT_TRAINS, SELF, sw_1970_m_laurel_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1970_m_laurel_pantocheck_at_2;
	return sw_1970_m_laurel_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_1970_m_laurel_lencheck, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_1970_m_laurel_c;
	3 : sw_1970_m_laurel_pantocheck_at_1;
	4 : sw_1970_m_laurel_sidecheck_4;
	5 : sw_1970_m_laurel_pantocheck_at_2;
	6 .. 7 : sw_1970_m_laurel_sidecheck_6;
	return sw_1970_m_laurel_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_1970_m_laurel_panto_direction_r_pos, position_in_vehid_chain_from_end){
	0: spriteset_1970_m_laurel_fp; //Panto
	return spriteset_1970_m_laurel_f; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_1970_m_laurel_panto_direction_r, vehicle_is_flipped){
	0 : sw_1970_m_laurel_panto_direction_r_pos;		//Front panto
	return spriteset_1970_m_laurel_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_1970_m_laurel_panto_flipcheck_r, vehicle_is_flipped){
	0 : sw_1970_m_laurel_panto_direction_r;		//Not flipped, give Panto
	return spriteset_1970_m_laurel_rp;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_1970_m_laurel_frontcheck_r, position_in_vehid_chain){
	0: sw_1970_m_laurel_panto_direction_r; //We need a pantograph, guaranteed
	return sw_1970_m_laurel_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_1970_m_laurel_panto_direction, vehicle_is_flipped){
	0 : spriteset_1970_m_laurel_fp;		//Front panto
	return spriteset_1970_m_laurel_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_1970_m_laurel_panto_flipcheck, vehicle_is_flipped){
	0 : sw_1970_m_laurel_panto_direction;		//Not flipped, give Panto
	return spriteset_1970_m_laurel_r;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_1970_m_laurel_frontcheck, position_in_vehid_chain){
	0: sw_1970_m_laurel_panto_direction; //We need a pantograph, guaranteed
	return sw_1970_m_laurel_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_1970_m_laurel_directioncheck, vehicle_is_reversed){
	0: sw_1970_m_laurel_frontcheck; //We are going forwards
	return sw_1970_m_laurel_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_1970_m_laurel_revcheck, vehicle_is_reversed){
	0 : sw_1970_m_laurel_lencheck;
	return sw_1970_m_laurel_lencheck_r;
}

switch(FEAT_TRAINS, SELF, sw_1970_m_laurel_attach, vehicle_type_id){
	item_1970_m_laurel	: return CB_RESULT_ATTACH_ALLOW  ;
	item_pgt_mu_coach	: return CB_RESULT_ATTACH_ALLOW  ;
	return string(STR_NO_COUPLE_MU_SAME) ;
}

/* Define the actual train */
item(FEAT_TRAINS, item_1970_m_laurel) {
    /* Define properties first, make sure to set all of them */
    property {
        reliability_decay:            20;
		refittable_cargo_classes:	  CC_PASSENGERS ;
		cargo_allow_refit:			  [PASS, TOUR] ;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
		misc_flags: bitmask(TRAIN_FLAG_MU, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_2CC);
        track_type:                   ELRL;
        ai_special_flag:              AI_FLAG_PASSENGER;
        running_cost_base:            RUNNING_COST_ELECTRIC;
		length:						  8;
		dual_headed:				  1;
        refit_cost:                   0;
        // callback flags are not set manually
        ai_engine_rank:               0;
        engine_class:                 ENGINE_CLASS_ELECTRIC;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
		effect_spawn_model_and_powered : EFFECT_SPAWN_MODEL_ELECTRIC ;
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
        name:                         string(str_name_1970_m_laurel);
        climates_available:           ALL_CLIMATES; 
        introduction_date:            date(1970, 1, 1);
        model_life:                   40; //How long should this train be buyable
        vehicle_life:                 40; //How long should this train last before renewal
        tractive_effort_coefficient:  0.127;
        weight:                       22 ton;
        power:                        400 hp;
		cargo_capacity:				  160 ;
        speed:                        80 km/h;
		
        loading_speed:                5; 
        cost_factor:                  1;
        running_cost_factor:          1;
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics {
        default				:	sw_1970_m_laurel_directioncheck;
		can_attach_wagon	:	sw_1970_m_laurel_attach ;
		create_effect		:	vfx_ohle ;
		additional_text		: 	string(STR_DESC_METRO);
    }
	livery_override (item_pgt_mu_coach){
		default                     : sw_1970_m_laurel_revcheck ;
		cargo_capacity              : 160 ;
		weight                      : 22 ;
		power                       : 400 ;
		length						: 8;
	}
}
# 1 "pgt.pnml" 2
# 1 "src/EMU - Metro/1990_m_ichi.pnml" 1
spriteset(spriteset_1990_m_ichi_fp,   "gfx/EMU - Metro/1990_m_ichi.png") {template_32(7, 39)}
spriteset(spriteset_1990_m_ichi_rp,   "gfx/EMU - Metro/1990_m_ichi.png") {template_32(7, 64)}
spriteset(spriteset_1990_m_ichi_f,    "gfx/EMU - Metro/1990_m_ichi.png") {template_32(185, 39)}
spriteset(spriteset_1990_m_ichi_r,    "gfx/EMU - Metro/1990_m_ichi.png") {template_32(185, 64)}
spriteset(spriteset_1990_m_ichi_c,    "gfx/EMU - Metro/1990_m_ichi.png") {template_32(7, 89)}
spriteset(spriteset_1990_m_ichi_cp,   "gfx/EMU - Metro/1990_m_ichi.png") {template_32(185, 89)}
spriteset(spriteset_1990_m_ichi_c_r,  "gfx/EMU - Metro/1990_m_ichi.png") {template_32_r(7, 89)}
spriteset(spriteset_1990_m_ichi_cp_r, "gfx/EMU - Metro/1990_m_ichi.png") {template_32_r(185, 89)}

// C O D E

//Backward

switch(FEAT_TRAINS, SELF, sw_1990_m_ichi_pantocheck_at_2_r, position_in_vehid_chain % 3){
	2 : spriteset_1990_m_ichi_cp_r;
	return spriteset_1990_m_ichi_c_r;
}
switch(FEAT_TRAINS, SELF, sw_1990_m_ichi_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_1990_m_ichi_cp;
	return spriteset_1990_m_ichi_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1990_m_ichi_pantocheck_at_1_r, position_in_vehid_chain % 2){
	1 : spriteset_1990_m_ichi_cp_r;
	return spriteset_1990_m_ichi_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1990_m_ichi_pantocheck_at_0_r, position_in_vehid_chain % 2){
	1 : spriteset_1990_m_ichi_c_r;
	return spriteset_1990_m_ichi_cp;
}

switch(FEAT_TRAINS, SELF, sw_1990_m_ichi_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_1990_m_ichi_cp;
	return spriteset_1990_m_ichi_c_r;
}

switch(FEAT_TRAINS, SELF, sw_1990_m_ichi_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1990_m_ichi_pantocheck_at_1_r;
	return sw_1990_m_ichi_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_1990_m_ichi_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : spriteset_1990_m_ichi_c_r;
	return sw_1990_m_ichi_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_1990_m_ichi_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1990_m_ichi_pantocheck_at_2_r;
	return sw_1990_m_ichi_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_1990_m_ichi_lencheck_r, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_1990_m_ichi_c_r;
	3 : sw_1990_m_ichi_pantocheck_at_1_r;
	4 : sw_1990_m_ichi_sidecheck_4_r;
	5 : sw_1990_m_ichi_pantocheck_at_2_r;
	6 .. 7 : sw_1990_m_ichi_sidecheck_6_r;
	return sw_1990_m_ichi_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_1990_m_ichi_pantocheck_at_2, position_in_vehid_chain % 3){
	2 : spriteset_1990_m_ichi_cp_r;
	return spriteset_1990_m_ichi_c;
}
switch(FEAT_TRAINS, SELF, sw_1990_m_ichi_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_1990_m_ichi_cp;
	return spriteset_1990_m_ichi_c;
}

switch(FEAT_TRAINS, SELF, sw_1990_m_ichi_pantocheck_at_1, position_in_vehid_chain % 2){
	1 : spriteset_1990_m_ichi_cp_r;
	return spriteset_1990_m_ichi_c;
}
switch(FEAT_TRAINS, SELF, sw_1990_m_ichi_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_1990_m_ichi_cp;
	return spriteset_1990_m_ichi_c;
}

switch(FEAT_TRAINS, SELF, sw_1990_m_ichi_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1990_m_ichi_pantocheck_at_1;
	return sw_1990_m_ichi_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_1990_m_ichi_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1990_m_ichi_pantocheck_at_1;
	return spriteset_1990_m_ichi_c;
}

switch(FEAT_TRAINS, SELF, sw_1990_m_ichi_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_1990_m_ichi_pantocheck_at_2;
	return sw_1990_m_ichi_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_1990_m_ichi_lencheck, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_1990_m_ichi_c;
	3 : sw_1990_m_ichi_pantocheck_at_1;
	4 : sw_1990_m_ichi_sidecheck_4;
	5 : sw_1990_m_ichi_pantocheck_at_2;
	6 .. 7 : sw_1990_m_ichi_sidecheck_6;
	return sw_1990_m_ichi_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_1990_m_ichi_panto_direction_r_pos, position_in_vehid_chain_from_end){
	0: spriteset_1990_m_ichi_fp; //Panto
	return spriteset_1990_m_ichi_f; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_1990_m_ichi_panto_direction_r, vehicle_is_flipped){
	0 : sw_1990_m_ichi_panto_direction_r_pos;		//Front panto
	return spriteset_1990_m_ichi_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_1990_m_ichi_panto_flipcheck_r, vehicle_is_flipped){
	0 : sw_1990_m_ichi_panto_direction_r;		//Not flipped, give Panto
	return spriteset_1990_m_ichi_rp;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_1990_m_ichi_frontcheck_r, position_in_vehid_chain){
	0: sw_1990_m_ichi_panto_direction_r; //We need a pantograph, guaranteed
	return sw_1990_m_ichi_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_1990_m_ichi_panto_direction, vehicle_is_flipped){
	0 : spriteset_1990_m_ichi_fp;		//Front panto
	return spriteset_1990_m_ichi_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_1990_m_ichi_panto_flipcheck, vehicle_is_flipped){
	0 : sw_1990_m_ichi_panto_direction;		//Not flipped, give Panto
	return spriteset_1990_m_ichi_r;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_1990_m_ichi_frontcheck, position_in_vehid_chain){
	0: sw_1990_m_ichi_panto_direction; //We need a pantograph, guaranteed
	return sw_1990_m_ichi_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_1990_m_ichi_directioncheck, vehicle_is_reversed){
	0: sw_1990_m_ichi_frontcheck; //We are going forwards
	return sw_1990_m_ichi_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_1990_m_ichi_revcheck, vehicle_is_reversed){
	0 : sw_1990_m_ichi_lencheck;
	return sw_1990_m_ichi_lencheck_r;
}

switch(FEAT_TRAINS, SELF, sw_1990_m_ichi_attach, vehicle_type_id){
	item_1990_m_ichi	: return CB_RESULT_ATTACH_ALLOW  ;
	item_pgt_mu_coach	: return CB_RESULT_ATTACH_ALLOW  ;
	return string(STR_NO_COUPLE_MU_SAME) ;
}

/* Define the actual train */
item(FEAT_TRAINS, item_1990_m_ichi) {
    /* Define properties first, make sure to set all of them */
    property {
        reliability_decay:            20;
		refittable_cargo_classes:	  CC_PASSENGERS ;
		cargo_allow_refit:			  [PASS, TOUR] ;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
		misc_flags: bitmask(TRAIN_FLAG_MU, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_2CC);
        track_type:                   ELRL;
        ai_special_flag:              AI_FLAG_PASSENGER;
        running_cost_base:            RUNNING_COST_ELECTRIC;
		length:						  8;
		dual_headed:				  1;
        refit_cost:                   0;
        // callback flags are not set manually
        ai_engine_rank:               0;
        engine_class:                 ENGINE_CLASS_ELECTRIC;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
		effect_spawn_model_and_powered : EFFECT_SPAWN_MODEL_ELECTRIC ;
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
        name:                         string(str_name_1990_m_ichi);
        climates_available:           ALL_CLIMATES; 
        introduction_date:            date(1990, 1, 1);
        model_life:                   40; //How long should this train be buyable
        vehicle_life:                 40; //How long should this train last before renewal
        tractive_effort_coefficient:  0.144;
        weight:                       25 ton;
        power:                        500 hp;
		cargo_capacity:				  170 ;
        speed:                        80 km/h;
		
        loading_speed:                5; 
        cost_factor:                  1;
        running_cost_factor:          1;
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics {
        default				:	sw_1990_m_ichi_directioncheck;
		can_attach_wagon	:	sw_1990_m_ichi_attach ;
		create_effect		:	vfx_ohle ;
		additional_text		: 	string(STR_DESC_METRO);
    }
	livery_override (item_pgt_mu_coach){
		default                     : sw_1990_m_ichi_revcheck ;
		cargo_capacity              : 170 ;
		weight                      : 25 ;
		power                       : 500 ;
		length						: 8;
	}
}
# 1 "pgt.pnml" 2
# 1 "src/EMU - Metro/2001_m_haru.pnml" 1
spriteset(spriteset_2001_m_haru_fp,   "gfx/EMU - Metro/2001_m_haru.png") {template_32(7, 39)}
spriteset(spriteset_2001_m_haru_rp,   "gfx/EMU - Metro/2001_m_haru.png") {template_32(7, 64)}
spriteset(spriteset_2001_m_haru_f,    "gfx/EMU - Metro/2001_m_haru.png") {template_32(185, 39)}
spriteset(spriteset_2001_m_haru_r,    "gfx/EMU - Metro/2001_m_haru.png") {template_32(185, 64)}
spriteset(spriteset_2001_m_haru_c,    "gfx/EMU - Metro/2001_m_haru.png") {template_32(7, 89)}
spriteset(spriteset_2001_m_haru_cp,   "gfx/EMU - Metro/2001_m_haru.png") {template_32(185, 89)}
spriteset(spriteset_2001_m_haru_c_r,  "gfx/EMU - Metro/2001_m_haru.png") {template_32_r(7, 89)}
spriteset(spriteset_2001_m_haru_cp_r, "gfx/EMU - Metro/2001_m_haru.png") {template_32_r(185, 89)}

// C O D E

//Backward

switch(FEAT_TRAINS, SELF, sw_2001_m_haru_pantocheck_at_2_r, position_in_vehid_chain % 3){
	2 : spriteset_2001_m_haru_cp_r;
	return spriteset_2001_m_haru_c_r;
}
switch(FEAT_TRAINS, SELF, sw_2001_m_haru_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_2001_m_haru_cp;
	return spriteset_2001_m_haru_c_r;
}

switch(FEAT_TRAINS, SELF, sw_2001_m_haru_pantocheck_at_1_r, position_in_vehid_chain % 2){
	1 : spriteset_2001_m_haru_cp_r;
	return spriteset_2001_m_haru_c_r;
}

switch(FEAT_TRAINS, SELF, sw_2001_m_haru_pantocheck_at_0_r, position_in_vehid_chain % 2){
	1 : spriteset_2001_m_haru_c_r;
	return spriteset_2001_m_haru_cp;
}

switch(FEAT_TRAINS, SELF, sw_2001_m_haru_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_2001_m_haru_cp;
	return spriteset_2001_m_haru_c_r;
}

switch(FEAT_TRAINS, SELF, sw_2001_m_haru_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2001_m_haru_pantocheck_at_1_r;
	return sw_2001_m_haru_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_2001_m_haru_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : spriteset_2001_m_haru_c_r;
	return sw_2001_m_haru_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_2001_m_haru_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2001_m_haru_pantocheck_at_2_r;
	return sw_2001_m_haru_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_2001_m_haru_lencheck_r, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_2001_m_haru_c_r;
	3 : sw_2001_m_haru_pantocheck_at_1_r;
	4 : sw_2001_m_haru_sidecheck_4_r;
	5 : sw_2001_m_haru_pantocheck_at_2_r;
	6 .. 7 : sw_2001_m_haru_sidecheck_6_r;
	return sw_2001_m_haru_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_2001_m_haru_pantocheck_at_2, position_in_vehid_chain % 3){
	2 : spriteset_2001_m_haru_cp_r;
	return spriteset_2001_m_haru_c;
}
switch(FEAT_TRAINS, SELF, sw_2001_m_haru_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_2001_m_haru_cp;
	return spriteset_2001_m_haru_c;
}

switch(FEAT_TRAINS, SELF, sw_2001_m_haru_pantocheck_at_1, position_in_vehid_chain % 2){
	1 : spriteset_2001_m_haru_cp_r;
	return spriteset_2001_m_haru_c;
}
switch(FEAT_TRAINS, SELF, sw_2001_m_haru_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_2001_m_haru_cp;
	return spriteset_2001_m_haru_c;
}

switch(FEAT_TRAINS, SELF, sw_2001_m_haru_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2001_m_haru_pantocheck_at_1;
	return sw_2001_m_haru_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_2001_m_haru_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2001_m_haru_pantocheck_at_1;
	return spriteset_2001_m_haru_c;
}

switch(FEAT_TRAINS, SELF, sw_2001_m_haru_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2001_m_haru_pantocheck_at_2;
	return sw_2001_m_haru_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_2001_m_haru_lencheck, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_2001_m_haru_c;
	3 : sw_2001_m_haru_pantocheck_at_1;
	4 : sw_2001_m_haru_sidecheck_4;
	5 : sw_2001_m_haru_pantocheck_at_2;
	6 .. 7 : sw_2001_m_haru_sidecheck_6;
	return sw_2001_m_haru_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_2001_m_haru_panto_direction_r_pos, position_in_vehid_chain_from_end){
	0: spriteset_2001_m_haru_fp; //Panto
	return spriteset_2001_m_haru_f; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_2001_m_haru_panto_direction_r, vehicle_is_flipped){
	0 : sw_2001_m_haru_panto_direction_r_pos;		//Front panto
	return spriteset_2001_m_haru_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_2001_m_haru_panto_flipcheck_r, vehicle_is_flipped){
	0 : sw_2001_m_haru_panto_direction_r;		//Not flipped, give Panto
	return spriteset_2001_m_haru_rp;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_2001_m_haru_frontcheck_r, position_in_vehid_chain){
	0: sw_2001_m_haru_panto_direction_r; //We need a pantograph, guaranteed
	return sw_2001_m_haru_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_2001_m_haru_panto_direction, vehicle_is_flipped){
	0 : spriteset_2001_m_haru_fp;		//Front panto
	return spriteset_2001_m_haru_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_2001_m_haru_panto_flipcheck, vehicle_is_flipped){
	0 : sw_2001_m_haru_panto_direction;		//Not flipped, give Panto
	return spriteset_2001_m_haru_r;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_2001_m_haru_frontcheck, position_in_vehid_chain){
	0: sw_2001_m_haru_panto_direction; //We need a pantograph, guaranteed
	return sw_2001_m_haru_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_2001_m_haru_directioncheck, vehicle_is_reversed){
	0: sw_2001_m_haru_frontcheck; //We are going forwards
	return sw_2001_m_haru_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_2001_m_haru_revcheck, vehicle_is_reversed){
	0 : sw_2001_m_haru_lencheck;
	return sw_2001_m_haru_lencheck_r;
}

switch(FEAT_TRAINS, SELF, sw_2001_m_haru_attach, vehicle_type_id){
	item_2001_m_haru	: return CB_RESULT_ATTACH_ALLOW  ;
	item_pgt_mu_coach	: return CB_RESULT_ATTACH_ALLOW  ;
	return string(STR_NO_COUPLE_MU_SAME) ;
}

/* Define the actual train */
item(FEAT_TRAINS, item_2001_m_haru) {
    /* Define properties first, make sure to set all of them */
    property {
        reliability_decay:            20;
		refittable_cargo_classes:	  CC_PASSENGERS ;
		cargo_allow_refit:			  [PASS, TOUR] ;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
		misc_flags: bitmask(TRAIN_FLAG_MU, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_2CC);
        track_type:                   ELRL;
        ai_special_flag:              AI_FLAG_PASSENGER;
        running_cost_base:            RUNNING_COST_ELECTRIC;
		length:						  8;
		dual_headed:				  1;
        refit_cost:                   0;
        // callback flags are not set manually
        ai_engine_rank:               0;
        engine_class:                 ENGINE_CLASS_ELECTRIC;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
		effect_spawn_model_and_powered : EFFECT_SPAWN_MODEL_ELECTRIC ;
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
        name:                         string(str_name_2001_m_haru);
        climates_available:           ALL_CLIMATES; 
        introduction_date:            date(2001, 1, 1);
        model_life:                   40; //How long should this train be buyable
        vehicle_life:                 40; //How long should this train last before renewal
        tractive_effort_coefficient:  0.172;
        weight:                       25 ton;
        power:                        600 hp;
		cargo_capacity:				  180 ;
        speed:                        80 km/h;
		
        loading_speed:                5; 
        cost_factor:                  1;
        running_cost_factor:          1;
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics {
        default				:	sw_2001_m_haru_directioncheck;
		can_attach_wagon	:	sw_2001_m_haru_attach ;
		create_effect		:	vfx_ohle ;
		additional_text		: 	string(STR_DESC_METRO);
    }
	livery_override (item_pgt_mu_coach){
		default                     : sw_2001_m_haru_revcheck ;
		cargo_capacity              : 180 ;
		weight                      : 25 ;
		power                       : 600 ;
		length						: 8;
	}
}
# 1 "pgt.pnml" 2
# 1 "src/EMU - Metro/2040_m_nishi.pnml" 1
spriteset(spriteset_2040_m_nishi_fp,   "gfx/EMU - Metro/2040_m_nishi.png") {template_32(7, 39)}
spriteset(spriteset_2040_m_nishi_rp,   "gfx/EMU - Metro/2040_m_nishi.png") {template_32(7, 64)}
spriteset(spriteset_2040_m_nishi_f,    "gfx/EMU - Metro/2040_m_nishi.png") {template_32(185, 39)}
spriteset(spriteset_2040_m_nishi_r,    "gfx/EMU - Metro/2040_m_nishi.png") {template_32(185, 64)}
spriteset(spriteset_2040_m_nishi_c,    "gfx/EMU - Metro/2040_m_nishi.png") {template_32(7, 89)}
spriteset(spriteset_2040_m_nishi_cp,   "gfx/EMU - Metro/2040_m_nishi.png") {template_32(185, 89)}
spriteset(spriteset_2040_m_nishi_c_r,  "gfx/EMU - Metro/2040_m_nishi.png") {template_32_r(7, 89)}
spriteset(spriteset_2040_m_nishi_cp_r, "gfx/EMU - Metro/2040_m_nishi.png") {template_32_r(185, 89)}

// C O D E

//Backward

switch(FEAT_TRAINS, SELF, sw_2040_m_nishi_pantocheck_at_2_r, position_in_vehid_chain % 3){
	2 : spriteset_2040_m_nishi_cp_r;
	return spriteset_2040_m_nishi_c_r;
}
switch(FEAT_TRAINS, SELF, sw_2040_m_nishi_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_2040_m_nishi_cp;
	return spriteset_2040_m_nishi_c_r;
}

switch(FEAT_TRAINS, SELF, sw_2040_m_nishi_pantocheck_at_1_r, position_in_vehid_chain % 2){
	1 : spriteset_2040_m_nishi_cp_r;
	return spriteset_2040_m_nishi_c_r;
}

switch(FEAT_TRAINS, SELF, sw_2040_m_nishi_pantocheck_at_0_r, position_in_vehid_chain % 2){
	1 : spriteset_2040_m_nishi_c_r;
	return spriteset_2040_m_nishi_cp;
}

switch(FEAT_TRAINS, SELF, sw_2040_m_nishi_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_2040_m_nishi_cp;
	return spriteset_2040_m_nishi_c_r;
}

switch(FEAT_TRAINS, SELF, sw_2040_m_nishi_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2040_m_nishi_pantocheck_at_1_r;
	return sw_2040_m_nishi_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_2040_m_nishi_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : spriteset_2040_m_nishi_c_r;
	return sw_2040_m_nishi_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_2040_m_nishi_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2040_m_nishi_pantocheck_at_2_r;
	return sw_2040_m_nishi_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_2040_m_nishi_lencheck_r, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_2040_m_nishi_c_r;
	3 : sw_2040_m_nishi_pantocheck_at_1_r;
	4 : sw_2040_m_nishi_sidecheck_4_r;
	5 : sw_2040_m_nishi_pantocheck_at_2_r;
	6 .. 7 : sw_2040_m_nishi_sidecheck_6_r;
	return sw_2040_m_nishi_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_2040_m_nishi_pantocheck_at_2, position_in_vehid_chain % 3){
	2 : spriteset_2040_m_nishi_cp_r;
	return spriteset_2040_m_nishi_c;
}
switch(FEAT_TRAINS, SELF, sw_2040_m_nishi_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_2040_m_nishi_cp;
	return spriteset_2040_m_nishi_c;
}

switch(FEAT_TRAINS, SELF, sw_2040_m_nishi_pantocheck_at_1, position_in_vehid_chain % 2){
	1 : spriteset_2040_m_nishi_cp_r;
	return spriteset_2040_m_nishi_c;
}
switch(FEAT_TRAINS, SELF, sw_2040_m_nishi_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_2040_m_nishi_cp;
	return spriteset_2040_m_nishi_c;
}

switch(FEAT_TRAINS, SELF, sw_2040_m_nishi_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2040_m_nishi_pantocheck_at_1;
	return sw_2040_m_nishi_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_2040_m_nishi_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2040_m_nishi_pantocheck_at_1;
	return spriteset_2040_m_nishi_c;
}

switch(FEAT_TRAINS, SELF, sw_2040_m_nishi_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2040_m_nishi_pantocheck_at_2;
	return sw_2040_m_nishi_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_2040_m_nishi_lencheck, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_2040_m_nishi_c;
	3 : sw_2040_m_nishi_pantocheck_at_1;
	4 : sw_2040_m_nishi_sidecheck_4;
	5 : sw_2040_m_nishi_pantocheck_at_2;
	6 .. 7 : sw_2040_m_nishi_sidecheck_6;
	return sw_2040_m_nishi_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_2040_m_nishi_panto_direction_r_pos, position_in_vehid_chain_from_end){
	0: spriteset_2040_m_nishi_fp; //Panto
	return spriteset_2040_m_nishi_f; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_2040_m_nishi_panto_direction_r, vehicle_is_flipped){
	0 : sw_2040_m_nishi_panto_direction_r_pos;		//Front panto
	return spriteset_2040_m_nishi_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_2040_m_nishi_panto_flipcheck_r, vehicle_is_flipped){
	0 : sw_2040_m_nishi_panto_direction_r;		//Not flipped, give Panto
	return spriteset_2040_m_nishi_rp;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_2040_m_nishi_frontcheck_r, position_in_vehid_chain){
	0: sw_2040_m_nishi_panto_direction_r; //We need a pantograph, guaranteed
	return sw_2040_m_nishi_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_2040_m_nishi_panto_direction, vehicle_is_flipped){
	0 : spriteset_2040_m_nishi_fp;		//Front panto
	return spriteset_2040_m_nishi_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_2040_m_nishi_panto_flipcheck, vehicle_is_flipped){
	0 : sw_2040_m_nishi_panto_direction;		//Not flipped, give Panto
	return spriteset_2040_m_nishi_r;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_2040_m_nishi_frontcheck, position_in_vehid_chain){
	0: sw_2040_m_nishi_panto_direction; //We need a pantograph, guaranteed
	return sw_2040_m_nishi_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_2040_m_nishi_directioncheck, vehicle_is_reversed){
	0: sw_2040_m_nishi_frontcheck; //We are going forwards
	return sw_2040_m_nishi_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_2040_m_nishi_revcheck, vehicle_is_reversed){
	0 : sw_2040_m_nishi_lencheck;
	return sw_2040_m_nishi_lencheck_r;
}

switch(FEAT_TRAINS, SELF, sw_2040_m_nishi_attach, vehicle_type_id){
	item_2040_m_nishi	: return CB_RESULT_ATTACH_ALLOW  ;
	item_pgt_mu_coach	: return CB_RESULT_ATTACH_ALLOW  ;
	return string(STR_NO_COUPLE_MU_SAME) ;
}

/* Define the actual train */
item(FEAT_TRAINS, item_2040_m_nishi) {
    /* Define properties first, make sure to set all of them */
    property {
        reliability_decay:            20;
		refittable_cargo_classes:	  CC_PASSENGERS ;
		cargo_allow_refit:			  [PASS, TOUR] ;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
		misc_flags: bitmask(TRAIN_FLAG_MU, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_2CC);
        track_type:                   ELRL;
        ai_special_flag:              AI_FLAG_PASSENGER;
        running_cost_base:            RUNNING_COST_ELECTRIC;
		length:						  8;
		dual_headed:				  1;
        refit_cost:                   0;
        // callback flags are not set manually
        ai_engine_rank:               0;
        engine_class:                 ENGINE_CLASS_ELECTRIC;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
		effect_spawn_model_and_powered : EFFECT_SPAWN_MODEL_ELECTRIC ;
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
        name:                         string(str_name_2040_m_nishi);
        climates_available:           ALL_CLIMATES; 
        introduction_date:            date(2040, 1, 1);
        model_life:                   40; //How long should this train be buyable
        vehicle_life:                 40; //How long should this train last before renewal
        tractive_effort_coefficient:  0.172;
        weight:                       25 ton;
        power:                        600 hp;
		cargo_capacity:				  180 ;
        speed:                        115 km/h;
		
        loading_speed:                5; 
        cost_factor:                  1;
        running_cost_factor:          1;
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics {
        default				:	sw_2040_m_nishi_directioncheck;
		can_attach_wagon	:	sw_2040_m_nishi_attach ;
		create_effect		:	vfx_ohle ;
		additional_text		: 	string(STR_DESC_METRO);
    }
	livery_override (item_pgt_mu_coach){
		default                     : sw_2040_m_nishi_revcheck ;
		cargo_capacity              : 180 ;
		weight                      : 25 ;
		power                       : 600 ;
		length						: 8;
	}
}
# 1 "pgt.pnml" 2
# 1 "src/EMU - Metro/2060_m_shaka.pnml" 1
spriteset(spriteset_2060_m_shaka_fp,   "gfx/EMU - Metro/2060_m_shaka.png") {template_32(7, 39)}
spriteset(spriteset_2060_m_shaka_rp,   "gfx/EMU - Metro/2060_m_shaka.png") {template_32(7, 64)}
spriteset(spriteset_2060_m_shaka_f,    "gfx/EMU - Metro/2060_m_shaka.png") {template_32(185, 39)}
spriteset(spriteset_2060_m_shaka_r,    "gfx/EMU - Metro/2060_m_shaka.png") {template_32(185, 64)}
spriteset(spriteset_2060_m_shaka_c,    "gfx/EMU - Metro/2060_m_shaka.png") {template_32(7, 89)}
spriteset(spriteset_2060_m_shaka_cp,   "gfx/EMU - Metro/2060_m_shaka.png") {template_32(185, 89)}
spriteset(spriteset_2060_m_shaka_c_r,  "gfx/EMU - Metro/2060_m_shaka.png") {template_32_r(7, 89)}
spriteset(spriteset_2060_m_shaka_cp_r, "gfx/EMU - Metro/2060_m_shaka.png") {template_32_r(185, 89)}

// C O D E

//Backward

switch(FEAT_TRAINS, SELF, sw_2060_m_shaka_pantocheck_at_2_r, position_in_vehid_chain % 3){
	2 : spriteset_2060_m_shaka_cp_r;
	return spriteset_2060_m_shaka_c_r;
}
switch(FEAT_TRAINS, SELF, sw_2060_m_shaka_pantocheck_at_2r_r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_2060_m_shaka_cp;
	return spriteset_2060_m_shaka_c_r;
}

switch(FEAT_TRAINS, SELF, sw_2060_m_shaka_pantocheck_at_1_r, position_in_vehid_chain % 2){
	1 : spriteset_2060_m_shaka_cp_r;
	return spriteset_2060_m_shaka_c_r;
}

switch(FEAT_TRAINS, SELF, sw_2060_m_shaka_pantocheck_at_0_r, position_in_vehid_chain % 2){
	1 : spriteset_2060_m_shaka_c_r;
	return spriteset_2060_m_shaka_cp;
}

switch(FEAT_TRAINS, SELF, sw_2060_m_shaka_pantocheck_at_1r_r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_2060_m_shaka_cp;
	return spriteset_2060_m_shaka_c_r;
}

switch(FEAT_TRAINS, SELF, sw_2060_m_shaka_sidecheck_other_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2060_m_shaka_pantocheck_at_1_r;
	return sw_2060_m_shaka_pantocheck_at_1r_r;
}

switch(FEAT_TRAINS, SELF, sw_2060_m_shaka_sidecheck_4_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : spriteset_2060_m_shaka_c_r;
	return sw_2060_m_shaka_pantocheck_at_0_r;
}

switch(FEAT_TRAINS, SELF, sw_2060_m_shaka_sidecheck_6_r, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2060_m_shaka_pantocheck_at_2_r;
	return sw_2060_m_shaka_pantocheck_at_2r_r;
}

switch(FEAT_TRAINS, SELF, sw_2060_m_shaka_lencheck_r, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_2060_m_shaka_c_r;
	3 : sw_2060_m_shaka_pantocheck_at_1_r;
	4 : sw_2060_m_shaka_sidecheck_4_r;
	5 : sw_2060_m_shaka_pantocheck_at_2_r;
	6 .. 7 : sw_2060_m_shaka_sidecheck_6_r;
	return sw_2060_m_shaka_sidecheck_other_r;
}

//Forward

switch(FEAT_TRAINS, SELF, sw_2060_m_shaka_pantocheck_at_2, position_in_vehid_chain % 3){
	2 : spriteset_2060_m_shaka_cp_r;
	return spriteset_2060_m_shaka_c;
}
switch(FEAT_TRAINS, SELF, sw_2060_m_shaka_pantocheck_at_2r, position_in_vehid_chain_from_end % 3){
	2 : spriteset_2060_m_shaka_cp;
	return spriteset_2060_m_shaka_c;
}

switch(FEAT_TRAINS, SELF, sw_2060_m_shaka_pantocheck_at_1, position_in_vehid_chain % 2){
	1 : spriteset_2060_m_shaka_cp_r;
	return spriteset_2060_m_shaka_c;
}
switch(FEAT_TRAINS, SELF, sw_2060_m_shaka_pantocheck_at_1r, position_in_vehid_chain_from_end % 2){
	1 : spriteset_2060_m_shaka_cp;
	return spriteset_2060_m_shaka_c;
}

switch(FEAT_TRAINS, SELF, sw_2060_m_shaka_sidecheck_other, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2060_m_shaka_pantocheck_at_1;
	return sw_2060_m_shaka_pantocheck_at_1r;
}

switch(FEAT_TRAINS, SELF, sw_2060_m_shaka_sidecheck_4, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2060_m_shaka_pantocheck_at_1;
	return spriteset_2060_m_shaka_c;
}

switch(FEAT_TRAINS, SELF, sw_2060_m_shaka_sidecheck_6, num_vehs_in_vehid_chain/2 > position_in_vehid_chain ) {
	1 : sw_2060_m_shaka_pantocheck_at_2;
	return sw_2060_m_shaka_pantocheck_at_2r;
}

switch(FEAT_TRAINS, SELF, sw_2060_m_shaka_lencheck, num_vehs_in_vehid_chain ) {
	0 .. 2 : spriteset_2060_m_shaka_c;
	3 : sw_2060_m_shaka_pantocheck_at_1;
	4 : sw_2060_m_shaka_sidecheck_4;
	5 : sw_2060_m_shaka_pantocheck_at_2;
	6 .. 7 : sw_2060_m_shaka_sidecheck_6;
	return sw_2060_m_shaka_sidecheck_other;
}

switch(FEAT_TRAINS, SELF, sw_2060_m_shaka_panto_direction_r_pos, position_in_vehid_chain_from_end){
	0: spriteset_2060_m_shaka_fp; //Panto
	return spriteset_2060_m_shaka_f; //No Panto
}

switch(FEAT_TRAINS, SELF, sw_2060_m_shaka_panto_direction_r, vehicle_is_flipped){
	0 : sw_2060_m_shaka_panto_direction_r_pos;		//Front panto
	return spriteset_2060_m_shaka_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_2060_m_shaka_panto_flipcheck_r, vehicle_is_flipped){
	0 : sw_2060_m_shaka_panto_direction_r;		//Not flipped, give Panto
	return spriteset_2060_m_shaka_rp;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_2060_m_shaka_frontcheck_r, position_in_vehid_chain){
	0: sw_2060_m_shaka_panto_direction_r; //We need a pantograph, guaranteed
	return sw_2060_m_shaka_panto_flipcheck_r; //More Checks
}

switch(FEAT_TRAINS, SELF, sw_2060_m_shaka_panto_direction, vehicle_is_flipped){
	0 : spriteset_2060_m_shaka_fp;		//Front panto
	return spriteset_2060_m_shaka_rp;    //Rear panto
}

switch(FEAT_TRAINS, SELF, sw_2060_m_shaka_panto_flipcheck, vehicle_is_flipped){
	0 : sw_2060_m_shaka_panto_direction;		//Not flipped, give Panto
	return spriteset_2060_m_shaka_r;    //Flipped, no panto
}

switch(FEAT_TRAINS, SELF, sw_2060_m_shaka_frontcheck, position_in_vehid_chain){
	0: sw_2060_m_shaka_panto_direction; //We need a pantograph, guaranteed
	return sw_2060_m_shaka_panto_flipcheck; //More Checks
}

switch(FEAT_TRAINS, PARENT, sw_2060_m_shaka_directioncheck, vehicle_is_reversed){
	0: sw_2060_m_shaka_frontcheck; //We are going forwards
	return sw_2060_m_shaka_frontcheck_r; //We are going backwards
}

switch(FEAT_TRAINS, PARENT, sw_2060_m_shaka_revcheck, vehicle_is_reversed){
	0 : sw_2060_m_shaka_lencheck;
	return sw_2060_m_shaka_lencheck_r;
}

switch(FEAT_TRAINS, SELF, sw_2060_m_shaka_attach, vehicle_type_id){
	item_2060_m_shaka	: return CB_RESULT_ATTACH_ALLOW  ;
	item_pgt_mu_coach	: return CB_RESULT_ATTACH_ALLOW  ;
	return string(STR_NO_COUPLE_MU_SAME) ;
}

/* Define the actual train */
item(FEAT_TRAINS, item_2060_m_shaka) {
    /* Define properties first, make sure to set all of them */
    property {
        reliability_decay:            20;
		refittable_cargo_classes:	  CC_PASSENGERS ;
		cargo_allow_refit:			  [PASS, TOUR] ;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
		misc_flags: bitmask(TRAIN_FLAG_MU, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_2CC);
        track_type:                   ELRL;
        ai_special_flag:              AI_FLAG_PASSENGER;
        running_cost_base:            RUNNING_COST_ELECTRIC;
		length:						  8;
		dual_headed:				  1;
        refit_cost:                   0;
        // callback flags are not set manually
        ai_engine_rank:               0;
        engine_class:                 ENGINE_CLASS_ELECTRIC;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
		effect_spawn_model_and_powered : EFFECT_SPAWN_MODEL_ELECTRIC ;
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
        name:                         string(str_name_2060_m_shaka);
        climates_available:           ALL_CLIMATES; 
        introduction_date:            date(2060, 1, 1);
        model_life:                   40; //How long should this train be buyable
        vehicle_life:                 40; //How long should this train last before renewal
        tractive_effort_coefficient:  0.265;
        weight:                       20 ton;
        power:                        750 hp;
		cargo_capacity:				  220 ;
        speed:                        115 km/h;
		
        loading_speed:                5; 
        cost_factor:                  1;
        running_cost_factor:          1;
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics {
        default				:	sw_2060_m_shaka_directioncheck;
		can_attach_wagon	:	sw_2060_m_shaka_attach ;
		create_effect		:	vfx_ohle ;
		additional_text		: 	string(STR_DESC_METRO);
    }
	livery_override (item_pgt_mu_coach){
		default                     : sw_2060_m_shaka_revcheck ;
		cargo_capacity              : 220 ;
		weight                      : 20 ;
		power                       : 750 ;
		length						: 8;
	}
}
# 1 "pgt.pnml" 2

# 1 "src/NEMU - Intercity/1937_ic_frosty.pnml" 1
spriteset(spriteset_1937_ic_frosty_f,   "gfx/NEMU - Intercity/1937_ic_frosty.png") {template_32(7, 39)}
spriteset(spriteset_1937_ic_frosty_r,   "gfx/NEMU - Intercity/1937_ic_frosty.png") {template_32_r(7, 64)}
spriteset(spriteset_1937_ic_frosty_c,    "gfx/NEMU - Intercity/1937_ic_frosty.png") {template_32(7, 89)}
spriteset(spriteset_1937_ic_frosty_s,    "gfx/NEMU - Intercity/1937_ic_frosty.png") {template_32(185, 39)}

// C O D E


switch(FEAT_TRAINS, SELF, sw_1937_ic_frosty_rearcheck, position_in_vehid_chain_from_end){
	0 : spriteset_1937_ic_frosty_r;
	return spriteset_1937_ic_frosty_c;
}

switch(FEAT_TRAINS, SELF, sw_1937_ic_frosty_frontcheck, position_in_vehid_chain){
	0 : spriteset_1937_ic_frosty_f;
	return sw_1937_ic_frosty_rearcheck;
}

switch(FEAT_TRAINS, SELF, sw_1937_ic_frosty_nextcheck2, position_in_consist_from_end){
	0 : spriteset_1937_ic_frosty_s;
	return spriteset_1937_ic_frosty_f;
}

switch(FEAT_TRAINS, SELF, sw_1937_ic_frosty_nextcheck, position_in_vehid_chain_from_end){
	0 : sw_1937_ic_frosty_nextcheck2;
	return spriteset_1937_ic_frosty_s;
}

switch(FEAT_TRAINS, PARENT, sw_1937_ic_frosty_lencheck, num_vehs_in_consist){
	1 : spriteset_1937_ic_frosty_s;
	return sw_1937_ic_frosty_nextcheck;
}

switch(FEAT_TRAINS, SELF, sw_1937_ic_frosty_attach, vehicle_type_id){
	item_1937_ic_frosty	: return CB_RESULT_ATTACH_ALLOW  ;
	item_pgt_mu_coach	: return CB_RESULT_ATTACH_ALLOW  ;
	return string(STR_NO_COUPLE_MU_SAME) ;
}

/* Define the actual train */
item(FEAT_TRAINS, item_1937_ic_frosty) {
    /* Define properties first, make sure to set all of them */
    property {
        reliability_decay:            20;
		refittable_cargo_classes:	  CC_PASSENGERS ;
		cargo_allow_refit:			  [PASS, TOUR] ;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
		misc_flags: bitmask(TRAIN_FLAG_MU, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_2CC);
        track_type:                   RAIL;
        ai_special_flag:              AI_FLAG_PASSENGER;
        running_cost_base:            RUNNING_COST_DIESEL;
		length:						  8;
		
        refit_cost:                   0;
        // callback flags are not set manually
        ai_engine_rank:               0;
        engine_class:                 ENGINE_CLASS_DIESEL;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
		effect_spawn_model_and_powered : EFFECT_SPAWN_MODEL_DIESEL ;
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
        name:                         string(str_name_1937_ic_frosty);
        climates_available:           ALL_CLIMATES; 
        introduction_date:            date(1937, 1, 1);
        model_life:                   40; //How long should this train be buyable
        vehicle_life:                 40; //How long should this train last before renewal
        tractive_effort_coefficient:  0.014;
        weight:                       35 ton;
        power:                        150 hp;
		cargo_capacity:				  60 ;
        speed:                        115 km/h;
		
		cost_factor:                    1;
		running_cost_factor:            1;
        loading_speed:                	5; 
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics {
        default				:	sw_1937_ic_frosty_lencheck;
		can_attach_wagon	:	sw_1937_ic_frosty_attach ;
		create_effect		:	vfx_diesel_default ;
		additional_text		: 	string(STR_DESC_INTERCITY);
    }
	livery_override (item_pgt_mu_coach){
		default                     : sw_1937_ic_frosty_rearcheck ;
		cargo_capacity              : 60 ;
		weight                      : 35 ;
		power                       : 150 ;
		length						: 8;
	}
}
# 1 "pgt.pnml" 2
# 1 "src/NEMU - Intercity/1951_ic_bunyip.pnml" 1
spriteset(spriteset_1951_ic_bunyip_f,   "gfx/NEMU - Intercity/1951_ic_bunyip.png") {template_32(7, 39)}
spriteset(spriteset_1951_ic_bunyip_r,   "gfx/NEMU - Intercity/1951_ic_bunyip.png") {template_32_r(7, 64)}
spriteset(spriteset_1951_ic_bunyip_c,    "gfx/NEMU - Intercity/1951_ic_bunyip.png") {template_32(7, 89)}
spriteset(spriteset_1951_ic_bunyip_s,    "gfx/NEMU - Intercity/1951_ic_bunyip.png") {template_32(185, 39)}

// C O D E


switch(FEAT_TRAINS, SELF, sw_1951_ic_bunyip_rearcheck, position_in_vehid_chain_from_end){
	0 : spriteset_1951_ic_bunyip_r;
	return spriteset_1951_ic_bunyip_c;
}

switch(FEAT_TRAINS, SELF, sw_1951_ic_bunyip_frontcheck, position_in_vehid_chain){
	0 : spriteset_1951_ic_bunyip_f;
	return sw_1951_ic_bunyip_rearcheck;
}

switch(FEAT_TRAINS, SELF, sw_1951_ic_bunyip_nextcheck2, position_in_consist_from_end){
	0 : spriteset_1951_ic_bunyip_s;
	return spriteset_1951_ic_bunyip_f;
}

switch(FEAT_TRAINS, SELF, sw_1951_ic_bunyip_nextcheck, position_in_vehid_chain_from_end){
	0 : sw_1951_ic_bunyip_nextcheck2;
	return spriteset_1951_ic_bunyip_s;
}

switch(FEAT_TRAINS, PARENT, sw_1951_ic_bunyip_lencheck, num_vehs_in_consist){
	1 : spriteset_1951_ic_bunyip_s;
	return sw_1951_ic_bunyip_nextcheck;
}

switch(FEAT_TRAINS, SELF, sw_1951_ic_bunyip_attach, vehicle_type_id){
	item_1951_ic_bunyip	: return CB_RESULT_ATTACH_ALLOW  ;
	item_pgt_mu_coach	: return CB_RESULT_ATTACH_ALLOW  ;
	return string(STR_NO_COUPLE_MU_SAME) ;
}

/* Define the actual train */
item(FEAT_TRAINS, item_1951_ic_bunyip) {
    /* Define properties first, make sure to set all of them */
    property {
        reliability_decay:            20;
		refittable_cargo_classes:	  CC_PASSENGERS ;
		cargo_allow_refit:			  [PASS, TOUR] ;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
		misc_flags: bitmask(TRAIN_FLAG_MU, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_2CC);
        track_type:                   RAIL;
        ai_special_flag:              AI_FLAG_PASSENGER;
        running_cost_base:            RUNNING_COST_DIESEL;
		length:						  8;
		
        refit_cost:                   0;
        // callback flags are not set manually
        ai_engine_rank:               0;
        engine_class:                 ENGINE_CLASS_DIESEL;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
		effect_spawn_model_and_powered : EFFECT_SPAWN_MODEL_DIESEL ;
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
        name:                         string(str_name_1951_ic_bunyip);
        climates_available:           ALL_CLIMATES; 
        introduction_date:            date(1951, 1, 1);
        model_life:                   40; //How long should this train be buyable
        vehicle_life:                 40; //How long should this train last before renewal
        tractive_effort_coefficient:  0.042;
        weight:                       40 ton;
        power:                        500 hp;
		cargo_capacity:				  60 ;
        speed:                        115 km/h;
		
		cost_factor:                    1;
		running_cost_factor:            1;
        loading_speed:                	5; 
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics {
        default				:	sw_1951_ic_bunyip_lencheck;
		can_attach_wagon	:	sw_1951_ic_bunyip_attach ;
		create_effect		:	vfx_diesel_default ;
		additional_text		: 	string(STR_DESC_INTERCITY);
    }
	livery_override (item_pgt_mu_coach){
		default                     : sw_1951_ic_bunyip_rearcheck ;
		cargo_capacity              : 60 ;
		weight                      : 40 ;
		power                       : 500 ;
		length						: 8;
	}
}
# 1 "pgt.pnml" 2
# 1 "src/NEMU - Intercity/1970_ic_yowie.pnml" 1
spriteset(spriteset_1970_ic_yowie_f,   "gfx/NEMU - Intercity/1970_ic_yowie.png") {template_32(7, 39)}
spriteset(spriteset_1970_ic_yowie_r,   "gfx/NEMU - Intercity/1970_ic_yowie.png") {template_32_r(7, 64)}
spriteset(spriteset_1970_ic_yowie_c,    "gfx/NEMU - Intercity/1970_ic_yowie.png") {template_32(7, 89)}
spriteset(spriteset_1970_ic_yowie_s,    "gfx/NEMU - Intercity/1970_ic_yowie.png") {template_32(185, 39)}

// C O D E


switch(FEAT_TRAINS, SELF, sw_1970_ic_yowie_rearcheck, position_in_vehid_chain_from_end){
	0 : spriteset_1970_ic_yowie_r;
	return spriteset_1970_ic_yowie_c;
}

switch(FEAT_TRAINS, SELF, sw_1970_ic_yowie_frontcheck, position_in_vehid_chain){
	0 : spriteset_1970_ic_yowie_f;
	return sw_1970_ic_yowie_rearcheck;
}

switch(FEAT_TRAINS, SELF, sw_1970_ic_yowie_nextcheck2, position_in_consist_from_end){
	0 : spriteset_1970_ic_yowie_s;
	return spriteset_1970_ic_yowie_f;
}

switch(FEAT_TRAINS, SELF, sw_1970_ic_yowie_nextcheck, position_in_vehid_chain_from_end){
	0 : sw_1970_ic_yowie_nextcheck2;
	return spriteset_1970_ic_yowie_s;
}

switch(FEAT_TRAINS, PARENT, sw_1970_ic_yowie_lencheck, num_vehs_in_consist){
	1 : spriteset_1970_ic_yowie_s;
	return sw_1970_ic_yowie_nextcheck;
}

switch(FEAT_TRAINS, SELF, sw_1970_ic_yowie_attach, vehicle_type_id){
	item_1970_ic_yowie	: return CB_RESULT_ATTACH_ALLOW  ;
	item_pgt_mu_coach	: return CB_RESULT_ATTACH_ALLOW  ;
	return string(STR_NO_COUPLE_MU_SAME) ;
}

/* Define the actual train */
item(FEAT_TRAINS, item_1970_ic_yowie) {
    /* Define properties first, make sure to set all of them */
    property {
        reliability_decay:            20;
		refittable_cargo_classes:	  CC_PASSENGERS ;
		cargo_allow_refit:			  [PASS, TOUR] ;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
		misc_flags: bitmask(TRAIN_FLAG_MU, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_2CC);
        track_type:                   RAIL;
        ai_special_flag:              AI_FLAG_PASSENGER;
        running_cost_base:            RUNNING_COST_DIESEL;
		length:						  8;
		
        refit_cost:                   0;
        // callback flags are not set manually
        ai_engine_rank:               0;
        engine_class:                 ENGINE_CLASS_DIESEL;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
		effect_spawn_model_and_powered : EFFECT_SPAWN_MODEL_DIESEL ;
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
        name:                         string(str_name_1970_ic_yowie);
        climates_available:           ALL_CLIMATES; 
        introduction_date:            date(1970, 1, 1);
        model_life:                   40; //How long should this train be buyable
        vehicle_life:                 40; //How long should this train last before renewal
        tractive_effort_coefficient:  0.046;
        weight:                       45 ton;
        power:                        600 hp;
		cargo_capacity:				  70 ;
        speed:                        130 km/h;
		
		cost_factor:                    1;
		running_cost_factor:            1;
        loading_speed:                	5; 
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics {
        default				:	sw_1970_ic_yowie_lencheck;
		can_attach_wagon	:	sw_1970_ic_yowie_attach ;
		create_effect		:	vfx_diesel_default ;
		additional_text		: 	string(STR_DESC_INTERCITY);
    }
	livery_override (item_pgt_mu_coach){
		default                     : sw_1970_ic_yowie_rearcheck ;
		cargo_capacity              : 70 ;
		weight                      : 45 ;
		power                       : 600 ;
		length						: 8;
	}
}
# 1 "pgt.pnml" 2
# 1 "src/NEMU - Intercity/1993_ic_discoverer.pnml" 1
spriteset(spriteset_1993_ic_discoverer_f,   "gfx/NEMU - Intercity/1993_ic_discoverer.png") {template_32(7, 39)}
spriteset(spriteset_1993_ic_discoverer_r,   "gfx/NEMU - Intercity/1993_ic_discoverer.png") {template_32_r(7, 64)}
spriteset(spriteset_1993_ic_discoverer_c,    "gfx/NEMU - Intercity/1993_ic_discoverer.png") {template_32(7, 89)}
spriteset(spriteset_1993_ic_discoverer_s,    "gfx/NEMU - Intercity/1993_ic_discoverer.png") {template_32(185, 39)}

// C O D E


switch(FEAT_TRAINS, SELF, sw_1993_ic_discoverer_rearcheck, position_in_vehid_chain_from_end){
	0 : spriteset_1993_ic_discoverer_r;
	return spriteset_1993_ic_discoverer_c;
}

switch(FEAT_TRAINS, SELF, sw_1993_ic_discoverer_frontcheck, position_in_vehid_chain){
	0 : spriteset_1993_ic_discoverer_f;
	return sw_1993_ic_discoverer_rearcheck;
}

switch(FEAT_TRAINS, SELF, sw_1993_ic_discoverer_nextcheck2, position_in_consist_from_end){
	0 : spriteset_1993_ic_discoverer_s;
	return spriteset_1993_ic_discoverer_f;
}

switch(FEAT_TRAINS, SELF, sw_1993_ic_discoverer_nextcheck, position_in_vehid_chain_from_end){
	0 : sw_1993_ic_discoverer_nextcheck2;
	return spriteset_1993_ic_discoverer_s;
}

switch(FEAT_TRAINS, PARENT, sw_1993_ic_discoverer_lencheck, num_vehs_in_consist){
	1 : spriteset_1993_ic_discoverer_s;
	return sw_1993_ic_discoverer_nextcheck;
}

switch(FEAT_TRAINS, SELF, sw_1993_ic_discoverer_attach, vehicle_type_id){
	item_1993_ic_discoverer	: return CB_RESULT_ATTACH_ALLOW  ;
	item_pgt_mu_coach	: return CB_RESULT_ATTACH_ALLOW  ;
	return string(STR_NO_COUPLE_MU_SAME) ;
}

/* Define the actual train */
item(FEAT_TRAINS, item_1993_ic_discoverer) {
    /* Define properties first, make sure to set all of them */
    property {
        reliability_decay:            20;
		refittable_cargo_classes:	  CC_PASSENGERS ;
		cargo_allow_refit:			  [PASS, TOUR] ;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
		misc_flags: bitmask(TRAIN_FLAG_MU, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_2CC);
        track_type:                   RAIL;
        ai_special_flag:              AI_FLAG_PASSENGER;
        running_cost_base:            RUNNING_COST_DIESEL;
		length:						  8;
		
        refit_cost:                   0;
        // callback flags are not set manually
        ai_engine_rank:               0;
        engine_class:                 ENGINE_CLASS_DIESEL;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
		effect_spawn_model_and_powered : EFFECT_SPAWN_MODEL_DIESEL ;
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
        name:                         string(str_name_1993_ic_discoverer);
        climates_available:           ALL_CLIMATES; 
        introduction_date:            date(1993, 1, 1);
        model_life:                   40; //How long should this train be buyable
        vehicle_life:                 40; //How long should this train last before renewal
        tractive_effort_coefficient:  0.043;
        weight:                       57 ton;
        power:                        700 hp;
		cargo_capacity:				  70 ;
        speed:                        130 km/h;
		
		cost_factor:                    1;
		running_cost_factor:            1;
        loading_speed:                	5; 
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics {
        default				:	sw_1993_ic_discoverer_lencheck;
		can_attach_wagon	:	sw_1993_ic_discoverer_attach ;
		create_effect		:	vfx_diesel_default ;
		additional_text		: 	string(STR_DESC_INTERCITY);
    }
	livery_override (item_pgt_mu_coach){
		default                     : sw_1993_ic_discoverer_rearcheck ;
		cargo_capacity              : 70 ;
		weight                      : 57 ;
		power                       : 700 ;
		length						: 8;
	}
}
# 1 "pgt.pnml" 2
# 1 "src/NEMU - Intercity/2010_ic_haste.pnml" 1
spriteset(spriteset_2010_ic_haste_f,   "gfx/NEMU - Intercity/2010_ic_haste.png") {template_32(7, 39)}
spriteset(spriteset_2010_ic_haste_r,   "gfx/NEMU - Intercity/2010_ic_haste.png") {template_32_r(7, 64)}
spriteset(spriteset_2010_ic_haste_c,    "gfx/NEMU - Intercity/2010_ic_haste.png") {template_32(7, 89)}
spriteset(spriteset_2010_ic_haste_s,    "gfx/NEMU - Intercity/2010_ic_haste.png") {template_32(185, 39)}

// C O D E


switch(FEAT_TRAINS, SELF, sw_2010_ic_haste_rearcheck, position_in_vehid_chain_from_end){
	0 : spriteset_2010_ic_haste_r;
	return spriteset_2010_ic_haste_c;
}

switch(FEAT_TRAINS, SELF, sw_2010_ic_haste_frontcheck, position_in_vehid_chain){
	0 : spriteset_2010_ic_haste_f;
	return sw_2010_ic_haste_rearcheck;
}

switch(FEAT_TRAINS, SELF, sw_2010_ic_haste_nextcheck2, position_in_consist_from_end){
	0 : spriteset_2010_ic_haste_s;
	return spriteset_2010_ic_haste_f;
}

switch(FEAT_TRAINS, SELF, sw_2010_ic_haste_nextcheck, position_in_vehid_chain_from_end){
	0 : sw_2010_ic_haste_nextcheck2;
	return spriteset_2010_ic_haste_s;
}

switch(FEAT_TRAINS, PARENT, sw_2010_ic_haste_lencheck, num_vehs_in_consist){
	1 : spriteset_2010_ic_haste_s;
	return sw_2010_ic_haste_nextcheck;
}

switch(FEAT_TRAINS, SELF, sw_2010_ic_haste_attach, vehicle_type_id){
	item_2010_ic_haste	: return CB_RESULT_ATTACH_ALLOW  ;
	item_pgt_mu_coach	: return CB_RESULT_ATTACH_ALLOW  ;
	return string(STR_NO_COUPLE_MU_SAME) ;
}

/* Define the actual train */
item(FEAT_TRAINS, item_2010_ic_haste) {
    /* Define properties first, make sure to set all of them */
    property {
        reliability_decay:            20;
		refittable_cargo_classes:	  CC_PASSENGERS ;
		cargo_allow_refit:			  [PASS, TOUR] ;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
		misc_flags: bitmask(TRAIN_FLAG_MU, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_2CC);
        track_type:                   RAIL;
        ai_special_flag:              AI_FLAG_PASSENGER;
        running_cost_base:            RUNNING_COST_DIESEL;
		length:						  8;
		
        refit_cost:                   0;
        // callback flags are not set manually
        ai_engine_rank:               0;
        engine_class:                 ENGINE_CLASS_DIESEL;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
		effect_spawn_model_and_powered : EFFECT_SPAWN_MODEL_DIESEL ;
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
        name:                         string(str_name_2010_ic_haste);
        climates_available:           ALL_CLIMATES; 
        introduction_date:            date(2010, 1, 1);
        model_life:                   40; //How long should this train be buyable
        vehicle_life:                 40; //How long should this train last before renewal
        tractive_effort_coefficient:  0.052;
        weight:                       57 ton;
        power:                        860 hp;
		cargo_capacity:				  80 ;
        speed:                        160 km/h;
		
		cost_factor:                    1;
		running_cost_factor:            1;
        loading_speed:                	5; 
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics {
        default				:	sw_2010_ic_haste_lencheck;
		can_attach_wagon	:	sw_2010_ic_haste_attach ;
		create_effect		:	vfx_diesel_default ;
		additional_text		: 	string(STR_DESC_INTERCITY);
    }
	livery_override (item_pgt_mu_coach){
		default                     : sw_2010_ic_haste_rearcheck ;
		cargo_capacity              : 80 ;
		weight                      : 57 ;
		power                       : 860 ;
		length						: 8;
	}
}
# 1 "pgt.pnml" 2

# 1 "src/NEMU - Suburban/1955_s_willie.pnml" 1
spriteset(spriteset_1955_s_willie_f,   "gfx/NEMU - Suburban/1955_s_willie.png") {template_32(7, 39)}
spriteset(spriteset_1955_s_willie_r,   "gfx/NEMU - Suburban/1955_s_willie.png") {template_32_r(7, 64)}
spriteset(spriteset_1955_s_willie_c,    "gfx/NEMU - Suburban/1955_s_willie.png") {template_32(7, 89)}
spriteset(spriteset_1955_s_willie_s,    "gfx/NEMU - Suburban/1955_s_willie.png") {template_32(185, 39)}

// C O D E


switch(FEAT_TRAINS, SELF, sw_1955_s_willie_rearcheck, position_in_vehid_chain_from_end){
	0 : spriteset_1955_s_willie_r;
	return spriteset_1955_s_willie_c;
}

switch(FEAT_TRAINS, SELF, sw_1955_s_willie_frontcheck, position_in_vehid_chain){
	0 : spriteset_1955_s_willie_f;
	return sw_1955_s_willie_rearcheck;
}

switch(FEAT_TRAINS, SELF, sw_1955_s_willie_nextcheck2, position_in_consist_from_end){
	0 : spriteset_1955_s_willie_s;
	return spriteset_1955_s_willie_f;
}

switch(FEAT_TRAINS, SELF, sw_1955_s_willie_nextcheck, position_in_vehid_chain_from_end){
	0 : sw_1955_s_willie_nextcheck2;
	return spriteset_1955_s_willie_s;
}

switch(FEAT_TRAINS, PARENT, sw_1955_s_willie_lencheck, num_vehs_in_consist){
	1 : spriteset_1955_s_willie_s;
	return sw_1955_s_willie_nextcheck;
}

switch(FEAT_TRAINS, SELF, sw_1955_s_willie_attach, vehicle_type_id){
	item_1955_s_willie	: return CB_RESULT_ATTACH_ALLOW  ;
	item_pgt_mu_coach	: return CB_RESULT_ATTACH_ALLOW  ;
	return string(STR_NO_COUPLE_MU_SAME) ;
}

/* Define the actual train */
item(FEAT_TRAINS, item_1955_s_willie) {
    /* Define properties first, make sure to set all of them */
    property {
        reliability_decay:            20;
		refittable_cargo_classes:	  CC_PASSENGERS ;
		cargo_allow_refit:			  [PASS, TOUR] ;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
		misc_flags: bitmask(TRAIN_FLAG_MU, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_2CC);
        track_type:                   RAIL;
        ai_special_flag:              AI_FLAG_PASSENGER;
        running_cost_base:            RUNNING_COST_DIESEL;
		length:						  8;
		
        refit_cost:                   0;
        // callback flags are not set manually
        ai_engine_rank:               0;
        engine_class:                 ENGINE_CLASS_DIESEL;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
		effect_spawn_model_and_powered : EFFECT_SPAWN_MODEL_DIESEL ;
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
        name:                         string(str_name_1955_s_willie);
        climates_available:           ALL_CLIMATES; 
        introduction_date:            date(1955, 1, 1);
        model_life:                   40; //How long should this train be buyable
        vehicle_life:                 40; //How long should this train last before renewal
        tractive_effort_coefficient:  0.076;
        weight:                       30 ton;
        power:                        300 hp;
		cargo_capacity:				  100 ;
        speed:                        100 km/h;
		
		cost_factor:                    1;
		running_cost_factor:            1;
        loading_speed:                	5; 
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics {
        default				:	sw_1955_s_willie_lencheck;
		can_attach_wagon	:	sw_1955_s_willie_attach ;
		create_effect		:	vfx_diesel_default ;
		additional_text		: 	string(STR_DESC_SUBURBAN);
    }
	livery_override (item_pgt_mu_coach){
		default                     : sw_1955_s_willie_rearcheck ;
		cargo_capacity              : 100 ;
		weight                      : 30 ;
		power                       : 300 ;
		length						: 8;
	}
}
# 1 "pgt.pnml" 2
# 1 "src/NEMU - Suburban/1975_s_buddy.pnml" 1
spriteset(spriteset_1975_s_buddy_f,   "gfx/NEMU - Suburban/1975_s_buddy.png") {template_32(7, 39)}
spriteset(spriteset_1975_s_buddy_r,   "gfx/NEMU - Suburban/1975_s_buddy.png") {template_32_r(7, 64)}
spriteset(spriteset_1975_s_buddy_c,    "gfx/NEMU - Suburban/1975_s_buddy.png") {template_32(7, 89)}
spriteset(spriteset_1975_s_buddy_s,    "gfx/NEMU - Suburban/1975_s_buddy.png") {template_32(185, 39)}

// C O D E


switch(FEAT_TRAINS, SELF, sw_1975_s_buddy_rearcheck, position_in_vehid_chain_from_end){
	0 : spriteset_1975_s_buddy_r;
	return spriteset_1975_s_buddy_c;
}

switch(FEAT_TRAINS, SELF, sw_1975_s_buddy_frontcheck, position_in_vehid_chain){
	0 : spriteset_1975_s_buddy_f;
	return sw_1975_s_buddy_rearcheck;
}

switch(FEAT_TRAINS, SELF, sw_1975_s_buddy_nextcheck2, position_in_consist_from_end){
	0 : spriteset_1975_s_buddy_s;
	return spriteset_1975_s_buddy_f;
}

switch(FEAT_TRAINS, SELF, sw_1975_s_buddy_nextcheck, position_in_vehid_chain_from_end){
	0 : sw_1975_s_buddy_nextcheck2;
	return spriteset_1975_s_buddy_s;
}

switch(FEAT_TRAINS, PARENT, sw_1975_s_buddy_lencheck, num_vehs_in_consist){
	1 : spriteset_1975_s_buddy_s;
	return sw_1975_s_buddy_nextcheck;
}

switch(FEAT_TRAINS, SELF, sw_1975_s_buddy_attach, vehicle_type_id){
	item_1975_s_buddy	: return CB_RESULT_ATTACH_ALLOW  ;
	item_pgt_mu_coach	: return CB_RESULT_ATTACH_ALLOW  ;
	return string(STR_NO_COUPLE_MU_SAME) ;
}

/* Define the actual train */
item(FEAT_TRAINS, item_1975_s_buddy) {
    /* Define properties first, make sure to set all of them */
    property {
        reliability_decay:            20;
		refittable_cargo_classes:	  CC_PASSENGERS ;
		cargo_allow_refit:			  [PASS, TOUR] ;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
		misc_flags: bitmask(TRAIN_FLAG_MU, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_2CC);
        track_type:                   RAIL;
        ai_special_flag:              AI_FLAG_PASSENGER;
        running_cost_base:            RUNNING_COST_DIESEL;
		length:						  8;
		
        refit_cost:                   0;
        // callback flags are not set manually
        ai_engine_rank:               0;
        engine_class:                 ENGINE_CLASS_DIESEL;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
		effect_spawn_model_and_powered : EFFECT_SPAWN_MODEL_DIESEL ;
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
        name:                         string(str_name_1975_s_buddy);
        climates_available:           ALL_CLIMATES; 
        introduction_date:            date(1975, 1, 1);
        model_life:                   40; //How long should this train be buyable
        vehicle_life:                 40; //How long should this train last before renewal
        tractive_effort_coefficient:  0.083;
        weight:                       42 ton;
        power:                        500 hp;
		cargo_capacity:				  110 ;
        speed:                        100 km/h;
		
		cost_factor:                    1;
		running_cost_factor:            1;
        loading_speed:                	5; 
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics {
        default				:	sw_1975_s_buddy_lencheck;
		can_attach_wagon	:	sw_1975_s_buddy_attach ;
		create_effect		:	vfx_diesel_default ;
		additional_text		: 	string(STR_DESC_SUBURBAN);
    }
	livery_override (item_pgt_mu_coach){
		default                     : sw_1975_s_buddy_rearcheck ;
		cargo_capacity              : 110 ;
		weight                      : 42 ;
		power                       : 500 ;
		length						: 8;
	}
}
# 1 "pgt.pnml" 2
# 1 "src/NEMU - Suburban/1995_s_warrigal.pnml" 1
spriteset(spriteset_1995_s_warrigal_f,   "gfx/NEMU - Suburban/1995_s_warrigal.png") {template_32(7, 39)}
spriteset(spriteset_1995_s_warrigal_r,   "gfx/NEMU - Suburban/1995_s_warrigal.png") {template_32_r(7, 64)}
spriteset(spriteset_1995_s_warrigal_c,    "gfx/NEMU - Suburban/1995_s_warrigal.png") {template_32(7, 89)}
spriteset(spriteset_1995_s_warrigal_s,    "gfx/NEMU - Suburban/1995_s_warrigal.png") {template_32(185, 39)}

// C O D E


switch(FEAT_TRAINS, SELF, sw_1995_s_warrigal_rearcheck, position_in_vehid_chain_from_end){
	0 : spriteset_1995_s_warrigal_r;
	return spriteset_1995_s_warrigal_c;
}

switch(FEAT_TRAINS, SELF, sw_1995_s_warrigal_frontcheck, position_in_vehid_chain){
	0 : spriteset_1995_s_warrigal_f;
	return sw_1995_s_warrigal_rearcheck;
}

switch(FEAT_TRAINS, SELF, sw_1995_s_warrigal_nextcheck2, position_in_consist_from_end){
	0 : spriteset_1995_s_warrigal_s;
	return spriteset_1995_s_warrigal_f;
}

switch(FEAT_TRAINS, SELF, sw_1995_s_warrigal_nextcheck, position_in_vehid_chain_from_end){
	0 : sw_1995_s_warrigal_nextcheck2;
	return spriteset_1995_s_warrigal_s;
}

switch(FEAT_TRAINS, PARENT, sw_1995_s_warrigal_lencheck, num_vehs_in_consist){
	1 : spriteset_1995_s_warrigal_s;
	return sw_1995_s_warrigal_nextcheck;
}

switch(FEAT_TRAINS, SELF, sw_1995_s_warrigal_attach, vehicle_type_id){
	item_1995_s_warrigal	: return CB_RESULT_ATTACH_ALLOW  ;
	item_pgt_mu_coach	: return CB_RESULT_ATTACH_ALLOW  ;
	return string(STR_NO_COUPLE_MU_SAME) ;
}

/* Define the actual train */
item(FEAT_TRAINS, item_1995_s_warrigal) {
    /* Define properties first, make sure to set all of them */
    property {
        reliability_decay:            20;
		refittable_cargo_classes:	  CC_PASSENGERS ;
		cargo_allow_refit:			  [PASS, TOUR] ;
        sprite_id:                    SPRITE_ID_NEW_TRAIN;
		misc_flags: bitmask(TRAIN_FLAG_MU, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_2CC);
        track_type:                   RAIL;
        ai_special_flag:              AI_FLAG_PASSENGER;
        running_cost_base:            RUNNING_COST_DIESEL;
		length:						  8;
		
        refit_cost:                   0;
        // callback flags are not set manually
        ai_engine_rank:               0;
        engine_class:                 ENGINE_CLASS_DIESEL;
        extra_power_per_wagon:        0 kW;
        air_drag_coefficient:         0.06;
		effect_spawn_model_and_powered : EFFECT_SPAWN_MODEL_DIESEL ;
        extra_weight_per_wagon:       0 ton;
        bitmask_vehicle_info:         0;
        name:                         string(str_name_1995_s_warrigal);
        climates_available:           ALL_CLIMATES; 
        introduction_date:            date(1995, 1, 1);
        model_life:                   40; //How long should this train be buyable
        vehicle_life:                 40; //How long should this train last before renewal
        tractive_effort_coefficient:  0.147;
        weight:                       48 ton;
        power:                        1000 hp;
		cargo_capacity:				  115 ;
        speed:                        115 km/h;
		
		cost_factor:                    1;
		running_cost_factor:            1;
        loading_speed:                	5; 
    }
    /* Define graphics and callbacks
     * Setting all callbacks is not needed, only define what is used */
    graphics {
        default				:	sw_1995_s_warrigal_lencheck;
		can_attach_wagon	:	sw_1995_s_warrigal_attach ;
		create_effect		:	vfx_diesel_default ;
		additional_text		: 	string(STR_DESC_SUBURBAN);
    }
	livery_override (item_pgt_mu_coach){
		default                     : sw_1995_s_warrigal_rearcheck ;
		cargo_capacity              : 115 ;
		weight                      : 48 ;
		power                       : 1000 ;
		length						: 8;
	}
}
# 1 "pgt.pnml" 2

# 1 "src/Diesel - Freight/1957_DLoco_F_Junee.pnml" 1
spriteset(spriteset_1957_dloco_f_junee,   "gfx/Diesel - Freight/1957_DLoco_F_Junee.png") {template_32(7, 39)}
spriteset(spriteset_1957_dloco_f_junee_r,   "gfx/Diesel - Freight/1957_DLoco_F_Junee.png") {template_32_r(7, 82)}
spriteset(spriteset_1957_dloco_f_junee_f,   "gfx/Diesel - Freight/1957_DLoco_F_Junee.png") {template_32(7, 82)}
spriteset(spriteset_1957_dloco_f_junee_f_r,   "gfx/Diesel - Freight/1957_DLoco_F_Junee.png") {template_32_r(7, 39)}

switch(FEAT_TRAINS, PARENT, sw_1957_dloco_f_junee_revcheck_flip, vehicle_is_reversed){
	0 : spriteset_1957_dloco_f_junee_f;
	return spriteset_1957_dloco_f_junee_f_r;
}

switch(FEAT_TRAINS, PARENT, sw_1957_dloco_f_junee_revcheck, vehicle_is_reversed){
	0 : spriteset_1957_dloco_f_junee;
	return spriteset_1957_dloco_f_junee_r;
}

switch(FEAT_TRAINS, PARENT, sw_1957_dloco_f_junee_flipcheck, vehicle_is_flipped){
	0 : sw_1957_dloco_f_junee_revcheck;
	return sw_1957_dloco_f_junee_revcheck_flip;
}

//Item

item (FEAT_TRAINS, item_1957_dloco_f_junee) {
	property {
		climates_available:				ALL_CLIMATES;
		model_life:						40;
		length:							8;
		vehicle_life:                   40 ;
		refittable_cargo_classes:		bitmask(CC_PASSENGERS);
		sprite_id:						SPRITE_ID_NEW_TRAIN;
		misc_flags:						bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_FLIP);
		refit_cost:						0;
		track_type:						RAIL;
		ai_special_flag:				AI_FLAG_CARGO;
		running_cost_base:				RUNNING_COST_DIESEL;
		dual_headed:					0;
		air_drag_coefficient:			0.08;
		bitmask_vehicle_info:			0;
		engine_class:                   ENGINE_CLASS_DIESEL ;
		effect_spawn_model_and_powered: EFFECT_SPAWN_MODEL_DIESEL ;
		
		introduction_date:				date(1957,1,1);
		name:							string(str_name_1957_dloco_f_junee);  
        tractive_effort_coefficient:    0.095;
        weight:                         74 ton;
        power:                          1000 hp;
        speed:                          100 km/h;
		
		cost_factor:                    1 ;
		running_cost_factor:            1 ;
	}
	graphics {
		default: 							sw_1957_dloco_f_junee_flipcheck;
		create_effect:                      vfx_diesel_default ;
	}
}
# 1 "pgt.pnml" 2
# 1 "src/Diesel - Freight/1966_DLoco_F_FreightCrisis.pnml" 1
spriteset(spriteset_1966_dloco_f_freightcrisis,   "gfx/Diesel - Freight/1966_dloco_f_freightcrisis.png") {template_32(7, 39)}
spriteset(spriteset_1966_dloco_f_freightcrisis_r,   "gfx/Diesel - Freight/1966_dloco_f_freightcrisis.png") {template_32_r(7, 82)}
spriteset(spriteset_1966_dloco_f_freightcrisis_f,   "gfx/Diesel - Freight/1966_dloco_f_freightcrisis.png") {template_32(7, 82)}
spriteset(spriteset_1966_dloco_f_freightcrisis_f_r,   "gfx/Diesel - Freight/1966_dloco_f_freightcrisis.png") {template_32_r(7, 39)}

switch(FEAT_TRAINS, PARENT, sw_1966_dloco_f_freightcrisis_revcheck_flip, vehicle_is_reversed){
	0 : spriteset_1966_dloco_f_freightcrisis_f;
	return spriteset_1966_dloco_f_freightcrisis_f_r;
}

switch(FEAT_TRAINS, PARENT, sw_1966_dloco_f_freightcrisis_revcheck, vehicle_is_reversed){
	0 : spriteset_1966_dloco_f_freightcrisis;
	return spriteset_1966_dloco_f_freightcrisis_r;
}

switch(FEAT_TRAINS, PARENT, sw_1966_dloco_f_freightcrisis_flipcheck, vehicle_is_flipped){
	0 : sw_1966_dloco_f_freightcrisis_revcheck;
	return sw_1966_dloco_f_freightcrisis_revcheck_flip;
}

//Item

item (FEAT_TRAINS, item_1966_dloco_f_freightcrisis) {
	property {
		climates_available:				ALL_CLIMATES;
		model_life:						40;
		length:							8;
		vehicle_life:                   40 ;
		refittable_cargo_classes:		bitmask(CC_PASSENGERS);
		sprite_id:						SPRITE_ID_NEW_TRAIN;
		misc_flags:						bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_FLIP);
		refit_cost:						0;
		track_type:						RAIL;
		ai_special_flag:				AI_FLAG_CARGO;
		running_cost_base:				RUNNING_COST_DIESEL;
		dual_headed:					0;
		air_drag_coefficient:			0.08;
		bitmask_vehicle_info:			0;
		engine_class:                   ENGINE_CLASS_DIESEL ;
		effect_spawn_model_and_powered: EFFECT_SPAWN_MODEL_DIESEL ;
		
		introduction_date:				date(1966,1,1);
		name:							string(str_name_1966_dloco_f_freightcrisis);  
        tractive_effort_coefficient:    0.138;
        weight:                         90 ton;
        power:                          1750 hp;
        speed:                          100 km/h;
		
		cost_factor:                    1 ;
		running_cost_factor:            1 ;
	}
	graphics {
		default: 							sw_1966_dloco_f_freightcrisis_flipcheck;
		create_effect:                      vfx_diesel_default ;
	}
}
# 1 "pgt.pnml" 2

# 1 "src/Diesel - Heavy Freight/1947_DLoco_HF_Shea.pnml" 1
spriteset(spriteset_1947_dloco_hf_shea,   "gfx/Diesel - Heavy Freight/1947_dloco_hf_shea.png") {template_32(7, 39)}
spriteset(spriteset_1947_dloco_hf_shea_r,   "gfx/Diesel - Heavy Freight/1947_dloco_hf_shea.png") {template_32_r(7, 82)}
spriteset(spriteset_1947_dloco_hf_shea_f,   "gfx/Diesel - Heavy Freight/1947_dloco_hf_shea.png") {template_32(7, 82)}
spriteset(spriteset_1947_dloco_hf_shea_f_r,   "gfx/Diesel - Heavy Freight/1947_dloco_hf_shea.png") {template_32_r(7, 39)}

switch(FEAT_TRAINS, PARENT, sw_1947_dloco_hf_shea_revcheck_flip, vehicle_is_reversed){
	0 : spriteset_1947_dloco_hf_shea_f;
	return spriteset_1947_dloco_hf_shea_f_r;
}

switch(FEAT_TRAINS, PARENT, sw_1947_dloco_hf_shea_revcheck, vehicle_is_reversed){
	0 : spriteset_1947_dloco_hf_shea;
	return spriteset_1947_dloco_hf_shea_r;
}

switch(FEAT_TRAINS, PARENT, sw_1947_dloco_hf_shea_flipcheck, vehicle_is_flipped){
	0 : sw_1947_dloco_hf_shea_revcheck;
	return sw_1947_dloco_hf_shea_revcheck_flip;
}

//Item

item (FEAT_TRAINS, item_1947_dloco_hf_shea) {
	property {
		climates_available:				ALL_CLIMATES;
		model_life:						40;
		length:							8;
		vehicle_life:                   40 ;
		refittable_cargo_classes:		bitmask(CC_PASSENGERS);
		sprite_id:						SPRITE_ID_NEW_TRAIN;
		misc_flags:						bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_FLIP);
		refit_cost:						0;
		track_type:						RAIL;
		ai_special_flag:				AI_FLAG_CARGO;
		running_cost_base:				RUNNING_COST_DIESEL;
		dual_headed:					0;
		air_drag_coefficient:			0.08;
		bitmask_vehicle_info:			0;
		engine_class:                   ENGINE_CLASS_DIESEL ;
		effect_spawn_model_and_powered: EFFECT_SPAWN_MODEL_DIESEL ;
		
		introduction_date:				date(1947,1,1);
		name:							string(str_name_1947_dloco_hf_shea);  
        tractive_effort_coefficient:    0.125;
        weight:                         114 ton;
        power:                          2000 hp;
        speed:                          80 km/h;
		
		cost_factor:                    1 ;
		running_cost_factor:            1 ;
	}
	graphics {
		default: 							sw_1947_dloco_hf_shea_flipcheck;
		create_effect:                      vfx_diesel_default ;
	}
}
# 1 "pgt.pnml" 2
# 1 "src/Diesel - Heavy Freight/1957_DLoco_HF_Globe.pnml" 1
spriteset(spriteset_1957_dloco_hf_globe,   "gfx/Diesel - Heavy Freight/1957_dloco_hf_globe.png") {template_32(7, 39)}
spriteset(spriteset_1957_dloco_hf_globe_r,   "gfx/Diesel - Heavy Freight/1957_dloco_hf_globe.png") {template_32_r(7, 82)}
spriteset(spriteset_1957_dloco_hf_globe_f,   "gfx/Diesel - Heavy Freight/1957_dloco_hf_globe.png") {template_32(7, 82)}
spriteset(spriteset_1957_dloco_hf_globe_f_r,   "gfx/Diesel - Heavy Freight/1957_dloco_hf_globe.png") {template_32_r(7, 39)}

switch(FEAT_TRAINS, PARENT, sw_1957_dloco_hf_globe_revcheck_flip, vehicle_is_reversed){
	0 : spriteset_1957_dloco_hf_globe_f;
	return spriteset_1957_dloco_hf_globe_f_r;
}

switch(FEAT_TRAINS, PARENT, sw_1957_dloco_hf_globe_revcheck, vehicle_is_reversed){
	0 : spriteset_1957_dloco_hf_globe;
	return spriteset_1957_dloco_hf_globe_r;
}

switch(FEAT_TRAINS, PARENT, sw_1957_dloco_hf_globe_flipcheck, vehicle_is_flipped){
	0 : sw_1957_dloco_hf_globe_revcheck;
	return sw_1957_dloco_hf_globe_revcheck_flip;
}

//Item

item (FEAT_TRAINS, item_1957_dloco_hf_globe) {
	property {
		climates_available:				ALL_CLIMATES;
		model_life:						40;
		length:							8;
		vehicle_life:                   40 ;
		refittable_cargo_classes:		bitmask(CC_PASSENGERS);
		sprite_id:						SPRITE_ID_NEW_TRAIN;
		misc_flags:						bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_FLIP);
		refit_cost:						0;
		track_type:						RAIL;
		ai_special_flag:				AI_FLAG_CARGO;
		running_cost_base:				RUNNING_COST_DIESEL;
		dual_headed:					0;
		air_drag_coefficient:			0.08;
		bitmask_vehicle_info:			0;
		engine_class:                   ENGINE_CLASS_DIESEL ;
		effect_spawn_model_and_powered: EFFECT_SPAWN_MODEL_DIESEL ;
		
		introduction_date:				date(1957,1,1);
		name:							string(str_name_1957_dloco_hf_globe);  
        tractive_effort_coefficient:    0.158;
        weight:                         112 ton;
        power:                          2000 hp;
        speed:                          100 km/h;
		
		cost_factor:                    1 ;
		running_cost_factor:            1 ;
	}
	graphics {
		default: 							sw_1957_dloco_hf_globe_flipcheck;
		create_effect:                      vfx_diesel_default ;
	}
}
# 1 "pgt.pnml" 2
# 1 "src/Diesel - Heavy Freight/1987_DLoco_HF_BigLad.pnml" 1
spriteset(spriteset_1987_dloco_hf_biglad,   "gfx/Diesel - Heavy Freight/1987_dloco_hf_biglad.png") {template_32(7, 39)}
spriteset(spriteset_1987_dloco_hf_biglad_r,   "gfx/Diesel - Heavy Freight/1987_dloco_hf_biglad.png") {template_32_r(7, 82)}
spriteset(spriteset_1987_dloco_hf_biglad_f,   "gfx/Diesel - Heavy Freight/1987_dloco_hf_biglad.png") {template_32(7, 82)}
spriteset(spriteset_1987_dloco_hf_biglad_f_r,   "gfx/Diesel - Heavy Freight/1987_dloco_hf_biglad.png") {template_32_r(7, 39)}

switch(FEAT_TRAINS, PARENT, sw_1987_dloco_hf_biglad_revcheck_flip, vehicle_is_reversed){
	0 : spriteset_1987_dloco_hf_biglad_f;
	return spriteset_1987_dloco_hf_biglad_f_r;
}

switch(FEAT_TRAINS, PARENT, sw_1987_dloco_hf_biglad_revcheck, vehicle_is_reversed){
	0 : spriteset_1987_dloco_hf_biglad;
	return spriteset_1987_dloco_hf_biglad_r;
}

switch(FEAT_TRAINS, PARENT, sw_1987_dloco_hf_biglad_flipcheck, vehicle_is_flipped){
	0 : sw_1987_dloco_hf_biglad_revcheck;
	return sw_1987_dloco_hf_biglad_revcheck_flip;
}

//Item

item (FEAT_TRAINS, item_1987_dloco_hf_biglad) {
	property {
		climates_available:				ALL_CLIMATES;
		model_life:						40;
		length:							8;
		vehicle_life:                   40 ;
		refittable_cargo_classes:		bitmask(CC_PASSENGERS);
		sprite_id:						SPRITE_ID_NEW_TRAIN;
		misc_flags:						bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_FLIP);
		refit_cost:						0;
		track_type:						RAIL;
		ai_special_flag:				AI_FLAG_CARGO;
		running_cost_base:				RUNNING_COST_DIESEL;
		dual_headed:					0;
		air_drag_coefficient:			0.08;
		bitmask_vehicle_info:			0;
		engine_class:                   ENGINE_CLASS_DIESEL ;
		effect_spawn_model_and_powered: EFFECT_SPAWN_MODEL_DIESEL ;
		
		introduction_date:				date(1987,1,1);
		name:							string(str_name_1987_dloco_hf_biglad);  
        tractive_effort_coefficient:    0.181;
        weight:                         130 ton;
        power:                          3300 hp;
        speed:                          115 km/h;
		
		cost_factor:                    1 ;
		running_cost_factor:            1 ;
	}
	graphics {
		default: 							sw_1987_dloco_hf_biglad_flipcheck;
		create_effect:                      vfx_diesel_default ;
	}
}
# 1 "pgt.pnml" 2

# 1 "src/Electric - Express Passenger/1986_ELoco_EP_BigThinker.pnml" 1
spriteset(spriteset_1986_eloco_ep_bigthinker,   "gfx/Electric - Express Passenger/1986_eloco_ep_bigthinker.png") {template_32(7, 39)}

//Item

item (FEAT_TRAINS, item_1986_eloco_ep_bigthinker) {
	property {
		climates_available:				ALL_CLIMATES;
		model_life:						40;
		length:							8;
		vehicle_life:                   40 ;
		refittable_cargo_classes:		bitmask(CC_PASSENGERS);
		sprite_id:						SPRITE_ID_NEW_TRAIN;
		misc_flags:						bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK);
		refit_cost:						0;
		track_type:						ELRL;
		ai_special_flag:				AI_FLAG_PASSENGER;
		running_cost_base:				RUNNING_COST_ELECTRIC;
		dual_headed:					0;
		air_drag_coefficient:			0.08;
		bitmask_vehicle_info:			0;
		engine_class:                   ENGINE_CLASS_ELECTRIC ;
		effect_spawn_model_and_powered: EFFECT_SPAWN_MODEL_ELECTRIC ;
		
		introduction_date:				date(1986,1,1);
		name:							string(str_name_1986_eloco_ep_bigthinker);  
        tractive_effort_coefficient:    0.130;
        weight:                         110 ton;
        power:                          4000 hp;
        speed:                          160 km/h;
		
		cost_factor:                    1 ;
		running_cost_factor:            1 ;
	}
	graphics {
		default: 							spriteset_1986_eloco_ep_bigthinker;
		create_effect:                      vfx_ohle ;
	}
}
# 1 "pgt.pnml" 2

# 1 "src/Electric - Freight/1923_Eloco_F_Lyttleton.pnml" 1
spriteset(spriteset_1923_eloco_f_lyttleton,   "gfx/Electric - Freight/1923_eloco_f_lyttleton.png") {template_32(7, 39)}
spriteset(spriteset_1923_eloco_f_lyttleton_r,   "gfx/Electric - Freight/1923_eloco_f_lyttleton.png") {template_32_r(7, 82)}
spriteset(spriteset_1923_eloco_f_lyttleton_f,   "gfx/Electric - Freight/1923_eloco_f_lyttleton.png") {template_32(7, 82)}
spriteset(spriteset_1923_eloco_f_lyttleton_f_r,   "gfx/Electric - Freight/1923_eloco_f_lyttleton.png") {template_32_r(7, 39)}

switch(FEAT_TRAINS, PARENT, sw_1923_eloco_f_lyttleton_revcheck_flip, vehicle_is_reversed){
	0 : spriteset_1923_eloco_f_lyttleton_f;
	return spriteset_1923_eloco_f_lyttleton_f_r;
}

switch(FEAT_TRAINS, PARENT, sw_1923_eloco_f_lyttleton_revcheck, vehicle_is_reversed){
	0 : spriteset_1923_eloco_f_lyttleton;
	return spriteset_1923_eloco_f_lyttleton_r;
}

switch(FEAT_TRAINS, PARENT, sw_1923_eloco_f_lyttleton_flipcheck, vehicle_is_flipped){
	0 : sw_1923_eloco_f_lyttleton_revcheck;
	return sw_1923_eloco_f_lyttleton_revcheck_flip;
}

//Item

item (FEAT_TRAINS, item_1923_eloco_f_lyttleton) {
	property {
		climates_available:				ALL_CLIMATES;
		model_life:						40;
		length:							8;
		vehicle_life:                   40 ;
		refittable_cargo_classes:		bitmask(CC_PASSENGERS);
		sprite_id:						SPRITE_ID_NEW_TRAIN;
		misc_flags:						bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_FLIP);
		refit_cost:						0;
		track_type:						ELRL;
		ai_special_flag:				AI_FLAG_CARGO;
		running_cost_base:				RUNNING_COST_STEAM;
		dual_headed:					0;
		air_drag_coefficient:			0.08;
		bitmask_vehicle_info:			0;
		engine_class:                   ENGINE_CLASS_ELECTRIC ;
		effect_spawn_model_and_powered: EFFECT_SPAWN_MODEL_ELECTRIC ;
		
		introduction_date:				date(1923,1,1);
		name:							string(str_name_1923_eloco_f_lyttleton);  
        tractive_effort_coefficient:    0.164;
        weight:                         65 ton;
        power:                          1500 hp;
        speed:                          80 km/h;
		
		cost_factor:                    1 ;
		running_cost_factor:            255 ;
	}
	graphics {
		default: 							sw_1923_eloco_f_lyttleton_flipcheck;
		create_effect:                      vfx_ohle ;
	}
}
# 1 "pgt.pnml" 2
# 1 "src/Electric - Freight/1931_Eloco_F_Baltic.pnml" 1
spriteset(spriteset_1931_eloco_f_baltic,   "gfx/Electric - Freight/1931_eloco_f_baltic.png") {template_32(7, 39)}
spriteset(spriteset_1931_eloco_f_baltic_r,   "gfx/Electric - Freight/1931_eloco_f_baltic.png") {template_32_r(7, 82)}
spriteset(spriteset_1931_eloco_f_baltic_f,   "gfx/Electric - Freight/1931_eloco_f_baltic.png") {template_32(7, 82)}
spriteset(spriteset_1931_eloco_f_baltic_f_r,   "gfx/Electric - Freight/1931_eloco_f_baltic.png") {template_32_r(7, 39)}

switch(FEAT_TRAINS, PARENT, sw_1931_eloco_f_baltic_revcheck_flip, vehicle_is_reversed){
	0 : spriteset_1931_eloco_f_baltic_f;
	return spriteset_1931_eloco_f_baltic_f_r;
}

switch(FEAT_TRAINS, PARENT, sw_1931_eloco_f_baltic_revcheck, vehicle_is_reversed){
	0 : spriteset_1931_eloco_f_baltic;
	return spriteset_1931_eloco_f_baltic_r;
}

switch(FEAT_TRAINS, PARENT, sw_1931_eloco_f_baltic_flipcheck, vehicle_is_flipped){
	0 : sw_1931_eloco_f_baltic_revcheck;
	return sw_1931_eloco_f_baltic_revcheck_flip;
}

//Item

item (FEAT_TRAINS, item_1931_eloco_f_baltic) {
	property {
		climates_available:				ALL_CLIMATES;
		model_life:						40;
		length:							8;
		vehicle_life:                   40 ;
		refittable_cargo_classes:		bitmask(CC_PASSENGERS);
		sprite_id:						SPRITE_ID_NEW_TRAIN;
		misc_flags:						bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_FLIP);
		refit_cost:						0;
		track_type:						ELRL;
		ai_special_flag:				AI_FLAG_CARGO;
		running_cost_base:				RUNNING_COST_DIESEL;
		dual_headed:					0;
		air_drag_coefficient:			0.08;
		bitmask_vehicle_info:			0;
		engine_class:                   ENGINE_CLASS_ELECTRIC ;
		effect_spawn_model_and_powered: EFFECT_SPAWN_MODEL_ELECTRIC ;
		
		introduction_date:				date(1931,1,1);
		name:							string(str_name_1931_eloco_f_baltic);  
        tractive_effort_coefficient:    0.190;
        weight:                         75 ton;
        power:                          2000 hp;
        speed:                          80 km/h;
		
		cost_factor:                    1 ;
		running_cost_factor:            255 ;
	}
	graphics {
		default: 							sw_1931_eloco_f_baltic_flipcheck;
		create_effect:                      vfx_ohle ;
	}
}
# 1 "pgt.pnml" 2
# 1 "src/Electric - Freight/1945_Eloco_F_Gippslander.pnml" 1
spriteset(spriteset_1945_eloco_f_gippslander,   "gfx/Electric - Freight/1945_eloco_f_gippslander.png") {template_32(7, 39)}
spriteset(spriteset_1945_eloco_f_gippslander_r,   "gfx/Electric - Freight/1945_eloco_f_gippslander.png") {template_32_r(7, 82)}
spriteset(spriteset_1945_eloco_f_gippslander_f,   "gfx/Electric - Freight/1945_eloco_f_gippslander.png") {template_32(7, 82)}
spriteset(spriteset_1945_eloco_f_gippslander_f_r,   "gfx/Electric - Freight/1945_eloco_f_gippslander.png") {template_32_r(7, 39)}

switch(FEAT_TRAINS, PARENT, sw_1945_eloco_f_gippslander_revcheck_flip, vehicle_is_reversed){
	0 : spriteset_1945_eloco_f_gippslander_f;
	return spriteset_1945_eloco_f_gippslander_f_r;
}

switch(FEAT_TRAINS, PARENT, sw_1945_eloco_f_gippslander_revcheck, vehicle_is_reversed){
	0 : spriteset_1945_eloco_f_gippslander;
	return spriteset_1945_eloco_f_gippslander_r;
}

switch(FEAT_TRAINS, PARENT, sw_1945_eloco_f_gippslander_flipcheck, vehicle_is_flipped){
	0 : sw_1945_eloco_f_gippslander_revcheck;
	return sw_1945_eloco_f_gippslander_revcheck_flip;
}

//Item

item (FEAT_TRAINS, item_1945_eloco_f_gippslander) {
	property {
		climates_available:				ALL_CLIMATES;
		model_life:						40;
		length:							8;
		vehicle_life:                   40 ;
		refittable_cargo_classes:		bitmask(CC_PASSENGERS);
		sprite_id:						SPRITE_ID_NEW_TRAIN;
		misc_flags:						bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_FLIP);
		refit_cost:						0;
		track_type:						ELRL;
		ai_special_flag:				AI_FLAG_CARGO;
		running_cost_base:				RUNNING_COST_ELECTRIC;
		dual_headed:					0;
		air_drag_coefficient:			0.08;
		bitmask_vehicle_info:			0;
		engine_class:                   ENGINE_CLASS_ELECTRIC ;
		effect_spawn_model_and_powered: EFFECT_SPAWN_MODEL_ELECTRIC ;
		
		introduction_date:				date(1945,1,1);
		name:							string(str_name_1945_eloco_f_gippslander);  
        tractive_effort_coefficient:    0.171;
        weight:                         100 ton;
        power:                          2400 hp;
        speed:                          100 km/h;
		
		cost_factor:                    1 ;
		running_cost_factor:            255 ;
	}
	graphics {
		default: 							sw_1945_eloco_f_gippslander_flipcheck;
		create_effect:                      vfx_ohle ;
	}
}
# 1 "pgt.pnml" 2
# 1 "src/Electric - Freight/1956_Eloco_F_Sheffielder.pnml" 1
spriteset(spriteset_1956_eloco_f_sheffielder,   "gfx/Electric - Freight/1956_eloco_f_sheffielder.png") {template_32(7, 39)}
spriteset(spriteset_1956_eloco_f_sheffielder_r,   "gfx/Electric - Freight/1956_eloco_f_sheffielder.png") {template_32_r(7, 82)}
spriteset(spriteset_1956_eloco_f_sheffielder_f,   "gfx/Electric - Freight/1956_eloco_f_sheffielder.png") {template_32(7, 82)}
spriteset(spriteset_1956_eloco_f_sheffielder_f_r,   "gfx/Electric - Freight/1956_eloco_f_sheffielder.png") {template_32_r(7, 39)}

switch(FEAT_TRAINS, PARENT, sw_1956_eloco_f_sheffielder_revcheck_flip, vehicle_is_reversed){
	0 : spriteset_1956_eloco_f_sheffielder_f;
	return spriteset_1956_eloco_f_sheffielder_f_r;
}

switch(FEAT_TRAINS, PARENT, sw_1956_eloco_f_sheffielder_revcheck, vehicle_is_reversed){
	0 : spriteset_1956_eloco_f_sheffielder;
	return spriteset_1956_eloco_f_sheffielder_r;
}

switch(FEAT_TRAINS, PARENT, sw_1956_eloco_f_sheffielder_flipcheck, vehicle_is_flipped){
	0 : sw_1956_eloco_f_sheffielder_revcheck;
	return sw_1956_eloco_f_sheffielder_revcheck_flip;
}

//Item

item (FEAT_TRAINS, item_1956_eloco_f_sheffielder) {
	property {
		climates_available:				ALL_CLIMATES;
		model_life:						40;
		length:							8;
		vehicle_life:                   40 ;
		refittable_cargo_classes:		bitmask(CC_PASSENGERS);
		sprite_id:						SPRITE_ID_NEW_TRAIN;
		misc_flags:						bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_FLIP);
		refit_cost:						0;
		track_type:						ELRL;
		ai_special_flag:				AI_FLAG_CARGO;
		running_cost_base:				RUNNING_COST_ELECTRIC;
		dual_headed:					0;
		air_drag_coefficient:			0.08;
		bitmask_vehicle_info:			0;
		engine_class:                   ENGINE_CLASS_ELECTRIC ;
		effect_spawn_model_and_powered: EFFECT_SPAWN_MODEL_ELECTRIC ;
		
		introduction_date:				date(1956,1,1);
		name:							string(str_name_1956_eloco_f_sheffielder);  
        tractive_effort_coefficient:    0.241;
        weight:                         112 ton;
        power:                          3800 hp;
        speed:                          100 km/h;
		
		cost_factor:                    1 ;
		running_cost_factor:            1 ;
	}
	graphics {
		default: 							sw_1956_eloco_f_sheffielder_flipcheck;
		create_effect:                      vfx_ohle ;
	}
}
# 1 "pgt.pnml" 2
# 1 "src/Electric - Freight/1964_Eloco_F_Sherpa.pnml" 1
spriteset(spriteset_1964_eloco_f_sherpa,   "gfx/Electric - Freight/1964_eloco_f_sherpa.png") {template_32(7, 39)}
spriteset(spriteset_1964_eloco_f_sherpa_r,   "gfx/Electric - Freight/1964_eloco_f_sherpa.png") {template_32_r(7, 82)}
spriteset(spriteset_1964_eloco_f_sherpa_f,   "gfx/Electric - Freight/1964_eloco_f_sherpa.png") {template_32(7, 82)}
spriteset(spriteset_1964_eloco_f_sherpa_f_r,   "gfx/Electric - Freight/1964_eloco_f_sherpa.png") {template_32_r(7, 39)}

switch(FEAT_TRAINS, PARENT, sw_1964_eloco_f_sherpa_revcheck_flip, vehicle_is_reversed){
	0 : spriteset_1964_eloco_f_sherpa_f;
	return spriteset_1964_eloco_f_sherpa_f_r;
}

switch(FEAT_TRAINS, PARENT, sw_1964_eloco_f_sherpa_revcheck, vehicle_is_reversed){
	0 : spriteset_1964_eloco_f_sherpa;
	return spriteset_1964_eloco_f_sherpa_r;
}

switch(FEAT_TRAINS, PARENT, sw_1964_eloco_f_sherpa_flipcheck, vehicle_is_flipped){
	0 : sw_1964_eloco_f_sherpa_revcheck;
	return sw_1964_eloco_f_sherpa_revcheck_flip;
}

//Item

item (FEAT_TRAINS, item_1964_eloco_f_sherpa) {
	property {
		climates_available:				ALL_CLIMATES;
		model_life:						40;
		length:							8;
		vehicle_life:                   40 ;
		refittable_cargo_classes:		bitmask(CC_PASSENGERS);
		sprite_id:						SPRITE_ID_NEW_TRAIN;
		misc_flags:						bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_FLIP);
		refit_cost:						0;
		track_type:						ELRL;
		ai_special_flag:				AI_FLAG_CARGO;
		running_cost_base:				RUNNING_COST_ELECTRIC;
		dual_headed:					0;
		air_drag_coefficient:			0.08;
		bitmask_vehicle_info:			0;
		engine_class:                   ENGINE_CLASS_ELECTRIC ;
		effect_spawn_model_and_powered: EFFECT_SPAWN_MODEL_ELECTRIC ;
		
		introduction_date:				date(1964,1,1);
		name:							string(str_name_1964_eloco_f_sherpa);  
        tractive_effort_coefficient:    0.264;
        weight:                         108 ton;
        power:                          4000 hp;
        speed:                          100 km/h;
		
		cost_factor:                    1 ;
		running_cost_factor:            1 ;
	}
	graphics {
		default: 							sw_1964_eloco_f_sherpa_flipcheck;
		create_effect:                      vfx_ohle ;
	}
}
# 1 "pgt.pnml" 2
# 1 "src/Electric - Freight/1976_Eloco_F_Colomatta.pnml" 1
spriteset(spriteset_1976_eloco_f_colomatta,   "gfx/Electric - Freight/1976_eloco_f_colomatta.png") {template_32(7, 39)}
spriteset(spriteset_1976_eloco_f_colomatta_r,   "gfx/Electric - Freight/1976_eloco_f_colomatta.png") {template_32_r(7, 82)}
spriteset(spriteset_1976_eloco_f_colomatta_f,   "gfx/Electric - Freight/1976_eloco_f_colomatta.png") {template_32(7, 82)}
spriteset(spriteset_1976_eloco_f_colomatta_f_r,   "gfx/Electric - Freight/1976_eloco_f_colomatta.png") {template_32_r(7, 39)}

switch(FEAT_TRAINS, PARENT, sw_1976_eloco_f_colomatta_revcheck_flip, vehicle_is_reversed){
	0 : spriteset_1976_eloco_f_colomatta_f;
	return spriteset_1976_eloco_f_colomatta_f_r;
}

switch(FEAT_TRAINS, PARENT, sw_1976_eloco_f_colomatta_revcheck, vehicle_is_reversed){
	0 : spriteset_1976_eloco_f_colomatta;
	return spriteset_1976_eloco_f_colomatta_r;
}

switch(FEAT_TRAINS, PARENT, sw_1976_eloco_f_colomatta_flipcheck, vehicle_is_flipped){
	0 : sw_1976_eloco_f_colomatta_revcheck;
	return sw_1976_eloco_f_colomatta_revcheck_flip;
}

//Item

item (FEAT_TRAINS, item_1976_eloco_f_colomatta) {
	property {
		climates_available:				ALL_CLIMATES;
		model_life:						40;
		length:							8;
		vehicle_life:                   40 ;
		refittable_cargo_classes:		bitmask(CC_PASSENGERS);
		sprite_id:						SPRITE_ID_NEW_TRAIN;
		misc_flags:						bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_FLIP);
		refit_cost:						0;
		track_type:						ELRL;
		ai_special_flag:				AI_FLAG_CARGO;
		running_cost_base:				RUNNING_COST_ELECTRIC;
		dual_headed:					0;
		air_drag_coefficient:			0.08;
		bitmask_vehicle_info:			0;
		engine_class:                   ENGINE_CLASS_ELECTRIC ;
		effect_spawn_model_and_powered: EFFECT_SPAWN_MODEL_ELECTRIC ;
		
		introduction_date:				date(1976,1,1);
		name:							string(str_name_1976_eloco_f_colomatta);  
        tractive_effort_coefficient:    0.261;
        weight:                         123 ton;
        power:                          4500 hp;
        speed:                          100 km/h;
		
		cost_factor:                    1 ;
		running_cost_factor:            1 ;
	}
	graphics {
		default: 							sw_1976_eloco_f_colomatta_flipcheck;
		create_effect:                      vfx_ohle ;
	}
}
# 1 "pgt.pnml" 2
# 1 "src/Electric - Freight/1983_Eloco_F_Nikkin.pnml" 1
spriteset(spriteset_1983_eloco_f_nikkin,   "gfx/Electric - Freight/1983_eloco_f_nikkin.png") {template_32(7, 39)}
spriteset(spriteset_1983_eloco_f_nikkin_r,   "gfx/Electric - Freight/1983_eloco_f_nikkin.png") {template_32_r(7, 82)}
spriteset(spriteset_1983_eloco_f_nikkin_f,   "gfx/Electric - Freight/1983_eloco_f_nikkin.png") {template_32(7, 82)}
spriteset(spriteset_1983_eloco_f_nikkin_f_r,   "gfx/Electric - Freight/1983_eloco_f_nikkin.png") {template_32_r(7, 39)}

switch(FEAT_TRAINS, PARENT, sw_1983_eloco_f_nikkin_revcheck_flip, vehicle_is_reversed){
	0 : spriteset_1983_eloco_f_nikkin_f;
	return spriteset_1983_eloco_f_nikkin_f_r;
}

switch(FEAT_TRAINS, PARENT, sw_1983_eloco_f_nikkin_revcheck, vehicle_is_reversed){
	0 : spriteset_1983_eloco_f_nikkin;
	return spriteset_1983_eloco_f_nikkin_r;
}

switch(FEAT_TRAINS, PARENT, sw_1983_eloco_f_nikkin_flipcheck, vehicle_is_flipped){
	0 : sw_1983_eloco_f_nikkin_revcheck;
	return sw_1983_eloco_f_nikkin_revcheck_flip;
}

//Item

item (FEAT_TRAINS, item_1983_eloco_f_nikkin) {
	property {
		climates_available:				ALL_CLIMATES;
		model_life:						40;
		length:							8;
		vehicle_life:                   40 ;
		refittable_cargo_classes:		bitmask(CC_PASSENGERS);
		sprite_id:						SPRITE_ID_NEW_TRAIN;
		misc_flags:						bitmask(TRAIN_FLAG_2CC, TRAIN_FLAG_SPRITE_STACK, TRAIN_FLAG_FLIP);
		refit_cost:						0;
		track_type:						ELRL;
		ai_special_flag:				AI_FLAG_CARGO;
		running_cost_base:				RUNNING_COST_ELECTRIC;
		dual_headed:					0;
		air_drag_coefficient:			0.08;
		bitmask_vehicle_info:			0;
		engine_class:                   ENGINE_CLASS_ELECTRIC ;
		effect_spawn_model_and_powered: EFFECT_SPAWN_MODEL_ELECTRIC ;
		
		introduction_date:				date(1983,1,1);
		name:							string(str_name_1983_eloco_f_nikkin);  
        tractive_effort_coefficient:    0.300;
        weight:                         119 ton;
        power:                          5000 hp;
        speed:                          115 km/h;
		
		cost_factor:                    1 ;
		running_cost_factor:            1 ;
	}
	graphics {
		default: 							sw_1983_eloco_f_nikkin_flipcheck;
		create_effect:                      vfx_ohle ;
	}
}
# 1 "pgt.pnml" 2
